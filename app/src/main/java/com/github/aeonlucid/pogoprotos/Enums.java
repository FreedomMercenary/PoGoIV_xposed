// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/github/aeonlucid/pogoprotos/Enums.proto

package com.github.aeonlucid.pogoprotos;

public final class Enums {
  private Enums() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId}
   */
  public enum PokemonFamilyId
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FAMILY_UNSET = 0;</code>
     */
    FAMILY_UNSET(0),
    /**
     * <code>FAMILY_BULBASAUR = 1;</code>
     */
    FAMILY_BULBASAUR(1),
    /**
     * <code>FAMILY_CHARMANDER = 4;</code>
     */
    FAMILY_CHARMANDER(4),
    /**
     * <code>FAMILY_SQUIRTLE = 7;</code>
     */
    FAMILY_SQUIRTLE(7),
    /**
     * <code>FAMILY_CATERPIE = 10;</code>
     */
    FAMILY_CATERPIE(10),
    /**
     * <code>FAMILY_WEEDLE = 13;</code>
     */
    FAMILY_WEEDLE(13),
    /**
     * <code>FAMILY_PIDGEY = 16;</code>
     */
    FAMILY_PIDGEY(16),
    /**
     * <code>FAMILY_RATTATA = 19;</code>
     */
    FAMILY_RATTATA(19),
    /**
     * <code>FAMILY_SPEAROW = 21;</code>
     */
    FAMILY_SPEAROW(21),
    /**
     * <code>FAMILY_EKANS = 23;</code>
     */
    FAMILY_EKANS(23),
    /**
     * <code>FAMILY_PIKACHU = 25;</code>
     */
    FAMILY_PIKACHU(25),
    /**
     * <code>FAMILY_SANDSHREW = 27;</code>
     */
    FAMILY_SANDSHREW(27),
    /**
     * <code>FAMILY_NIDORAN_FEMALE = 29;</code>
     */
    FAMILY_NIDORAN_FEMALE(29),
    /**
     * <code>FAMILY_NIDORAN_MALE = 32;</code>
     */
    FAMILY_NIDORAN_MALE(32),
    /**
     * <code>FAMILY_CLEFAIRY = 35;</code>
     */
    FAMILY_CLEFAIRY(35),
    /**
     * <code>FAMILY_VULPIX = 37;</code>
     */
    FAMILY_VULPIX(37),
    /**
     * <code>FAMILY_JIGGLYPUFF = 39;</code>
     */
    FAMILY_JIGGLYPUFF(39),
    /**
     * <code>FAMILY_ZUBAT = 41;</code>
     */
    FAMILY_ZUBAT(41),
    /**
     * <code>FAMILY_ODDISH = 43;</code>
     */
    FAMILY_ODDISH(43),
    /**
     * <code>FAMILY_PARAS = 46;</code>
     */
    FAMILY_PARAS(46),
    /**
     * <code>FAMILY_VENONAT = 48;</code>
     */
    FAMILY_VENONAT(48),
    /**
     * <code>FAMILY_DIGLETT = 50;</code>
     */
    FAMILY_DIGLETT(50),
    /**
     * <code>FAMILY_MEOWTH = 52;</code>
     */
    FAMILY_MEOWTH(52),
    /**
     * <code>FAMILY_PSYDUCK = 54;</code>
     */
    FAMILY_PSYDUCK(54),
    /**
     * <code>FAMILY_MANKEY = 56;</code>
     */
    FAMILY_MANKEY(56),
    /**
     * <code>FAMILY_GROWLITHE = 58;</code>
     */
    FAMILY_GROWLITHE(58),
    /**
     * <code>FAMILY_POLIWAG = 60;</code>
     */
    FAMILY_POLIWAG(60),
    /**
     * <code>FAMILY_ABRA = 63;</code>
     */
    FAMILY_ABRA(63),
    /**
     * <code>FAMILY_MACHOP = 66;</code>
     */
    FAMILY_MACHOP(66),
    /**
     * <code>FAMILY_BELLSPROUT = 69;</code>
     */
    FAMILY_BELLSPROUT(69),
    /**
     * <code>FAMILY_TENTACOOL = 72;</code>
     */
    FAMILY_TENTACOOL(72),
    /**
     * <code>FAMILY_GEODUDE = 74;</code>
     */
    FAMILY_GEODUDE(74),
    /**
     * <code>FAMILY_PONYTA = 77;</code>
     */
    FAMILY_PONYTA(77),
    /**
     * <code>FAMILY_SLOWPOKE = 79;</code>
     */
    FAMILY_SLOWPOKE(79),
    /**
     * <code>FAMILY_MAGNEMITE = 81;</code>
     */
    FAMILY_MAGNEMITE(81),
    /**
     * <code>FAMILY_FARFETCHD = 83;</code>
     */
    FAMILY_FARFETCHD(83),
    /**
     * <code>FAMILY_DODUO = 84;</code>
     */
    FAMILY_DODUO(84),
    /**
     * <code>FAMILY_SEEL = 86;</code>
     */
    FAMILY_SEEL(86),
    /**
     * <code>FAMILY_GRIMER = 88;</code>
     */
    FAMILY_GRIMER(88),
    /**
     * <code>FAMILY_SHELLDER = 90;</code>
     */
    FAMILY_SHELLDER(90),
    /**
     * <code>FAMILY_GASTLY = 92;</code>
     */
    FAMILY_GASTLY(92),
    /**
     * <code>FAMILY_ONIX = 95;</code>
     */
    FAMILY_ONIX(95),
    /**
     * <code>FAMILY_DROWZEE = 96;</code>
     */
    FAMILY_DROWZEE(96),
    /**
     * <code>FAMILY_HYPNO = 97;</code>
     */
    FAMILY_HYPNO(97),
    /**
     * <code>FAMILY_KRABBY = 98;</code>
     */
    FAMILY_KRABBY(98),
    /**
     * <code>FAMILY_VOLTORB = 100;</code>
     */
    FAMILY_VOLTORB(100),
    /**
     * <code>FAMILY_EXEGGCUTE = 102;</code>
     */
    FAMILY_EXEGGCUTE(102),
    /**
     * <code>FAMILY_CUBONE = 104;</code>
     */
    FAMILY_CUBONE(104),
    /**
     * <code>FAMILY_HITMONLEE = 106;</code>
     */
    FAMILY_HITMONLEE(106),
    /**
     * <code>FAMILY_HITMONCHAN = 107;</code>
     */
    FAMILY_HITMONCHAN(107),
    /**
     * <code>FAMILY_LICKITUNG = 108;</code>
     */
    FAMILY_LICKITUNG(108),
    /**
     * <code>FAMILY_KOFFING = 109;</code>
     */
    FAMILY_KOFFING(109),
    /**
     * <code>FAMILY_RHYHORN = 111;</code>
     */
    FAMILY_RHYHORN(111),
    /**
     * <code>FAMILY_CHANSEY = 113;</code>
     */
    FAMILY_CHANSEY(113),
    /**
     * <code>FAMILY_TANGELA = 114;</code>
     */
    FAMILY_TANGELA(114),
    /**
     * <code>FAMILY_KANGASKHAN = 115;</code>
     */
    FAMILY_KANGASKHAN(115),
    /**
     * <code>FAMILY_HORSEA = 116;</code>
     */
    FAMILY_HORSEA(116),
    /**
     * <code>FAMILY_GOLDEEN = 118;</code>
     */
    FAMILY_GOLDEEN(118),
    /**
     * <code>FAMILY_STARYU = 120;</code>
     */
    FAMILY_STARYU(120),
    /**
     * <code>FAMILY_MR_MIME = 122;</code>
     */
    FAMILY_MR_MIME(122),
    /**
     * <code>FAMILY_SCYTHER = 123;</code>
     */
    FAMILY_SCYTHER(123),
    /**
     * <code>FAMILY_JYNX = 124;</code>
     */
    FAMILY_JYNX(124),
    /**
     * <code>FAMILY_ELECTABUZZ = 125;</code>
     */
    FAMILY_ELECTABUZZ(125),
    /**
     * <code>FAMILY_MAGMAR = 126;</code>
     */
    FAMILY_MAGMAR(126),
    /**
     * <code>FAMILY_PINSIR = 127;</code>
     */
    FAMILY_PINSIR(127),
    /**
     * <code>FAMILY_TAUROS = 128;</code>
     */
    FAMILY_TAUROS(128),
    /**
     * <code>FAMILY_MAGIKARP = 129;</code>
     */
    FAMILY_MAGIKARP(129),
    /**
     * <code>FAMILY_LAPRAS = 131;</code>
     */
    FAMILY_LAPRAS(131),
    /**
     * <code>FAMILY_DITTO = 132;</code>
     */
    FAMILY_DITTO(132),
    /**
     * <code>FAMILY_EEVEE = 133;</code>
     */
    FAMILY_EEVEE(133),
    /**
     * <code>FAMILY_PORYGON = 137;</code>
     */
    FAMILY_PORYGON(137),
    /**
     * <code>FAMILY_OMANYTE = 138;</code>
     */
    FAMILY_OMANYTE(138),
    /**
     * <code>FAMILY_KABUTO = 140;</code>
     */
    FAMILY_KABUTO(140),
    /**
     * <code>FAMILY_AERODACTYL = 142;</code>
     */
    FAMILY_AERODACTYL(142),
    /**
     * <code>FAMILY_SNORLAX = 143;</code>
     */
    FAMILY_SNORLAX(143),
    /**
     * <code>FAMILY_ARTICUNO = 144;</code>
     */
    FAMILY_ARTICUNO(144),
    /**
     * <code>FAMILY_ZAPDOS = 145;</code>
     */
    FAMILY_ZAPDOS(145),
    /**
     * <code>FAMILY_MOLTRES = 146;</code>
     */
    FAMILY_MOLTRES(146),
    /**
     * <code>FAMILY_DRATINI = 147;</code>
     */
    FAMILY_DRATINI(147),
    /**
     * <code>FAMILY_MEWTWO = 150;</code>
     */
    FAMILY_MEWTWO(150),
    /**
     * <code>FAMILY_MEW = 151;</code>
     */
    FAMILY_MEW(151),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>FAMILY_UNSET = 0;</code>
     */
    public static final int FAMILY_UNSET_VALUE = 0;
    /**
     * <code>FAMILY_BULBASAUR = 1;</code>
     */
    public static final int FAMILY_BULBASAUR_VALUE = 1;
    /**
     * <code>FAMILY_CHARMANDER = 4;</code>
     */
    public static final int FAMILY_CHARMANDER_VALUE = 4;
    /**
     * <code>FAMILY_SQUIRTLE = 7;</code>
     */
    public static final int FAMILY_SQUIRTLE_VALUE = 7;
    /**
     * <code>FAMILY_CATERPIE = 10;</code>
     */
    public static final int FAMILY_CATERPIE_VALUE = 10;
    /**
     * <code>FAMILY_WEEDLE = 13;</code>
     */
    public static final int FAMILY_WEEDLE_VALUE = 13;
    /**
     * <code>FAMILY_PIDGEY = 16;</code>
     */
    public static final int FAMILY_PIDGEY_VALUE = 16;
    /**
     * <code>FAMILY_RATTATA = 19;</code>
     */
    public static final int FAMILY_RATTATA_VALUE = 19;
    /**
     * <code>FAMILY_SPEAROW = 21;</code>
     */
    public static final int FAMILY_SPEAROW_VALUE = 21;
    /**
     * <code>FAMILY_EKANS = 23;</code>
     */
    public static final int FAMILY_EKANS_VALUE = 23;
    /**
     * <code>FAMILY_PIKACHU = 25;</code>
     */
    public static final int FAMILY_PIKACHU_VALUE = 25;
    /**
     * <code>FAMILY_SANDSHREW = 27;</code>
     */
    public static final int FAMILY_SANDSHREW_VALUE = 27;
    /**
     * <code>FAMILY_NIDORAN_FEMALE = 29;</code>
     */
    public static final int FAMILY_NIDORAN_FEMALE_VALUE = 29;
    /**
     * <code>FAMILY_NIDORAN_MALE = 32;</code>
     */
    public static final int FAMILY_NIDORAN_MALE_VALUE = 32;
    /**
     * <code>FAMILY_CLEFAIRY = 35;</code>
     */
    public static final int FAMILY_CLEFAIRY_VALUE = 35;
    /**
     * <code>FAMILY_VULPIX = 37;</code>
     */
    public static final int FAMILY_VULPIX_VALUE = 37;
    /**
     * <code>FAMILY_JIGGLYPUFF = 39;</code>
     */
    public static final int FAMILY_JIGGLYPUFF_VALUE = 39;
    /**
     * <code>FAMILY_ZUBAT = 41;</code>
     */
    public static final int FAMILY_ZUBAT_VALUE = 41;
    /**
     * <code>FAMILY_ODDISH = 43;</code>
     */
    public static final int FAMILY_ODDISH_VALUE = 43;
    /**
     * <code>FAMILY_PARAS = 46;</code>
     */
    public static final int FAMILY_PARAS_VALUE = 46;
    /**
     * <code>FAMILY_VENONAT = 48;</code>
     */
    public static final int FAMILY_VENONAT_VALUE = 48;
    /**
     * <code>FAMILY_DIGLETT = 50;</code>
     */
    public static final int FAMILY_DIGLETT_VALUE = 50;
    /**
     * <code>FAMILY_MEOWTH = 52;</code>
     */
    public static final int FAMILY_MEOWTH_VALUE = 52;
    /**
     * <code>FAMILY_PSYDUCK = 54;</code>
     */
    public static final int FAMILY_PSYDUCK_VALUE = 54;
    /**
     * <code>FAMILY_MANKEY = 56;</code>
     */
    public static final int FAMILY_MANKEY_VALUE = 56;
    /**
     * <code>FAMILY_GROWLITHE = 58;</code>
     */
    public static final int FAMILY_GROWLITHE_VALUE = 58;
    /**
     * <code>FAMILY_POLIWAG = 60;</code>
     */
    public static final int FAMILY_POLIWAG_VALUE = 60;
    /**
     * <code>FAMILY_ABRA = 63;</code>
     */
    public static final int FAMILY_ABRA_VALUE = 63;
    /**
     * <code>FAMILY_MACHOP = 66;</code>
     */
    public static final int FAMILY_MACHOP_VALUE = 66;
    /**
     * <code>FAMILY_BELLSPROUT = 69;</code>
     */
    public static final int FAMILY_BELLSPROUT_VALUE = 69;
    /**
     * <code>FAMILY_TENTACOOL = 72;</code>
     */
    public static final int FAMILY_TENTACOOL_VALUE = 72;
    /**
     * <code>FAMILY_GEODUDE = 74;</code>
     */
    public static final int FAMILY_GEODUDE_VALUE = 74;
    /**
     * <code>FAMILY_PONYTA = 77;</code>
     */
    public static final int FAMILY_PONYTA_VALUE = 77;
    /**
     * <code>FAMILY_SLOWPOKE = 79;</code>
     */
    public static final int FAMILY_SLOWPOKE_VALUE = 79;
    /**
     * <code>FAMILY_MAGNEMITE = 81;</code>
     */
    public static final int FAMILY_MAGNEMITE_VALUE = 81;
    /**
     * <code>FAMILY_FARFETCHD = 83;</code>
     */
    public static final int FAMILY_FARFETCHD_VALUE = 83;
    /**
     * <code>FAMILY_DODUO = 84;</code>
     */
    public static final int FAMILY_DODUO_VALUE = 84;
    /**
     * <code>FAMILY_SEEL = 86;</code>
     */
    public static final int FAMILY_SEEL_VALUE = 86;
    /**
     * <code>FAMILY_GRIMER = 88;</code>
     */
    public static final int FAMILY_GRIMER_VALUE = 88;
    /**
     * <code>FAMILY_SHELLDER = 90;</code>
     */
    public static final int FAMILY_SHELLDER_VALUE = 90;
    /**
     * <code>FAMILY_GASTLY = 92;</code>
     */
    public static final int FAMILY_GASTLY_VALUE = 92;
    /**
     * <code>FAMILY_ONIX = 95;</code>
     */
    public static final int FAMILY_ONIX_VALUE = 95;
    /**
     * <code>FAMILY_DROWZEE = 96;</code>
     */
    public static final int FAMILY_DROWZEE_VALUE = 96;
    /**
     * <code>FAMILY_HYPNO = 97;</code>
     */
    public static final int FAMILY_HYPNO_VALUE = 97;
    /**
     * <code>FAMILY_KRABBY = 98;</code>
     */
    public static final int FAMILY_KRABBY_VALUE = 98;
    /**
     * <code>FAMILY_VOLTORB = 100;</code>
     */
    public static final int FAMILY_VOLTORB_VALUE = 100;
    /**
     * <code>FAMILY_EXEGGCUTE = 102;</code>
     */
    public static final int FAMILY_EXEGGCUTE_VALUE = 102;
    /**
     * <code>FAMILY_CUBONE = 104;</code>
     */
    public static final int FAMILY_CUBONE_VALUE = 104;
    /**
     * <code>FAMILY_HITMONLEE = 106;</code>
     */
    public static final int FAMILY_HITMONLEE_VALUE = 106;
    /**
     * <code>FAMILY_HITMONCHAN = 107;</code>
     */
    public static final int FAMILY_HITMONCHAN_VALUE = 107;
    /**
     * <code>FAMILY_LICKITUNG = 108;</code>
     */
    public static final int FAMILY_LICKITUNG_VALUE = 108;
    /**
     * <code>FAMILY_KOFFING = 109;</code>
     */
    public static final int FAMILY_KOFFING_VALUE = 109;
    /**
     * <code>FAMILY_RHYHORN = 111;</code>
     */
    public static final int FAMILY_RHYHORN_VALUE = 111;
    /**
     * <code>FAMILY_CHANSEY = 113;</code>
     */
    public static final int FAMILY_CHANSEY_VALUE = 113;
    /**
     * <code>FAMILY_TANGELA = 114;</code>
     */
    public static final int FAMILY_TANGELA_VALUE = 114;
    /**
     * <code>FAMILY_KANGASKHAN = 115;</code>
     */
    public static final int FAMILY_KANGASKHAN_VALUE = 115;
    /**
     * <code>FAMILY_HORSEA = 116;</code>
     */
    public static final int FAMILY_HORSEA_VALUE = 116;
    /**
     * <code>FAMILY_GOLDEEN = 118;</code>
     */
    public static final int FAMILY_GOLDEEN_VALUE = 118;
    /**
     * <code>FAMILY_STARYU = 120;</code>
     */
    public static final int FAMILY_STARYU_VALUE = 120;
    /**
     * <code>FAMILY_MR_MIME = 122;</code>
     */
    public static final int FAMILY_MR_MIME_VALUE = 122;
    /**
     * <code>FAMILY_SCYTHER = 123;</code>
     */
    public static final int FAMILY_SCYTHER_VALUE = 123;
    /**
     * <code>FAMILY_JYNX = 124;</code>
     */
    public static final int FAMILY_JYNX_VALUE = 124;
    /**
     * <code>FAMILY_ELECTABUZZ = 125;</code>
     */
    public static final int FAMILY_ELECTABUZZ_VALUE = 125;
    /**
     * <code>FAMILY_MAGMAR = 126;</code>
     */
    public static final int FAMILY_MAGMAR_VALUE = 126;
    /**
     * <code>FAMILY_PINSIR = 127;</code>
     */
    public static final int FAMILY_PINSIR_VALUE = 127;
    /**
     * <code>FAMILY_TAUROS = 128;</code>
     */
    public static final int FAMILY_TAUROS_VALUE = 128;
    /**
     * <code>FAMILY_MAGIKARP = 129;</code>
     */
    public static final int FAMILY_MAGIKARP_VALUE = 129;
    /**
     * <code>FAMILY_LAPRAS = 131;</code>
     */
    public static final int FAMILY_LAPRAS_VALUE = 131;
    /**
     * <code>FAMILY_DITTO = 132;</code>
     */
    public static final int FAMILY_DITTO_VALUE = 132;
    /**
     * <code>FAMILY_EEVEE = 133;</code>
     */
    public static final int FAMILY_EEVEE_VALUE = 133;
    /**
     * <code>FAMILY_PORYGON = 137;</code>
     */
    public static final int FAMILY_PORYGON_VALUE = 137;
    /**
     * <code>FAMILY_OMANYTE = 138;</code>
     */
    public static final int FAMILY_OMANYTE_VALUE = 138;
    /**
     * <code>FAMILY_KABUTO = 140;</code>
     */
    public static final int FAMILY_KABUTO_VALUE = 140;
    /**
     * <code>FAMILY_AERODACTYL = 142;</code>
     */
    public static final int FAMILY_AERODACTYL_VALUE = 142;
    /**
     * <code>FAMILY_SNORLAX = 143;</code>
     */
    public static final int FAMILY_SNORLAX_VALUE = 143;
    /**
     * <code>FAMILY_ARTICUNO = 144;</code>
     */
    public static final int FAMILY_ARTICUNO_VALUE = 144;
    /**
     * <code>FAMILY_ZAPDOS = 145;</code>
     */
    public static final int FAMILY_ZAPDOS_VALUE = 145;
    /**
     * <code>FAMILY_MOLTRES = 146;</code>
     */
    public static final int FAMILY_MOLTRES_VALUE = 146;
    /**
     * <code>FAMILY_DRATINI = 147;</code>
     */
    public static final int FAMILY_DRATINI_VALUE = 147;
    /**
     * <code>FAMILY_MEWTWO = 150;</code>
     */
    public static final int FAMILY_MEWTWO_VALUE = 150;
    /**
     * <code>FAMILY_MEW = 151;</code>
     */
    public static final int FAMILY_MEW_VALUE = 151;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PokemonFamilyId valueOf(int value) {
      return forNumber(value);
    }

    public static PokemonFamilyId forNumber(int value) {
      switch (value) {
        case 0: return FAMILY_UNSET;
        case 1: return FAMILY_BULBASAUR;
        case 4: return FAMILY_CHARMANDER;
        case 7: return FAMILY_SQUIRTLE;
        case 10: return FAMILY_CATERPIE;
        case 13: return FAMILY_WEEDLE;
        case 16: return FAMILY_PIDGEY;
        case 19: return FAMILY_RATTATA;
        case 21: return FAMILY_SPEAROW;
        case 23: return FAMILY_EKANS;
        case 25: return FAMILY_PIKACHU;
        case 27: return FAMILY_SANDSHREW;
        case 29: return FAMILY_NIDORAN_FEMALE;
        case 32: return FAMILY_NIDORAN_MALE;
        case 35: return FAMILY_CLEFAIRY;
        case 37: return FAMILY_VULPIX;
        case 39: return FAMILY_JIGGLYPUFF;
        case 41: return FAMILY_ZUBAT;
        case 43: return FAMILY_ODDISH;
        case 46: return FAMILY_PARAS;
        case 48: return FAMILY_VENONAT;
        case 50: return FAMILY_DIGLETT;
        case 52: return FAMILY_MEOWTH;
        case 54: return FAMILY_PSYDUCK;
        case 56: return FAMILY_MANKEY;
        case 58: return FAMILY_GROWLITHE;
        case 60: return FAMILY_POLIWAG;
        case 63: return FAMILY_ABRA;
        case 66: return FAMILY_MACHOP;
        case 69: return FAMILY_BELLSPROUT;
        case 72: return FAMILY_TENTACOOL;
        case 74: return FAMILY_GEODUDE;
        case 77: return FAMILY_PONYTA;
        case 79: return FAMILY_SLOWPOKE;
        case 81: return FAMILY_MAGNEMITE;
        case 83: return FAMILY_FARFETCHD;
        case 84: return FAMILY_DODUO;
        case 86: return FAMILY_SEEL;
        case 88: return FAMILY_GRIMER;
        case 90: return FAMILY_SHELLDER;
        case 92: return FAMILY_GASTLY;
        case 95: return FAMILY_ONIX;
        case 96: return FAMILY_DROWZEE;
        case 97: return FAMILY_HYPNO;
        case 98: return FAMILY_KRABBY;
        case 100: return FAMILY_VOLTORB;
        case 102: return FAMILY_EXEGGCUTE;
        case 104: return FAMILY_CUBONE;
        case 106: return FAMILY_HITMONLEE;
        case 107: return FAMILY_HITMONCHAN;
        case 108: return FAMILY_LICKITUNG;
        case 109: return FAMILY_KOFFING;
        case 111: return FAMILY_RHYHORN;
        case 113: return FAMILY_CHANSEY;
        case 114: return FAMILY_TANGELA;
        case 115: return FAMILY_KANGASKHAN;
        case 116: return FAMILY_HORSEA;
        case 118: return FAMILY_GOLDEEN;
        case 120: return FAMILY_STARYU;
        case 122: return FAMILY_MR_MIME;
        case 123: return FAMILY_SCYTHER;
        case 124: return FAMILY_JYNX;
        case 125: return FAMILY_ELECTABUZZ;
        case 126: return FAMILY_MAGMAR;
        case 127: return FAMILY_PINSIR;
        case 128: return FAMILY_TAUROS;
        case 129: return FAMILY_MAGIKARP;
        case 131: return FAMILY_LAPRAS;
        case 132: return FAMILY_DITTO;
        case 133: return FAMILY_EEVEE;
        case 137: return FAMILY_PORYGON;
        case 138: return FAMILY_OMANYTE;
        case 140: return FAMILY_KABUTO;
        case 142: return FAMILY_AERODACTYL;
        case 143: return FAMILY_SNORLAX;
        case 144: return FAMILY_ARTICUNO;
        case 145: return FAMILY_ZAPDOS;
        case 146: return FAMILY_MOLTRES;
        case 147: return FAMILY_DRATINI;
        case 150: return FAMILY_MEWTWO;
        case 151: return FAMILY_MEW;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PokemonFamilyId>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PokemonFamilyId> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PokemonFamilyId>() {
            public PokemonFamilyId findValueByNumber(int number) {
              return PokemonFamilyId.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.Enums.getDescriptor().getEnumTypes().get(0);
    }

    private static final PokemonFamilyId[] VALUES = values();

    public static PokemonFamilyId valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PokemonFamilyId(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId)
  }

  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.enums.TutorialState}
   */
  public enum TutorialState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LEGAL_SCREEN = 0;</code>
     */
    LEGAL_SCREEN(0),
    /**
     * <code>AVATAR_SELECTION = 1;</code>
     */
    AVATAR_SELECTION(1),
    /**
     * <code>ACCOUNT_CREATION = 2;</code>
     */
    ACCOUNT_CREATION(2),
    /**
     * <code>POKEMON_CAPTURE = 3;</code>
     */
    POKEMON_CAPTURE(3),
    /**
     * <code>NAME_SELECTION = 4;</code>
     */
    NAME_SELECTION(4),
    /**
     * <code>POKEMON_BERRY = 5;</code>
     */
    POKEMON_BERRY(5),
    /**
     * <code>USE_ITEM = 6;</code>
     */
    USE_ITEM(6),
    /**
     * <code>FIRST_TIME_EXPERIENCE_COMPLETE = 7;</code>
     */
    FIRST_TIME_EXPERIENCE_COMPLETE(7),
    /**
     * <code>POKESTOP_TUTORIAL = 8;</code>
     */
    POKESTOP_TUTORIAL(8),
    /**
     * <code>GYM_TUTORIAL = 9;</code>
     */
    GYM_TUTORIAL(9),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>LEGAL_SCREEN = 0;</code>
     */
    public static final int LEGAL_SCREEN_VALUE = 0;
    /**
     * <code>AVATAR_SELECTION = 1;</code>
     */
    public static final int AVATAR_SELECTION_VALUE = 1;
    /**
     * <code>ACCOUNT_CREATION = 2;</code>
     */
    public static final int ACCOUNT_CREATION_VALUE = 2;
    /**
     * <code>POKEMON_CAPTURE = 3;</code>
     */
    public static final int POKEMON_CAPTURE_VALUE = 3;
    /**
     * <code>NAME_SELECTION = 4;</code>
     */
    public static final int NAME_SELECTION_VALUE = 4;
    /**
     * <code>POKEMON_BERRY = 5;</code>
     */
    public static final int POKEMON_BERRY_VALUE = 5;
    /**
     * <code>USE_ITEM = 6;</code>
     */
    public static final int USE_ITEM_VALUE = 6;
    /**
     * <code>FIRST_TIME_EXPERIENCE_COMPLETE = 7;</code>
     */
    public static final int FIRST_TIME_EXPERIENCE_COMPLETE_VALUE = 7;
    /**
     * <code>POKESTOP_TUTORIAL = 8;</code>
     */
    public static final int POKESTOP_TUTORIAL_VALUE = 8;
    /**
     * <code>GYM_TUTORIAL = 9;</code>
     */
    public static final int GYM_TUTORIAL_VALUE = 9;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TutorialState valueOf(int value) {
      return forNumber(value);
    }

    public static TutorialState forNumber(int value) {
      switch (value) {
        case 0: return LEGAL_SCREEN;
        case 1: return AVATAR_SELECTION;
        case 2: return ACCOUNT_CREATION;
        case 3: return POKEMON_CAPTURE;
        case 4: return NAME_SELECTION;
        case 5: return POKEMON_BERRY;
        case 6: return USE_ITEM;
        case 7: return FIRST_TIME_EXPERIENCE_COMPLETE;
        case 8: return POKESTOP_TUTORIAL;
        case 9: return GYM_TUTORIAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TutorialState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TutorialState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TutorialState>() {
            public TutorialState findValueByNumber(int number) {
              return TutorialState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.Enums.getDescriptor().getEnumTypes().get(1);
    }

    private static final TutorialState[] VALUES = values();

    public static TutorialState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TutorialState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.enums.TutorialState)
  }

  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.enums.ItemEffect}
   */
  public enum ItemEffect
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ITEM_EFFECT_NONE = 0;</code>
     */
    ITEM_EFFECT_NONE(0),
    /**
     * <code>ITEM_EFFECT_CAP_NO_FLEE = 1000;</code>
     */
    ITEM_EFFECT_CAP_NO_FLEE(1000),
    /**
     * <code>ITEM_EFFECT_CAP_NO_MOVEMENT = 1002;</code>
     */
    ITEM_EFFECT_CAP_NO_MOVEMENT(1002),
    /**
     * <code>ITEM_EFFECT_CAP_NO_THREAT = 1003;</code>
     */
    ITEM_EFFECT_CAP_NO_THREAT(1003),
    /**
     * <code>ITEM_EFFECT_CAP_TARGET_MAX = 1004;</code>
     */
    ITEM_EFFECT_CAP_TARGET_MAX(1004),
    /**
     * <code>ITEM_EFFECT_CAP_TARGET_SLOW = 1005;</code>
     */
    ITEM_EFFECT_CAP_TARGET_SLOW(1005),
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_NIGHT = 1006;</code>
     */
    ITEM_EFFECT_CAP_CHANCE_NIGHT(1006),
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_TRAINER = 1007;</code>
     */
    ITEM_EFFECT_CAP_CHANCE_TRAINER(1007),
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_FIRST_THROW = 1008;</code>
     */
    ITEM_EFFECT_CAP_CHANCE_FIRST_THROW(1008),
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_LEGEND = 1009;</code>
     */
    ITEM_EFFECT_CAP_CHANCE_LEGEND(1009),
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_HEAVY = 1010;</code>
     */
    ITEM_EFFECT_CAP_CHANCE_HEAVY(1010),
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_REPEAT = 1011;</code>
     */
    ITEM_EFFECT_CAP_CHANCE_REPEAT(1011),
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_MULTI_THROW = 1012;</code>
     */
    ITEM_EFFECT_CAP_CHANCE_MULTI_THROW(1012),
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_ALWAYS = 1013;</code>
     */
    ITEM_EFFECT_CAP_CHANCE_ALWAYS(1013),
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_SINGLE_THROW = 1014;</code>
     */
    ITEM_EFFECT_CAP_CHANCE_SINGLE_THROW(1014),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ITEM_EFFECT_NONE = 0;</code>
     */
    public static final int ITEM_EFFECT_NONE_VALUE = 0;
    /**
     * <code>ITEM_EFFECT_CAP_NO_FLEE = 1000;</code>
     */
    public static final int ITEM_EFFECT_CAP_NO_FLEE_VALUE = 1000;
    /**
     * <code>ITEM_EFFECT_CAP_NO_MOVEMENT = 1002;</code>
     */
    public static final int ITEM_EFFECT_CAP_NO_MOVEMENT_VALUE = 1002;
    /**
     * <code>ITEM_EFFECT_CAP_NO_THREAT = 1003;</code>
     */
    public static final int ITEM_EFFECT_CAP_NO_THREAT_VALUE = 1003;
    /**
     * <code>ITEM_EFFECT_CAP_TARGET_MAX = 1004;</code>
     */
    public static final int ITEM_EFFECT_CAP_TARGET_MAX_VALUE = 1004;
    /**
     * <code>ITEM_EFFECT_CAP_TARGET_SLOW = 1005;</code>
     */
    public static final int ITEM_EFFECT_CAP_TARGET_SLOW_VALUE = 1005;
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_NIGHT = 1006;</code>
     */
    public static final int ITEM_EFFECT_CAP_CHANCE_NIGHT_VALUE = 1006;
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_TRAINER = 1007;</code>
     */
    public static final int ITEM_EFFECT_CAP_CHANCE_TRAINER_VALUE = 1007;
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_FIRST_THROW = 1008;</code>
     */
    public static final int ITEM_EFFECT_CAP_CHANCE_FIRST_THROW_VALUE = 1008;
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_LEGEND = 1009;</code>
     */
    public static final int ITEM_EFFECT_CAP_CHANCE_LEGEND_VALUE = 1009;
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_HEAVY = 1010;</code>
     */
    public static final int ITEM_EFFECT_CAP_CHANCE_HEAVY_VALUE = 1010;
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_REPEAT = 1011;</code>
     */
    public static final int ITEM_EFFECT_CAP_CHANCE_REPEAT_VALUE = 1011;
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_MULTI_THROW = 1012;</code>
     */
    public static final int ITEM_EFFECT_CAP_CHANCE_MULTI_THROW_VALUE = 1012;
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_ALWAYS = 1013;</code>
     */
    public static final int ITEM_EFFECT_CAP_CHANCE_ALWAYS_VALUE = 1013;
    /**
     * <code>ITEM_EFFECT_CAP_CHANCE_SINGLE_THROW = 1014;</code>
     */
    public static final int ITEM_EFFECT_CAP_CHANCE_SINGLE_THROW_VALUE = 1014;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ItemEffect valueOf(int value) {
      return forNumber(value);
    }

    public static ItemEffect forNumber(int value) {
      switch (value) {
        case 0: return ITEM_EFFECT_NONE;
        case 1000: return ITEM_EFFECT_CAP_NO_FLEE;
        case 1002: return ITEM_EFFECT_CAP_NO_MOVEMENT;
        case 1003: return ITEM_EFFECT_CAP_NO_THREAT;
        case 1004: return ITEM_EFFECT_CAP_TARGET_MAX;
        case 1005: return ITEM_EFFECT_CAP_TARGET_SLOW;
        case 1006: return ITEM_EFFECT_CAP_CHANCE_NIGHT;
        case 1007: return ITEM_EFFECT_CAP_CHANCE_TRAINER;
        case 1008: return ITEM_EFFECT_CAP_CHANCE_FIRST_THROW;
        case 1009: return ITEM_EFFECT_CAP_CHANCE_LEGEND;
        case 1010: return ITEM_EFFECT_CAP_CHANCE_HEAVY;
        case 1011: return ITEM_EFFECT_CAP_CHANCE_REPEAT;
        case 1012: return ITEM_EFFECT_CAP_CHANCE_MULTI_THROW;
        case 1013: return ITEM_EFFECT_CAP_CHANCE_ALWAYS;
        case 1014: return ITEM_EFFECT_CAP_CHANCE_SINGLE_THROW;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ItemEffect>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ItemEffect> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ItemEffect>() {
            public ItemEffect findValueByNumber(int number) {
              return ItemEffect.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.Enums.getDescriptor().getEnumTypes().get(2);
    }

    private static final ItemEffect[] VALUES = values();

    public static ItemEffect valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ItemEffect(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.enums.ItemEffect)
  }

  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.enums.PokemonMovementType}
   */
  public enum PokemonMovementType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MOVEMENT_STATIC = 0;</code>
     */
    MOVEMENT_STATIC(0),
    /**
     * <code>MOVEMENT_JUMP = 1;</code>
     */
    MOVEMENT_JUMP(1),
    /**
     * <code>MOVEMENT_VERTICAL = 2;</code>
     */
    MOVEMENT_VERTICAL(2),
    /**
     * <code>MOVEMENT_PSYCHIC = 3;</code>
     */
    MOVEMENT_PSYCHIC(3),
    /**
     * <code>MOVEMENT_ELECTRIC = 4;</code>
     */
    MOVEMENT_ELECTRIC(4),
    /**
     * <code>MOVEMENT_FLYING = 5;</code>
     */
    MOVEMENT_FLYING(5),
    /**
     * <code>MOVEMENT_HOVERING = 6;</code>
     */
    MOVEMENT_HOVERING(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MOVEMENT_STATIC = 0;</code>
     */
    public static final int MOVEMENT_STATIC_VALUE = 0;
    /**
     * <code>MOVEMENT_JUMP = 1;</code>
     */
    public static final int MOVEMENT_JUMP_VALUE = 1;
    /**
     * <code>MOVEMENT_VERTICAL = 2;</code>
     */
    public static final int MOVEMENT_VERTICAL_VALUE = 2;
    /**
     * <code>MOVEMENT_PSYCHIC = 3;</code>
     */
    public static final int MOVEMENT_PSYCHIC_VALUE = 3;
    /**
     * <code>MOVEMENT_ELECTRIC = 4;</code>
     */
    public static final int MOVEMENT_ELECTRIC_VALUE = 4;
    /**
     * <code>MOVEMENT_FLYING = 5;</code>
     */
    public static final int MOVEMENT_FLYING_VALUE = 5;
    /**
     * <code>MOVEMENT_HOVERING = 6;</code>
     */
    public static final int MOVEMENT_HOVERING_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PokemonMovementType valueOf(int value) {
      return forNumber(value);
    }

    public static PokemonMovementType forNumber(int value) {
      switch (value) {
        case 0: return MOVEMENT_STATIC;
        case 1: return MOVEMENT_JUMP;
        case 2: return MOVEMENT_VERTICAL;
        case 3: return MOVEMENT_PSYCHIC;
        case 4: return MOVEMENT_ELECTRIC;
        case 5: return MOVEMENT_FLYING;
        case 6: return MOVEMENT_HOVERING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PokemonMovementType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PokemonMovementType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PokemonMovementType>() {
            public PokemonMovementType findValueByNumber(int number) {
              return PokemonMovementType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.Enums.getDescriptor().getEnumTypes().get(3);
    }

    private static final PokemonMovementType[] VALUES = values();

    public static PokemonMovementType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PokemonMovementType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.enums.PokemonMovementType)
  }

  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.enums.Platform}
   */
  public enum Platform
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNSET = 0;</code>
     */
    UNSET(0),
    /**
     * <code>IOS = 1;</code>
     */
    IOS(1),
    /**
     * <code>ANDROID = 2;</code>
     */
    ANDROID(2),
    /**
     * <code>OSX = 3;</code>
     */
    OSX(3),
    /**
     * <code>WINDOWS = 4;</code>
     */
    WINDOWS(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNSET = 0;</code>
     */
    public static final int UNSET_VALUE = 0;
    /**
     * <code>IOS = 1;</code>
     */
    public static final int IOS_VALUE = 1;
    /**
     * <code>ANDROID = 2;</code>
     */
    public static final int ANDROID_VALUE = 2;
    /**
     * <code>OSX = 3;</code>
     */
    public static final int OSX_VALUE = 3;
    /**
     * <code>WINDOWS = 4;</code>
     */
    public static final int WINDOWS_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Platform valueOf(int value) {
      return forNumber(value);
    }

    public static Platform forNumber(int value) {
      switch (value) {
        case 0: return UNSET;
        case 1: return IOS;
        case 2: return ANDROID;
        case 3: return OSX;
        case 4: return WINDOWS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Platform>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Platform> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Platform>() {
            public Platform findValueByNumber(int number) {
              return Platform.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.Enums.getDescriptor().getEnumTypes().get(4);
    }

    private static final Platform[] VALUES = values();

    public static Platform valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Platform(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.enums.Platform)
  }

  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.enums.PokemonRarity}
   */
  public enum PokemonRarity
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>POKEMON_RARITY_NORMAL = 0;</code>
     */
    POKEMON_RARITY_NORMAL(0),
    /**
     * <code>POKEMON_RARITY_LEGENDARY = 1;</code>
     */
    POKEMON_RARITY_LEGENDARY(1),
    /**
     * <code>POKEMON_RARITY_MYTHIC = 2;</code>
     */
    POKEMON_RARITY_MYTHIC(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>POKEMON_RARITY_NORMAL = 0;</code>
     */
    public static final int POKEMON_RARITY_NORMAL_VALUE = 0;
    /**
     * <code>POKEMON_RARITY_LEGENDARY = 1;</code>
     */
    public static final int POKEMON_RARITY_LEGENDARY_VALUE = 1;
    /**
     * <code>POKEMON_RARITY_MYTHIC = 2;</code>
     */
    public static final int POKEMON_RARITY_MYTHIC_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PokemonRarity valueOf(int value) {
      return forNumber(value);
    }

    public static PokemonRarity forNumber(int value) {
      switch (value) {
        case 0: return POKEMON_RARITY_NORMAL;
        case 1: return POKEMON_RARITY_LEGENDARY;
        case 2: return POKEMON_RARITY_MYTHIC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PokemonRarity>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PokemonRarity> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PokemonRarity>() {
            public PokemonRarity findValueByNumber(int number) {
              return PokemonRarity.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.Enums.getDescriptor().getEnumTypes().get(5);
    }

    private static final PokemonRarity[] VALUES = values();

    public static PokemonRarity valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PokemonRarity(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.enums.PokemonRarity)
  }

  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.enums.Gender}
   */
  public enum Gender
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MALE = 0;</code>
     */
    MALE(0),
    /**
     * <code>FEMALE = 1;</code>
     */
    FEMALE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MALE = 0;</code>
     */
    public static final int MALE_VALUE = 0;
    /**
     * <code>FEMALE = 1;</code>
     */
    public static final int FEMALE_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Gender valueOf(int value) {
      return forNumber(value);
    }

    public static Gender forNumber(int value) {
      switch (value) {
        case 0: return MALE;
        case 1: return FEMALE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Gender>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Gender> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Gender>() {
            public Gender findValueByNumber(int number) {
              return Gender.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.Enums.getDescriptor().getEnumTypes().get(6);
    }

    private static final Gender[] VALUES = values();

    public static Gender valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Gender(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.enums.Gender)
  }

  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.enums.ActivityType}
   */
  public enum ActivityType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ACTIVITY_UNKNOWN = 0;</code>
     */
    ACTIVITY_UNKNOWN(0),
    /**
     * <code>ACTIVITY_CATCH_POKEMON = 1;</code>
     */
    ACTIVITY_CATCH_POKEMON(1),
    /**
     * <code>ACTIVITY_CATCH_LEGEND_POKEMON = 2;</code>
     */
    ACTIVITY_CATCH_LEGEND_POKEMON(2),
    /**
     * <code>ACTIVITY_FLEE_POKEMON = 3;</code>
     */
    ACTIVITY_FLEE_POKEMON(3),
    /**
     * <code>ACTIVITY_DEFEAT_FORT = 4;</code>
     */
    ACTIVITY_DEFEAT_FORT(4),
    /**
     * <code>ACTIVITY_EVOLVE_POKEMON = 5;</code>
     */
    ACTIVITY_EVOLVE_POKEMON(5),
    /**
     * <code>ACTIVITY_HATCH_EGG = 6;</code>
     */
    ACTIVITY_HATCH_EGG(6),
    /**
     * <code>ACTIVITY_WALK_KM = 7;</code>
     */
    ACTIVITY_WALK_KM(7),
    /**
     * <code>ACTIVITY_POKEDEX_ENTRY_NEW = 8;</code>
     */
    ACTIVITY_POKEDEX_ENTRY_NEW(8),
    /**
     * <code>ACTIVITY_CATCH_FIRST_THROW = 9;</code>
     */
    ACTIVITY_CATCH_FIRST_THROW(9),
    /**
     * <code>ACTIVITY_CATCH_NICE_THROW = 10;</code>
     */
    ACTIVITY_CATCH_NICE_THROW(10),
    /**
     * <code>ACTIVITY_CATCH_GREAT_THROW = 11;</code>
     */
    ACTIVITY_CATCH_GREAT_THROW(11),
    /**
     * <code>ACTIVITY_CATCH_EXCELLENT_THROW = 12;</code>
     */
    ACTIVITY_CATCH_EXCELLENT_THROW(12),
    /**
     * <code>ACTIVITY_CATCH_CURVEBALL = 13;</code>
     */
    ACTIVITY_CATCH_CURVEBALL(13),
    /**
     * <code>ACTIVITY_CATCH_FIRST_CATCH_OF_DAY = 14;</code>
     */
    ACTIVITY_CATCH_FIRST_CATCH_OF_DAY(14),
    /**
     * <code>ACTIVITY_CATCH_MILESTONE = 15;</code>
     */
    ACTIVITY_CATCH_MILESTONE(15),
    /**
     * <code>ACTIVITY_TRAIN_POKEMON = 16;</code>
     */
    ACTIVITY_TRAIN_POKEMON(16),
    /**
     * <code>ACTIVITY_SEARCH_FORT = 17;</code>
     */
    ACTIVITY_SEARCH_FORT(17),
    /**
     * <code>ACTIVITY_RELEASE_POKEMON = 18;</code>
     */
    ACTIVITY_RELEASE_POKEMON(18),
    /**
     * <code>ACTIVITY_HATCH_EGG_SMALL_BONUS = 19;</code>
     */
    ACTIVITY_HATCH_EGG_SMALL_BONUS(19),
    /**
     * <code>ACTIVITY_HATCH_EGG_MEDIUM_BONUS = 20;</code>
     */
    ACTIVITY_HATCH_EGG_MEDIUM_BONUS(20),
    /**
     * <code>ACTIVITY_HATCH_EGG_LARGE_BONUS = 21;</code>
     */
    ACTIVITY_HATCH_EGG_LARGE_BONUS(21),
    /**
     * <code>ACTIVITY_DEFEAT_GYM_DEFENDER = 22;</code>
     */
    ACTIVITY_DEFEAT_GYM_DEFENDER(22),
    /**
     * <code>ACTIVITY_DEFEAT_GYM_LEADER = 23;</code>
     */
    ACTIVITY_DEFEAT_GYM_LEADER(23),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ACTIVITY_UNKNOWN = 0;</code>
     */
    public static final int ACTIVITY_UNKNOWN_VALUE = 0;
    /**
     * <code>ACTIVITY_CATCH_POKEMON = 1;</code>
     */
    public static final int ACTIVITY_CATCH_POKEMON_VALUE = 1;
    /**
     * <code>ACTIVITY_CATCH_LEGEND_POKEMON = 2;</code>
     */
    public static final int ACTIVITY_CATCH_LEGEND_POKEMON_VALUE = 2;
    /**
     * <code>ACTIVITY_FLEE_POKEMON = 3;</code>
     */
    public static final int ACTIVITY_FLEE_POKEMON_VALUE = 3;
    /**
     * <code>ACTIVITY_DEFEAT_FORT = 4;</code>
     */
    public static final int ACTIVITY_DEFEAT_FORT_VALUE = 4;
    /**
     * <code>ACTIVITY_EVOLVE_POKEMON = 5;</code>
     */
    public static final int ACTIVITY_EVOLVE_POKEMON_VALUE = 5;
    /**
     * <code>ACTIVITY_HATCH_EGG = 6;</code>
     */
    public static final int ACTIVITY_HATCH_EGG_VALUE = 6;
    /**
     * <code>ACTIVITY_WALK_KM = 7;</code>
     */
    public static final int ACTIVITY_WALK_KM_VALUE = 7;
    /**
     * <code>ACTIVITY_POKEDEX_ENTRY_NEW = 8;</code>
     */
    public static final int ACTIVITY_POKEDEX_ENTRY_NEW_VALUE = 8;
    /**
     * <code>ACTIVITY_CATCH_FIRST_THROW = 9;</code>
     */
    public static final int ACTIVITY_CATCH_FIRST_THROW_VALUE = 9;
    /**
     * <code>ACTIVITY_CATCH_NICE_THROW = 10;</code>
     */
    public static final int ACTIVITY_CATCH_NICE_THROW_VALUE = 10;
    /**
     * <code>ACTIVITY_CATCH_GREAT_THROW = 11;</code>
     */
    public static final int ACTIVITY_CATCH_GREAT_THROW_VALUE = 11;
    /**
     * <code>ACTIVITY_CATCH_EXCELLENT_THROW = 12;</code>
     */
    public static final int ACTIVITY_CATCH_EXCELLENT_THROW_VALUE = 12;
    /**
     * <code>ACTIVITY_CATCH_CURVEBALL = 13;</code>
     */
    public static final int ACTIVITY_CATCH_CURVEBALL_VALUE = 13;
    /**
     * <code>ACTIVITY_CATCH_FIRST_CATCH_OF_DAY = 14;</code>
     */
    public static final int ACTIVITY_CATCH_FIRST_CATCH_OF_DAY_VALUE = 14;
    /**
     * <code>ACTIVITY_CATCH_MILESTONE = 15;</code>
     */
    public static final int ACTIVITY_CATCH_MILESTONE_VALUE = 15;
    /**
     * <code>ACTIVITY_TRAIN_POKEMON = 16;</code>
     */
    public static final int ACTIVITY_TRAIN_POKEMON_VALUE = 16;
    /**
     * <code>ACTIVITY_SEARCH_FORT = 17;</code>
     */
    public static final int ACTIVITY_SEARCH_FORT_VALUE = 17;
    /**
     * <code>ACTIVITY_RELEASE_POKEMON = 18;</code>
     */
    public static final int ACTIVITY_RELEASE_POKEMON_VALUE = 18;
    /**
     * <code>ACTIVITY_HATCH_EGG_SMALL_BONUS = 19;</code>
     */
    public static final int ACTIVITY_HATCH_EGG_SMALL_BONUS_VALUE = 19;
    /**
     * <code>ACTIVITY_HATCH_EGG_MEDIUM_BONUS = 20;</code>
     */
    public static final int ACTIVITY_HATCH_EGG_MEDIUM_BONUS_VALUE = 20;
    /**
     * <code>ACTIVITY_HATCH_EGG_LARGE_BONUS = 21;</code>
     */
    public static final int ACTIVITY_HATCH_EGG_LARGE_BONUS_VALUE = 21;
    /**
     * <code>ACTIVITY_DEFEAT_GYM_DEFENDER = 22;</code>
     */
    public static final int ACTIVITY_DEFEAT_GYM_DEFENDER_VALUE = 22;
    /**
     * <code>ACTIVITY_DEFEAT_GYM_LEADER = 23;</code>
     */
    public static final int ACTIVITY_DEFEAT_GYM_LEADER_VALUE = 23;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ActivityType valueOf(int value) {
      return forNumber(value);
    }

    public static ActivityType forNumber(int value) {
      switch (value) {
        case 0: return ACTIVITY_UNKNOWN;
        case 1: return ACTIVITY_CATCH_POKEMON;
        case 2: return ACTIVITY_CATCH_LEGEND_POKEMON;
        case 3: return ACTIVITY_FLEE_POKEMON;
        case 4: return ACTIVITY_DEFEAT_FORT;
        case 5: return ACTIVITY_EVOLVE_POKEMON;
        case 6: return ACTIVITY_HATCH_EGG;
        case 7: return ACTIVITY_WALK_KM;
        case 8: return ACTIVITY_POKEDEX_ENTRY_NEW;
        case 9: return ACTIVITY_CATCH_FIRST_THROW;
        case 10: return ACTIVITY_CATCH_NICE_THROW;
        case 11: return ACTIVITY_CATCH_GREAT_THROW;
        case 12: return ACTIVITY_CATCH_EXCELLENT_THROW;
        case 13: return ACTIVITY_CATCH_CURVEBALL;
        case 14: return ACTIVITY_CATCH_FIRST_CATCH_OF_DAY;
        case 15: return ACTIVITY_CATCH_MILESTONE;
        case 16: return ACTIVITY_TRAIN_POKEMON;
        case 17: return ACTIVITY_SEARCH_FORT;
        case 18: return ACTIVITY_RELEASE_POKEMON;
        case 19: return ACTIVITY_HATCH_EGG_SMALL_BONUS;
        case 20: return ACTIVITY_HATCH_EGG_MEDIUM_BONUS;
        case 21: return ACTIVITY_HATCH_EGG_LARGE_BONUS;
        case 22: return ACTIVITY_DEFEAT_GYM_DEFENDER;
        case 23: return ACTIVITY_DEFEAT_GYM_LEADER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ActivityType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ActivityType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ActivityType>() {
            public ActivityType findValueByNumber(int number) {
              return ActivityType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.Enums.getDescriptor().getEnumTypes().get(7);
    }

    private static final ActivityType[] VALUES = values();

    public static ActivityType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ActivityType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.enums.ActivityType)
  }

  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.enums.TeamColor}
   */
  public enum TeamColor
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NEUTRAL = 0;</code>
     */
    NEUTRAL(0),
    /**
     * <code>BLUE = 1;</code>
     */
    BLUE(1),
    /**
     * <code>RED = 2;</code>
     */
    RED(2),
    /**
     * <code>YELLOW = 3;</code>
     */
    YELLOW(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NEUTRAL = 0;</code>
     */
    public static final int NEUTRAL_VALUE = 0;
    /**
     * <code>BLUE = 1;</code>
     */
    public static final int BLUE_VALUE = 1;
    /**
     * <code>RED = 2;</code>
     */
    public static final int RED_VALUE = 2;
    /**
     * <code>YELLOW = 3;</code>
     */
    public static final int YELLOW_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TeamColor valueOf(int value) {
      return forNumber(value);
    }

    public static TeamColor forNumber(int value) {
      switch (value) {
        case 0: return NEUTRAL;
        case 1: return BLUE;
        case 2: return RED;
        case 3: return YELLOW;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TeamColor>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TeamColor> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TeamColor>() {
            public TeamColor findValueByNumber(int number) {
              return TeamColor.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.Enums.getDescriptor().getEnumTypes().get(8);
    }

    private static final TeamColor[] VALUES = values();

    public static TeamColor valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TeamColor(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.enums.TeamColor)
  }

  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.enums.HoloIapItemCategory}
   */
  public enum HoloIapItemCategory
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>IAP_CATEGORY_NONE = 0;</code>
     */
    IAP_CATEGORY_NONE(0),
    /**
     * <code>IAP_CATEGORY_BUNDLE = 1;</code>
     */
    IAP_CATEGORY_BUNDLE(1),
    /**
     * <code>IAP_CATEGORY_ITEMS = 2;</code>
     */
    IAP_CATEGORY_ITEMS(2),
    /**
     * <code>IAP_CATEGORY_UPGRADES = 3;</code>
     */
    IAP_CATEGORY_UPGRADES(3),
    /**
     * <code>IAP_CATEGORY_POKECOINS = 4;</code>
     */
    IAP_CATEGORY_POKECOINS(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>IAP_CATEGORY_NONE = 0;</code>
     */
    public static final int IAP_CATEGORY_NONE_VALUE = 0;
    /**
     * <code>IAP_CATEGORY_BUNDLE = 1;</code>
     */
    public static final int IAP_CATEGORY_BUNDLE_VALUE = 1;
    /**
     * <code>IAP_CATEGORY_ITEMS = 2;</code>
     */
    public static final int IAP_CATEGORY_ITEMS_VALUE = 2;
    /**
     * <code>IAP_CATEGORY_UPGRADES = 3;</code>
     */
    public static final int IAP_CATEGORY_UPGRADES_VALUE = 3;
    /**
     * <code>IAP_CATEGORY_POKECOINS = 4;</code>
     */
    public static final int IAP_CATEGORY_POKECOINS_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static HoloIapItemCategory valueOf(int value) {
      return forNumber(value);
    }

    public static HoloIapItemCategory forNumber(int value) {
      switch (value) {
        case 0: return IAP_CATEGORY_NONE;
        case 1: return IAP_CATEGORY_BUNDLE;
        case 2: return IAP_CATEGORY_ITEMS;
        case 3: return IAP_CATEGORY_UPGRADES;
        case 4: return IAP_CATEGORY_POKECOINS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<HoloIapItemCategory>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        HoloIapItemCategory> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<HoloIapItemCategory>() {
            public HoloIapItemCategory findValueByNumber(int number) {
              return HoloIapItemCategory.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.Enums.getDescriptor().getEnumTypes().get(9);
    }

    private static final HoloIapItemCategory[] VALUES = values();

    public static HoloIapItemCategory valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private HoloIapItemCategory(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.enums.HoloIapItemCategory)
  }

  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.enums.BadgeType}
   */
  public enum BadgeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BADGE_UNSET = 0;</code>
     */
    BADGE_UNSET(0),
    /**
     * <code>BADGE_TRAVEL_KM = 1;</code>
     */
    BADGE_TRAVEL_KM(1),
    /**
     * <code>BADGE_POKEDEX_ENTRIES = 2;</code>
     */
    BADGE_POKEDEX_ENTRIES(2),
    /**
     * <code>BADGE_CAPTURE_TOTAL = 3;</code>
     */
    BADGE_CAPTURE_TOTAL(3),
    /**
     * <code>BADGE_DEFEATED_FORT = 4;</code>
     */
    BADGE_DEFEATED_FORT(4),
    /**
     * <code>BADGE_EVOLVED_TOTAL = 5;</code>
     */
    BADGE_EVOLVED_TOTAL(5),
    /**
     * <code>BADGE_HATCHED_TOTAL = 6;</code>
     */
    BADGE_HATCHED_TOTAL(6),
    /**
     * <code>BADGE_ENCOUNTERED_TOTAL = 7;</code>
     */
    BADGE_ENCOUNTERED_TOTAL(7),
    /**
     * <code>BADGE_POKESTOPS_VISITED = 8;</code>
     */
    BADGE_POKESTOPS_VISITED(8),
    /**
     * <code>BADGE_UNIQUE_POKESTOPS = 9;</code>
     */
    BADGE_UNIQUE_POKESTOPS(9),
    /**
     * <code>BADGE_POKEBALL_THROWN = 10;</code>
     */
    BADGE_POKEBALL_THROWN(10),
    /**
     * <code>BADGE_BIG_MAGIKARP = 11;</code>
     */
    BADGE_BIG_MAGIKARP(11),
    /**
     * <code>BADGE_DEPLOYED_TOTAL = 12;</code>
     */
    BADGE_DEPLOYED_TOTAL(12),
    /**
     * <code>BADGE_BATTLE_ATTACK_WON = 13;</code>
     */
    BADGE_BATTLE_ATTACK_WON(13),
    /**
     * <code>BADGE_BATTLE_TRAINING_WON = 14;</code>
     */
    BADGE_BATTLE_TRAINING_WON(14),
    /**
     * <code>BADGE_BATTLE_DEFEND_WON = 15;</code>
     */
    BADGE_BATTLE_DEFEND_WON(15),
    /**
     * <code>BADGE_PRESTIGE_RAISED = 16;</code>
     */
    BADGE_PRESTIGE_RAISED(16),
    /**
     * <code>BADGE_PRESTIGE_DROPPED = 17;</code>
     */
    BADGE_PRESTIGE_DROPPED(17),
    /**
     * <code>BADGE_TYPE_NORMAL = 18;</code>
     */
    BADGE_TYPE_NORMAL(18),
    /**
     * <code>BADGE_TYPE_FIGHTING = 19;</code>
     */
    BADGE_TYPE_FIGHTING(19),
    /**
     * <code>BADGE_TYPE_FLYING = 20;</code>
     */
    BADGE_TYPE_FLYING(20),
    /**
     * <code>BADGE_TYPE_POISON = 21;</code>
     */
    BADGE_TYPE_POISON(21),
    /**
     * <code>BADGE_TYPE_GROUND = 22;</code>
     */
    BADGE_TYPE_GROUND(22),
    /**
     * <code>BADGE_TYPE_ROCK = 23;</code>
     */
    BADGE_TYPE_ROCK(23),
    /**
     * <code>BADGE_TYPE_BUG = 24;</code>
     */
    BADGE_TYPE_BUG(24),
    /**
     * <code>BADGE_TYPE_GHOST = 25;</code>
     */
    BADGE_TYPE_GHOST(25),
    /**
     * <code>BADGE_TYPE_STEEL = 26;</code>
     */
    BADGE_TYPE_STEEL(26),
    /**
     * <code>BADGE_TYPE_FIRE = 27;</code>
     */
    BADGE_TYPE_FIRE(27),
    /**
     * <code>BADGE_TYPE_WATER = 28;</code>
     */
    BADGE_TYPE_WATER(28),
    /**
     * <code>BADGE_TYPE_GRASS = 29;</code>
     */
    BADGE_TYPE_GRASS(29),
    /**
     * <code>BADGE_TYPE_ELECTRIC = 30;</code>
     */
    BADGE_TYPE_ELECTRIC(30),
    /**
     * <code>BADGE_TYPE_PSYCHIC = 31;</code>
     */
    BADGE_TYPE_PSYCHIC(31),
    /**
     * <code>BADGE_TYPE_ICE = 32;</code>
     */
    BADGE_TYPE_ICE(32),
    /**
     * <code>BADGE_TYPE_DRAGON = 33;</code>
     */
    BADGE_TYPE_DRAGON(33),
    /**
     * <code>BADGE_TYPE_DARK = 34;</code>
     */
    BADGE_TYPE_DARK(34),
    /**
     * <code>BADGE_TYPE_FAIRY = 35;</code>
     */
    BADGE_TYPE_FAIRY(35),
    /**
     * <code>BADGE_SMALL_RATTATA = 36;</code>
     */
    BADGE_SMALL_RATTATA(36),
    /**
     * <code>BADGE_PIKACHU = 37;</code>
     */
    BADGE_PIKACHU(37),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>BADGE_UNSET = 0;</code>
     */
    public static final int BADGE_UNSET_VALUE = 0;
    /**
     * <code>BADGE_TRAVEL_KM = 1;</code>
     */
    public static final int BADGE_TRAVEL_KM_VALUE = 1;
    /**
     * <code>BADGE_POKEDEX_ENTRIES = 2;</code>
     */
    public static final int BADGE_POKEDEX_ENTRIES_VALUE = 2;
    /**
     * <code>BADGE_CAPTURE_TOTAL = 3;</code>
     */
    public static final int BADGE_CAPTURE_TOTAL_VALUE = 3;
    /**
     * <code>BADGE_DEFEATED_FORT = 4;</code>
     */
    public static final int BADGE_DEFEATED_FORT_VALUE = 4;
    /**
     * <code>BADGE_EVOLVED_TOTAL = 5;</code>
     */
    public static final int BADGE_EVOLVED_TOTAL_VALUE = 5;
    /**
     * <code>BADGE_HATCHED_TOTAL = 6;</code>
     */
    public static final int BADGE_HATCHED_TOTAL_VALUE = 6;
    /**
     * <code>BADGE_ENCOUNTERED_TOTAL = 7;</code>
     */
    public static final int BADGE_ENCOUNTERED_TOTAL_VALUE = 7;
    /**
     * <code>BADGE_POKESTOPS_VISITED = 8;</code>
     */
    public static final int BADGE_POKESTOPS_VISITED_VALUE = 8;
    /**
     * <code>BADGE_UNIQUE_POKESTOPS = 9;</code>
     */
    public static final int BADGE_UNIQUE_POKESTOPS_VALUE = 9;
    /**
     * <code>BADGE_POKEBALL_THROWN = 10;</code>
     */
    public static final int BADGE_POKEBALL_THROWN_VALUE = 10;
    /**
     * <code>BADGE_BIG_MAGIKARP = 11;</code>
     */
    public static final int BADGE_BIG_MAGIKARP_VALUE = 11;
    /**
     * <code>BADGE_DEPLOYED_TOTAL = 12;</code>
     */
    public static final int BADGE_DEPLOYED_TOTAL_VALUE = 12;
    /**
     * <code>BADGE_BATTLE_ATTACK_WON = 13;</code>
     */
    public static final int BADGE_BATTLE_ATTACK_WON_VALUE = 13;
    /**
     * <code>BADGE_BATTLE_TRAINING_WON = 14;</code>
     */
    public static final int BADGE_BATTLE_TRAINING_WON_VALUE = 14;
    /**
     * <code>BADGE_BATTLE_DEFEND_WON = 15;</code>
     */
    public static final int BADGE_BATTLE_DEFEND_WON_VALUE = 15;
    /**
     * <code>BADGE_PRESTIGE_RAISED = 16;</code>
     */
    public static final int BADGE_PRESTIGE_RAISED_VALUE = 16;
    /**
     * <code>BADGE_PRESTIGE_DROPPED = 17;</code>
     */
    public static final int BADGE_PRESTIGE_DROPPED_VALUE = 17;
    /**
     * <code>BADGE_TYPE_NORMAL = 18;</code>
     */
    public static final int BADGE_TYPE_NORMAL_VALUE = 18;
    /**
     * <code>BADGE_TYPE_FIGHTING = 19;</code>
     */
    public static final int BADGE_TYPE_FIGHTING_VALUE = 19;
    /**
     * <code>BADGE_TYPE_FLYING = 20;</code>
     */
    public static final int BADGE_TYPE_FLYING_VALUE = 20;
    /**
     * <code>BADGE_TYPE_POISON = 21;</code>
     */
    public static final int BADGE_TYPE_POISON_VALUE = 21;
    /**
     * <code>BADGE_TYPE_GROUND = 22;</code>
     */
    public static final int BADGE_TYPE_GROUND_VALUE = 22;
    /**
     * <code>BADGE_TYPE_ROCK = 23;</code>
     */
    public static final int BADGE_TYPE_ROCK_VALUE = 23;
    /**
     * <code>BADGE_TYPE_BUG = 24;</code>
     */
    public static final int BADGE_TYPE_BUG_VALUE = 24;
    /**
     * <code>BADGE_TYPE_GHOST = 25;</code>
     */
    public static final int BADGE_TYPE_GHOST_VALUE = 25;
    /**
     * <code>BADGE_TYPE_STEEL = 26;</code>
     */
    public static final int BADGE_TYPE_STEEL_VALUE = 26;
    /**
     * <code>BADGE_TYPE_FIRE = 27;</code>
     */
    public static final int BADGE_TYPE_FIRE_VALUE = 27;
    /**
     * <code>BADGE_TYPE_WATER = 28;</code>
     */
    public static final int BADGE_TYPE_WATER_VALUE = 28;
    /**
     * <code>BADGE_TYPE_GRASS = 29;</code>
     */
    public static final int BADGE_TYPE_GRASS_VALUE = 29;
    /**
     * <code>BADGE_TYPE_ELECTRIC = 30;</code>
     */
    public static final int BADGE_TYPE_ELECTRIC_VALUE = 30;
    /**
     * <code>BADGE_TYPE_PSYCHIC = 31;</code>
     */
    public static final int BADGE_TYPE_PSYCHIC_VALUE = 31;
    /**
     * <code>BADGE_TYPE_ICE = 32;</code>
     */
    public static final int BADGE_TYPE_ICE_VALUE = 32;
    /**
     * <code>BADGE_TYPE_DRAGON = 33;</code>
     */
    public static final int BADGE_TYPE_DRAGON_VALUE = 33;
    /**
     * <code>BADGE_TYPE_DARK = 34;</code>
     */
    public static final int BADGE_TYPE_DARK_VALUE = 34;
    /**
     * <code>BADGE_TYPE_FAIRY = 35;</code>
     */
    public static final int BADGE_TYPE_FAIRY_VALUE = 35;
    /**
     * <code>BADGE_SMALL_RATTATA = 36;</code>
     */
    public static final int BADGE_SMALL_RATTATA_VALUE = 36;
    /**
     * <code>BADGE_PIKACHU = 37;</code>
     */
    public static final int BADGE_PIKACHU_VALUE = 37;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BadgeType valueOf(int value) {
      return forNumber(value);
    }

    public static BadgeType forNumber(int value) {
      switch (value) {
        case 0: return BADGE_UNSET;
        case 1: return BADGE_TRAVEL_KM;
        case 2: return BADGE_POKEDEX_ENTRIES;
        case 3: return BADGE_CAPTURE_TOTAL;
        case 4: return BADGE_DEFEATED_FORT;
        case 5: return BADGE_EVOLVED_TOTAL;
        case 6: return BADGE_HATCHED_TOTAL;
        case 7: return BADGE_ENCOUNTERED_TOTAL;
        case 8: return BADGE_POKESTOPS_VISITED;
        case 9: return BADGE_UNIQUE_POKESTOPS;
        case 10: return BADGE_POKEBALL_THROWN;
        case 11: return BADGE_BIG_MAGIKARP;
        case 12: return BADGE_DEPLOYED_TOTAL;
        case 13: return BADGE_BATTLE_ATTACK_WON;
        case 14: return BADGE_BATTLE_TRAINING_WON;
        case 15: return BADGE_BATTLE_DEFEND_WON;
        case 16: return BADGE_PRESTIGE_RAISED;
        case 17: return BADGE_PRESTIGE_DROPPED;
        case 18: return BADGE_TYPE_NORMAL;
        case 19: return BADGE_TYPE_FIGHTING;
        case 20: return BADGE_TYPE_FLYING;
        case 21: return BADGE_TYPE_POISON;
        case 22: return BADGE_TYPE_GROUND;
        case 23: return BADGE_TYPE_ROCK;
        case 24: return BADGE_TYPE_BUG;
        case 25: return BADGE_TYPE_GHOST;
        case 26: return BADGE_TYPE_STEEL;
        case 27: return BADGE_TYPE_FIRE;
        case 28: return BADGE_TYPE_WATER;
        case 29: return BADGE_TYPE_GRASS;
        case 30: return BADGE_TYPE_ELECTRIC;
        case 31: return BADGE_TYPE_PSYCHIC;
        case 32: return BADGE_TYPE_ICE;
        case 33: return BADGE_TYPE_DRAGON;
        case 34: return BADGE_TYPE_DARK;
        case 35: return BADGE_TYPE_FAIRY;
        case 36: return BADGE_SMALL_RATTATA;
        case 37: return BADGE_PIKACHU;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BadgeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BadgeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BadgeType>() {
            public BadgeType findValueByNumber(int number) {
              return BadgeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.Enums.getDescriptor().getEnumTypes().get(10);
    }

    private static final BadgeType[] VALUES = values();

    public static BadgeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BadgeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.enums.BadgeType)
  }

  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.enums.PokemonType}
   */
  public enum PokemonType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>POKEMON_TYPE_NONE = 0;</code>
     */
    POKEMON_TYPE_NONE(0),
    /**
     * <code>POKEMON_TYPE_NORMAL = 1;</code>
     */
    POKEMON_TYPE_NORMAL(1),
    /**
     * <code>POKEMON_TYPE_FIGHTING = 2;</code>
     */
    POKEMON_TYPE_FIGHTING(2),
    /**
     * <code>POKEMON_TYPE_FLYING = 3;</code>
     */
    POKEMON_TYPE_FLYING(3),
    /**
     * <code>POKEMON_TYPE_POISON = 4;</code>
     */
    POKEMON_TYPE_POISON(4),
    /**
     * <code>POKEMON_TYPE_GROUND = 5;</code>
     */
    POKEMON_TYPE_GROUND(5),
    /**
     * <code>POKEMON_TYPE_ROCK = 6;</code>
     */
    POKEMON_TYPE_ROCK(6),
    /**
     * <code>POKEMON_TYPE_BUG = 7;</code>
     */
    POKEMON_TYPE_BUG(7),
    /**
     * <code>POKEMON_TYPE_GHOST = 8;</code>
     */
    POKEMON_TYPE_GHOST(8),
    /**
     * <code>POKEMON_TYPE_STEEL = 9;</code>
     */
    POKEMON_TYPE_STEEL(9),
    /**
     * <code>POKEMON_TYPE_FIRE = 10;</code>
     */
    POKEMON_TYPE_FIRE(10),
    /**
     * <code>POKEMON_TYPE_WATER = 11;</code>
     */
    POKEMON_TYPE_WATER(11),
    /**
     * <code>POKEMON_TYPE_GRASS = 12;</code>
     */
    POKEMON_TYPE_GRASS(12),
    /**
     * <code>POKEMON_TYPE_ELECTRIC = 13;</code>
     */
    POKEMON_TYPE_ELECTRIC(13),
    /**
     * <code>POKEMON_TYPE_PSYCHIC = 14;</code>
     */
    POKEMON_TYPE_PSYCHIC(14),
    /**
     * <code>POKEMON_TYPE_ICE = 15;</code>
     */
    POKEMON_TYPE_ICE(15),
    /**
     * <code>POKEMON_TYPE_DRAGON = 16;</code>
     */
    POKEMON_TYPE_DRAGON(16),
    /**
     * <code>POKEMON_TYPE_DARK = 17;</code>
     */
    POKEMON_TYPE_DARK(17),
    /**
     * <code>POKEMON_TYPE_FAIRY = 18;</code>
     */
    POKEMON_TYPE_FAIRY(18),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>POKEMON_TYPE_NONE = 0;</code>
     */
    public static final int POKEMON_TYPE_NONE_VALUE = 0;
    /**
     * <code>POKEMON_TYPE_NORMAL = 1;</code>
     */
    public static final int POKEMON_TYPE_NORMAL_VALUE = 1;
    /**
     * <code>POKEMON_TYPE_FIGHTING = 2;</code>
     */
    public static final int POKEMON_TYPE_FIGHTING_VALUE = 2;
    /**
     * <code>POKEMON_TYPE_FLYING = 3;</code>
     */
    public static final int POKEMON_TYPE_FLYING_VALUE = 3;
    /**
     * <code>POKEMON_TYPE_POISON = 4;</code>
     */
    public static final int POKEMON_TYPE_POISON_VALUE = 4;
    /**
     * <code>POKEMON_TYPE_GROUND = 5;</code>
     */
    public static final int POKEMON_TYPE_GROUND_VALUE = 5;
    /**
     * <code>POKEMON_TYPE_ROCK = 6;</code>
     */
    public static final int POKEMON_TYPE_ROCK_VALUE = 6;
    /**
     * <code>POKEMON_TYPE_BUG = 7;</code>
     */
    public static final int POKEMON_TYPE_BUG_VALUE = 7;
    /**
     * <code>POKEMON_TYPE_GHOST = 8;</code>
     */
    public static final int POKEMON_TYPE_GHOST_VALUE = 8;
    /**
     * <code>POKEMON_TYPE_STEEL = 9;</code>
     */
    public static final int POKEMON_TYPE_STEEL_VALUE = 9;
    /**
     * <code>POKEMON_TYPE_FIRE = 10;</code>
     */
    public static final int POKEMON_TYPE_FIRE_VALUE = 10;
    /**
     * <code>POKEMON_TYPE_WATER = 11;</code>
     */
    public static final int POKEMON_TYPE_WATER_VALUE = 11;
    /**
     * <code>POKEMON_TYPE_GRASS = 12;</code>
     */
    public static final int POKEMON_TYPE_GRASS_VALUE = 12;
    /**
     * <code>POKEMON_TYPE_ELECTRIC = 13;</code>
     */
    public static final int POKEMON_TYPE_ELECTRIC_VALUE = 13;
    /**
     * <code>POKEMON_TYPE_PSYCHIC = 14;</code>
     */
    public static final int POKEMON_TYPE_PSYCHIC_VALUE = 14;
    /**
     * <code>POKEMON_TYPE_ICE = 15;</code>
     */
    public static final int POKEMON_TYPE_ICE_VALUE = 15;
    /**
     * <code>POKEMON_TYPE_DRAGON = 16;</code>
     */
    public static final int POKEMON_TYPE_DRAGON_VALUE = 16;
    /**
     * <code>POKEMON_TYPE_DARK = 17;</code>
     */
    public static final int POKEMON_TYPE_DARK_VALUE = 17;
    /**
     * <code>POKEMON_TYPE_FAIRY = 18;</code>
     */
    public static final int POKEMON_TYPE_FAIRY_VALUE = 18;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PokemonType valueOf(int value) {
      return forNumber(value);
    }

    public static PokemonType forNumber(int value) {
      switch (value) {
        case 0: return POKEMON_TYPE_NONE;
        case 1: return POKEMON_TYPE_NORMAL;
        case 2: return POKEMON_TYPE_FIGHTING;
        case 3: return POKEMON_TYPE_FLYING;
        case 4: return POKEMON_TYPE_POISON;
        case 5: return POKEMON_TYPE_GROUND;
        case 6: return POKEMON_TYPE_ROCK;
        case 7: return POKEMON_TYPE_BUG;
        case 8: return POKEMON_TYPE_GHOST;
        case 9: return POKEMON_TYPE_STEEL;
        case 10: return POKEMON_TYPE_FIRE;
        case 11: return POKEMON_TYPE_WATER;
        case 12: return POKEMON_TYPE_GRASS;
        case 13: return POKEMON_TYPE_ELECTRIC;
        case 14: return POKEMON_TYPE_PSYCHIC;
        case 15: return POKEMON_TYPE_ICE;
        case 16: return POKEMON_TYPE_DRAGON;
        case 17: return POKEMON_TYPE_DARK;
        case 18: return POKEMON_TYPE_FAIRY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PokemonType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PokemonType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PokemonType>() {
            public PokemonType findValueByNumber(int number) {
              return PokemonType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.Enums.getDescriptor().getEnumTypes().get(11);
    }

    private static final PokemonType[] VALUES = values();

    public static PokemonType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PokemonType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.enums.PokemonType)
  }

  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.enums.CameraTarget}
   */
  public enum CameraTarget
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CAM_TARGET_ATTACKER = 0;</code>
     */
    CAM_TARGET_ATTACKER(0),
    /**
     * <code>CAM_TARGET_ATTACKER_EDGE = 1;</code>
     */
    CAM_TARGET_ATTACKER_EDGE(1),
    /**
     * <code>CAM_TARGET_ATTACKER_GROUND = 2;</code>
     */
    CAM_TARGET_ATTACKER_GROUND(2),
    /**
     * <code>CAM_TARGET_DEFENDER = 3;</code>
     */
    CAM_TARGET_DEFENDER(3),
    /**
     * <code>CAM_TARGET_DEFENDER_EDGE = 4;</code>
     */
    CAM_TARGET_DEFENDER_EDGE(4),
    /**
     * <code>CAM_TARGET_DEFENDER_GROUND = 5;</code>
     */
    CAM_TARGET_DEFENDER_GROUND(5),
    /**
     * <code>CAM_TARGET_ATTACKER_DEFENDER = 6;</code>
     */
    CAM_TARGET_ATTACKER_DEFENDER(6),
    /**
     * <code>CAM_TARGET_ATTACKER_DEFENDER_EDGE = 7;</code>
     */
    CAM_TARGET_ATTACKER_DEFENDER_EDGE(7),
    /**
     * <code>CAM_TARGET_DEFENDER_ATTACKER = 8;</code>
     */
    CAM_TARGET_DEFENDER_ATTACKER(8),
    /**
     * <code>CAM_TARGET_DEFENDER_ATTACKER_EDGE = 9;</code>
     */
    CAM_TARGET_DEFENDER_ATTACKER_EDGE(9),
    /**
     * <code>CAM_TARGET_ATTACKER_DEFENDER_MIRROR = 11;</code>
     */
    CAM_TARGET_ATTACKER_DEFENDER_MIRROR(11),
    /**
     * <code>CAM_TARGET_SHOULDER_ATTACKER_DEFENDER = 12;</code>
     */
    CAM_TARGET_SHOULDER_ATTACKER_DEFENDER(12),
    /**
     * <code>CAM_TARGET_SHOULDER_ATTACKER_DEFENDER_MIRROR = 13;</code>
     */
    CAM_TARGET_SHOULDER_ATTACKER_DEFENDER_MIRROR(13),
    /**
     * <code>CAM_TARGET_ATTACKER_DEFENDER_WORLD = 14;</code>
     */
    CAM_TARGET_ATTACKER_DEFENDER_WORLD(14),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CAM_TARGET_ATTACKER = 0;</code>
     */
    public static final int CAM_TARGET_ATTACKER_VALUE = 0;
    /**
     * <code>CAM_TARGET_ATTACKER_EDGE = 1;</code>
     */
    public static final int CAM_TARGET_ATTACKER_EDGE_VALUE = 1;
    /**
     * <code>CAM_TARGET_ATTACKER_GROUND = 2;</code>
     */
    public static final int CAM_TARGET_ATTACKER_GROUND_VALUE = 2;
    /**
     * <code>CAM_TARGET_DEFENDER = 3;</code>
     */
    public static final int CAM_TARGET_DEFENDER_VALUE = 3;
    /**
     * <code>CAM_TARGET_DEFENDER_EDGE = 4;</code>
     */
    public static final int CAM_TARGET_DEFENDER_EDGE_VALUE = 4;
    /**
     * <code>CAM_TARGET_DEFENDER_GROUND = 5;</code>
     */
    public static final int CAM_TARGET_DEFENDER_GROUND_VALUE = 5;
    /**
     * <code>CAM_TARGET_ATTACKER_DEFENDER = 6;</code>
     */
    public static final int CAM_TARGET_ATTACKER_DEFENDER_VALUE = 6;
    /**
     * <code>CAM_TARGET_ATTACKER_DEFENDER_EDGE = 7;</code>
     */
    public static final int CAM_TARGET_ATTACKER_DEFENDER_EDGE_VALUE = 7;
    /**
     * <code>CAM_TARGET_DEFENDER_ATTACKER = 8;</code>
     */
    public static final int CAM_TARGET_DEFENDER_ATTACKER_VALUE = 8;
    /**
     * <code>CAM_TARGET_DEFENDER_ATTACKER_EDGE = 9;</code>
     */
    public static final int CAM_TARGET_DEFENDER_ATTACKER_EDGE_VALUE = 9;
    /**
     * <code>CAM_TARGET_ATTACKER_DEFENDER_MIRROR = 11;</code>
     */
    public static final int CAM_TARGET_ATTACKER_DEFENDER_MIRROR_VALUE = 11;
    /**
     * <code>CAM_TARGET_SHOULDER_ATTACKER_DEFENDER = 12;</code>
     */
    public static final int CAM_TARGET_SHOULDER_ATTACKER_DEFENDER_VALUE = 12;
    /**
     * <code>CAM_TARGET_SHOULDER_ATTACKER_DEFENDER_MIRROR = 13;</code>
     */
    public static final int CAM_TARGET_SHOULDER_ATTACKER_DEFENDER_MIRROR_VALUE = 13;
    /**
     * <code>CAM_TARGET_ATTACKER_DEFENDER_WORLD = 14;</code>
     */
    public static final int CAM_TARGET_ATTACKER_DEFENDER_WORLD_VALUE = 14;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CameraTarget valueOf(int value) {
      return forNumber(value);
    }

    public static CameraTarget forNumber(int value) {
      switch (value) {
        case 0: return CAM_TARGET_ATTACKER;
        case 1: return CAM_TARGET_ATTACKER_EDGE;
        case 2: return CAM_TARGET_ATTACKER_GROUND;
        case 3: return CAM_TARGET_DEFENDER;
        case 4: return CAM_TARGET_DEFENDER_EDGE;
        case 5: return CAM_TARGET_DEFENDER_GROUND;
        case 6: return CAM_TARGET_ATTACKER_DEFENDER;
        case 7: return CAM_TARGET_ATTACKER_DEFENDER_EDGE;
        case 8: return CAM_TARGET_DEFENDER_ATTACKER;
        case 9: return CAM_TARGET_DEFENDER_ATTACKER_EDGE;
        case 11: return CAM_TARGET_ATTACKER_DEFENDER_MIRROR;
        case 12: return CAM_TARGET_SHOULDER_ATTACKER_DEFENDER;
        case 13: return CAM_TARGET_SHOULDER_ATTACKER_DEFENDER_MIRROR;
        case 14: return CAM_TARGET_ATTACKER_DEFENDER_WORLD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CameraTarget>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CameraTarget> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CameraTarget>() {
            public CameraTarget findValueByNumber(int number) {
              return CameraTarget.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.Enums.getDescriptor().getEnumTypes().get(12);
    }

    private static final CameraTarget[] VALUES = values();

    public static CameraTarget valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CameraTarget(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.enums.CameraTarget)
  }

  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.enums.PokemonMove}
   */
  public enum PokemonMove
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MOVE_UNSET = 0;</code>
     */
    MOVE_UNSET(0),
    /**
     * <code>THUNDER_SHOCK = 1;</code>
     */
    THUNDER_SHOCK(1),
    /**
     * <code>QUICK_ATTACK = 2;</code>
     */
    QUICK_ATTACK(2),
    /**
     * <code>SCRATCH = 3;</code>
     */
    SCRATCH(3),
    /**
     * <code>EMBER = 4;</code>
     */
    EMBER(4),
    /**
     * <code>VINE_WHIP = 5;</code>
     */
    VINE_WHIP(5),
    /**
     * <code>TACKLE = 6;</code>
     */
    TACKLE(6),
    /**
     * <code>RAZOR_LEAF = 7;</code>
     */
    RAZOR_LEAF(7),
    /**
     * <code>TAKE_DOWN = 8;</code>
     */
    TAKE_DOWN(8),
    /**
     * <code>WATER_GUN = 9;</code>
     */
    WATER_GUN(9),
    /**
     * <code>BITE = 10;</code>
     */
    BITE(10),
    /**
     * <code>POUND = 11;</code>
     */
    POUND(11),
    /**
     * <code>DOUBLE_SLAP = 12;</code>
     */
    DOUBLE_SLAP(12),
    /**
     * <code>WRAP = 13;</code>
     */
    WRAP(13),
    /**
     * <code>HYPER_BEAM = 14;</code>
     */
    HYPER_BEAM(14),
    /**
     * <code>LICK = 15;</code>
     */
    LICK(15),
    /**
     * <code>DARK_PULSE = 16;</code>
     */
    DARK_PULSE(16),
    /**
     * <code>SMOG = 17;</code>
     */
    SMOG(17),
    /**
     * <code>SLUDGE = 18;</code>
     */
    SLUDGE(18),
    /**
     * <code>METAL_CLAW = 19;</code>
     */
    METAL_CLAW(19),
    /**
     * <code>VICE_GRIP = 20;</code>
     */
    VICE_GRIP(20),
    /**
     * <code>FLAME_WHEEL = 21;</code>
     */
    FLAME_WHEEL(21),
    /**
     * <code>MEGAHORN = 22;</code>
     */
    MEGAHORN(22),
    /**
     * <code>WING_ATTACK = 23;</code>
     */
    WING_ATTACK(23),
    /**
     * <code>FLAMETHROWER = 24;</code>
     */
    FLAMETHROWER(24),
    /**
     * <code>SUCKER_PUNCH = 25;</code>
     */
    SUCKER_PUNCH(25),
    /**
     * <code>DIG = 26;</code>
     */
    DIG(26),
    /**
     * <code>LOW_KICK = 27;</code>
     */
    LOW_KICK(27),
    /**
     * <code>CROSS_CHOP = 28;</code>
     */
    CROSS_CHOP(28),
    /**
     * <code>PSYCHO_CUT = 29;</code>
     */
    PSYCHO_CUT(29),
    /**
     * <code>PSYBEAM = 30;</code>
     */
    PSYBEAM(30),
    /**
     * <code>EARTHQUAKE = 31;</code>
     */
    EARTHQUAKE(31),
    /**
     * <code>STONE_EDGE = 32;</code>
     */
    STONE_EDGE(32),
    /**
     * <code>ICE_PUNCH = 33;</code>
     */
    ICE_PUNCH(33),
    /**
     * <code>HEART_STAMP = 34;</code>
     */
    HEART_STAMP(34),
    /**
     * <code>DISCHARGE = 35;</code>
     */
    DISCHARGE(35),
    /**
     * <code>FLASH_CANNON = 36;</code>
     */
    FLASH_CANNON(36),
    /**
     * <code>PECK = 37;</code>
     */
    PECK(37),
    /**
     * <code>DRILL_PECK = 38;</code>
     */
    DRILL_PECK(38),
    /**
     * <code>ICE_BEAM = 39;</code>
     */
    ICE_BEAM(39),
    /**
     * <code>BLIZZARD = 40;</code>
     */
    BLIZZARD(40),
    /**
     * <code>AIR_SLASH = 41;</code>
     */
    AIR_SLASH(41),
    /**
     * <code>HEAT_WAVE = 42;</code>
     */
    HEAT_WAVE(42),
    /**
     * <code>TWINEEDLE = 43;</code>
     */
    TWINEEDLE(43),
    /**
     * <code>POISON_JAB = 44;</code>
     */
    POISON_JAB(44),
    /**
     * <code>AERIAL_ACE = 45;</code>
     */
    AERIAL_ACE(45),
    /**
     * <code>DRILL_RUN = 46;</code>
     */
    DRILL_RUN(46),
    /**
     * <code>PETAL_BLIZZARD = 47;</code>
     */
    PETAL_BLIZZARD(47),
    /**
     * <code>MEGA_DRAIN = 48;</code>
     */
    MEGA_DRAIN(48),
    /**
     * <code>BUG_BUZZ = 49;</code>
     */
    BUG_BUZZ(49),
    /**
     * <code>POISON_FANG = 50;</code>
     */
    POISON_FANG(50),
    /**
     * <code>NIGHT_SLASH = 51;</code>
     */
    NIGHT_SLASH(51),
    /**
     * <code>SLASH = 52;</code>
     */
    SLASH(52),
    /**
     * <code>BUBBLE_BEAM = 53;</code>
     */
    BUBBLE_BEAM(53),
    /**
     * <code>SUBMISSION = 54;</code>
     */
    SUBMISSION(54),
    /**
     * <code>KARATE_CHOP = 55;</code>
     */
    KARATE_CHOP(55),
    /**
     * <code>LOW_SWEEP = 56;</code>
     */
    LOW_SWEEP(56),
    /**
     * <code>AQUA_JET = 57;</code>
     */
    AQUA_JET(57),
    /**
     * <code>AQUA_TAIL = 58;</code>
     */
    AQUA_TAIL(58),
    /**
     * <code>SEED_BOMB = 59;</code>
     */
    SEED_BOMB(59),
    /**
     * <code>PSYSHOCK = 60;</code>
     */
    PSYSHOCK(60),
    /**
     * <code>ROCK_THROW = 61;</code>
     */
    ROCK_THROW(61),
    /**
     * <code>ANCIENT_POWER = 62;</code>
     */
    ANCIENT_POWER(62),
    /**
     * <code>ROCK_TOMB = 63;</code>
     */
    ROCK_TOMB(63),
    /**
     * <code>ROCK_SLIDE = 64;</code>
     */
    ROCK_SLIDE(64),
    /**
     * <code>POWER_GEM = 65;</code>
     */
    POWER_GEM(65),
    /**
     * <code>SHADOW_SNEAK = 66;</code>
     */
    SHADOW_SNEAK(66),
    /**
     * <code>SHADOW_PUNCH = 67;</code>
     */
    SHADOW_PUNCH(67),
    /**
     * <code>SHADOW_CLAW = 68;</code>
     */
    SHADOW_CLAW(68),
    /**
     * <code>OMINOUS_WIND = 69;</code>
     */
    OMINOUS_WIND(69),
    /**
     * <code>SHADOW_BALL = 70;</code>
     */
    SHADOW_BALL(70),
    /**
     * <code>BULLET_PUNCH = 71;</code>
     */
    BULLET_PUNCH(71),
    /**
     * <code>MAGNET_BOMB = 72;</code>
     */
    MAGNET_BOMB(72),
    /**
     * <code>STEEL_WING = 73;</code>
     */
    STEEL_WING(73),
    /**
     * <code>IRON_HEAD = 74;</code>
     */
    IRON_HEAD(74),
    /**
     * <code>PARABOLIC_CHARGE = 75;</code>
     */
    PARABOLIC_CHARGE(75),
    /**
     * <code>SPARK = 76;</code>
     */
    SPARK(76),
    /**
     * <code>THUNDER_PUNCH = 77;</code>
     */
    THUNDER_PUNCH(77),
    /**
     * <code>THUNDER = 78;</code>
     */
    THUNDER(78),
    /**
     * <code>THUNDERBOLT = 79;</code>
     */
    THUNDERBOLT(79),
    /**
     * <code>TWISTER = 80;</code>
     */
    TWISTER(80),
    /**
     * <code>DRAGON_BREATH = 81;</code>
     */
    DRAGON_BREATH(81),
    /**
     * <code>DRAGON_PULSE = 82;</code>
     */
    DRAGON_PULSE(82),
    /**
     * <code>DRAGON_CLAW = 83;</code>
     */
    DRAGON_CLAW(83),
    /**
     * <code>DISARMING_VOICE = 84;</code>
     */
    DISARMING_VOICE(84),
    /**
     * <code>DRAINING_KISS = 85;</code>
     */
    DRAINING_KISS(85),
    /**
     * <code>DAZZLING_GLEAM = 86;</code>
     */
    DAZZLING_GLEAM(86),
    /**
     * <code>MOONBLAST = 87;</code>
     */
    MOONBLAST(87),
    /**
     * <code>PLAY_ROUGH = 88;</code>
     */
    PLAY_ROUGH(88),
    /**
     * <code>CROSS_POISON = 89;</code>
     */
    CROSS_POISON(89),
    /**
     * <code>SLUDGE_BOMB = 90;</code>
     */
    SLUDGE_BOMB(90),
    /**
     * <code>SLUDGE_WAVE = 91;</code>
     */
    SLUDGE_WAVE(91),
    /**
     * <code>GUNK_SHOT = 92;</code>
     */
    GUNK_SHOT(92),
    /**
     * <code>MUD_SHOT = 93;</code>
     */
    MUD_SHOT(93),
    /**
     * <code>BONE_CLUB = 94;</code>
     */
    BONE_CLUB(94),
    /**
     * <code>BULLDOZE = 95;</code>
     */
    BULLDOZE(95),
    /**
     * <code>MUD_BOMB = 96;</code>
     */
    MUD_BOMB(96),
    /**
     * <code>FURY_CUTTER = 97;</code>
     */
    FURY_CUTTER(97),
    /**
     * <code>BUG_BITE = 98;</code>
     */
    BUG_BITE(98),
    /**
     * <code>SIGNAL_BEAM = 99;</code>
     */
    SIGNAL_BEAM(99),
    /**
     * <code>X_SCISSOR = 100;</code>
     */
    X_SCISSOR(100),
    /**
     * <code>FLAME_CHARGE = 101;</code>
     */
    FLAME_CHARGE(101),
    /**
     * <code>FLAME_BURST = 102;</code>
     */
    FLAME_BURST(102),
    /**
     * <code>FIRE_BLAST = 103;</code>
     */
    FIRE_BLAST(103),
    /**
     * <code>BRINE = 104;</code>
     */
    BRINE(104),
    /**
     * <code>WATER_PULSE = 105;</code>
     */
    WATER_PULSE(105),
    /**
     * <code>SCALD = 106;</code>
     */
    SCALD(106),
    /**
     * <code>HYDRO_PUMP = 107;</code>
     */
    HYDRO_PUMP(107),
    /**
     * <code>PSYCHIC = 108;</code>
     */
    PSYCHIC(108),
    /**
     * <code>PSYSTRIKE = 109;</code>
     */
    PSYSTRIKE(109),
    /**
     * <code>ICE_SHARD = 110;</code>
     */
    ICE_SHARD(110),
    /**
     * <code>ICY_WIND = 111;</code>
     */
    ICY_WIND(111),
    /**
     * <code>FROST_BREATH = 112;</code>
     */
    FROST_BREATH(112),
    /**
     * <code>ABSORB = 113;</code>
     */
    ABSORB(113),
    /**
     * <code>GIGA_DRAIN = 114;</code>
     */
    GIGA_DRAIN(114),
    /**
     * <code>FIRE_PUNCH = 115;</code>
     */
    FIRE_PUNCH(115),
    /**
     * <code>SOLAR_BEAM = 116;</code>
     */
    SOLAR_BEAM(116),
    /**
     * <code>LEAF_BLADE = 117;</code>
     */
    LEAF_BLADE(117),
    /**
     * <code>POWER_WHIP = 118;</code>
     */
    POWER_WHIP(118),
    /**
     * <code>SPLASH = 119;</code>
     */
    SPLASH(119),
    /**
     * <code>ACID = 120;</code>
     */
    ACID(120),
    /**
     * <code>AIR_CUTTER = 121;</code>
     */
    AIR_CUTTER(121),
    /**
     * <code>HURRICANE = 122;</code>
     */
    HURRICANE(122),
    /**
     * <code>BRICK_BREAK = 123;</code>
     */
    BRICK_BREAK(123),
    /**
     * <code>CUT = 124;</code>
     */
    CUT(124),
    /**
     * <code>SWIFT = 125;</code>
     */
    SWIFT(125),
    /**
     * <code>HORN_ATTACK = 126;</code>
     */
    HORN_ATTACK(126),
    /**
     * <code>STOMP = 127;</code>
     */
    STOMP(127),
    /**
     * <code>HEADBUTT = 128;</code>
     */
    HEADBUTT(128),
    /**
     * <code>HYPER_FANG = 129;</code>
     */
    HYPER_FANG(129),
    /**
     * <code>SLAM = 130;</code>
     */
    SLAM(130),
    /**
     * <code>BODY_SLAM = 131;</code>
     */
    BODY_SLAM(131),
    /**
     * <code>REST = 132;</code>
     */
    REST(132),
    /**
     * <code>STRUGGLE = 133;</code>
     */
    STRUGGLE(133),
    /**
     * <code>SCALD_BLASTOISE = 134;</code>
     */
    SCALD_BLASTOISE(134),
    /**
     * <code>HYDRO_PUMP_BLASTOISE = 135;</code>
     */
    HYDRO_PUMP_BLASTOISE(135),
    /**
     * <code>WRAP_GREEN = 136;</code>
     */
    WRAP_GREEN(136),
    /**
     * <code>WRAP_PINK = 137;</code>
     */
    WRAP_PINK(137),
    /**
     * <code>FURY_CUTTER_FAST = 200;</code>
     */
    FURY_CUTTER_FAST(200),
    /**
     * <code>BUG_BITE_FAST = 201;</code>
     */
    BUG_BITE_FAST(201),
    /**
     * <code>BITE_FAST = 202;</code>
     */
    BITE_FAST(202),
    /**
     * <code>SUCKER_PUNCH_FAST = 203;</code>
     */
    SUCKER_PUNCH_FAST(203),
    /**
     * <code>DRAGON_BREATH_FAST = 204;</code>
     */
    DRAGON_BREATH_FAST(204),
    /**
     * <code>THUNDER_SHOCK_FAST = 205;</code>
     */
    THUNDER_SHOCK_FAST(205),
    /**
     * <code>SPARK_FAST = 206;</code>
     */
    SPARK_FAST(206),
    /**
     * <code>LOW_KICK_FAST = 207;</code>
     */
    LOW_KICK_FAST(207),
    /**
     * <code>KARATE_CHOP_FAST = 208;</code>
     */
    KARATE_CHOP_FAST(208),
    /**
     * <code>EMBER_FAST = 209;</code>
     */
    EMBER_FAST(209),
    /**
     * <code>WING_ATTACK_FAST = 210;</code>
     */
    WING_ATTACK_FAST(210),
    /**
     * <code>PECK_FAST = 211;</code>
     */
    PECK_FAST(211),
    /**
     * <code>LICK_FAST = 212;</code>
     */
    LICK_FAST(212),
    /**
     * <code>SHADOW_CLAW_FAST = 213;</code>
     */
    SHADOW_CLAW_FAST(213),
    /**
     * <code>VINE_WHIP_FAST = 214;</code>
     */
    VINE_WHIP_FAST(214),
    /**
     * <code>RAZOR_LEAF_FAST = 215;</code>
     */
    RAZOR_LEAF_FAST(215),
    /**
     * <code>MUD_SHOT_FAST = 216;</code>
     */
    MUD_SHOT_FAST(216),
    /**
     * <code>ICE_SHARD_FAST = 217;</code>
     */
    ICE_SHARD_FAST(217),
    /**
     * <code>FROST_BREATH_FAST = 218;</code>
     */
    FROST_BREATH_FAST(218),
    /**
     * <code>QUICK_ATTACK_FAST = 219;</code>
     */
    QUICK_ATTACK_FAST(219),
    /**
     * <code>SCRATCH_FAST = 220;</code>
     */
    SCRATCH_FAST(220),
    /**
     * <code>TACKLE_FAST = 221;</code>
     */
    TACKLE_FAST(221),
    /**
     * <code>POUND_FAST = 222;</code>
     */
    POUND_FAST(222),
    /**
     * <code>CUT_FAST = 223;</code>
     */
    CUT_FAST(223),
    /**
     * <code>POISON_JAB_FAST = 224;</code>
     */
    POISON_JAB_FAST(224),
    /**
     * <code>ACID_FAST = 225;</code>
     */
    ACID_FAST(225),
    /**
     * <code>PSYCHO_CUT_FAST = 226;</code>
     */
    PSYCHO_CUT_FAST(226),
    /**
     * <code>ROCK_THROW_FAST = 227;</code>
     */
    ROCK_THROW_FAST(227),
    /**
     * <code>METAL_CLAW_FAST = 228;</code>
     */
    METAL_CLAW_FAST(228),
    /**
     * <code>BULLET_PUNCH_FAST = 229;</code>
     */
    BULLET_PUNCH_FAST(229),
    /**
     * <code>WATER_GUN_FAST = 230;</code>
     */
    WATER_GUN_FAST(230),
    /**
     * <code>SPLASH_FAST = 231;</code>
     */
    SPLASH_FAST(231),
    /**
     * <code>WATER_GUN_FAST_BLASTOISE = 232;</code>
     */
    WATER_GUN_FAST_BLASTOISE(232),
    /**
     * <code>MUD_SLAP_FAST = 233;</code>
     */
    MUD_SLAP_FAST(233),
    /**
     * <code>ZEN_HEADBUTT_FAST = 234;</code>
     */
    ZEN_HEADBUTT_FAST(234),
    /**
     * <code>CONFUSION_FAST = 235;</code>
     */
    CONFUSION_FAST(235),
    /**
     * <code>POISON_STING_FAST = 236;</code>
     */
    POISON_STING_FAST(236),
    /**
     * <code>BUBBLE_FAST = 237;</code>
     */
    BUBBLE_FAST(237),
    /**
     * <code>FEINT_ATTACK_FAST = 238;</code>
     */
    FEINT_ATTACK_FAST(238),
    /**
     * <code>STEEL_WING_FAST = 239;</code>
     */
    STEEL_WING_FAST(239),
    /**
     * <code>FIRE_FANG_FAST = 240;</code>
     */
    FIRE_FANG_FAST(240),
    /**
     * <code>ROCK_SMASH_FAST = 241;</code>
     */
    ROCK_SMASH_FAST(241),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MOVE_UNSET = 0;</code>
     */
    public static final int MOVE_UNSET_VALUE = 0;
    /**
     * <code>THUNDER_SHOCK = 1;</code>
     */
    public static final int THUNDER_SHOCK_VALUE = 1;
    /**
     * <code>QUICK_ATTACK = 2;</code>
     */
    public static final int QUICK_ATTACK_VALUE = 2;
    /**
     * <code>SCRATCH = 3;</code>
     */
    public static final int SCRATCH_VALUE = 3;
    /**
     * <code>EMBER = 4;</code>
     */
    public static final int EMBER_VALUE = 4;
    /**
     * <code>VINE_WHIP = 5;</code>
     */
    public static final int VINE_WHIP_VALUE = 5;
    /**
     * <code>TACKLE = 6;</code>
     */
    public static final int TACKLE_VALUE = 6;
    /**
     * <code>RAZOR_LEAF = 7;</code>
     */
    public static final int RAZOR_LEAF_VALUE = 7;
    /**
     * <code>TAKE_DOWN = 8;</code>
     */
    public static final int TAKE_DOWN_VALUE = 8;
    /**
     * <code>WATER_GUN = 9;</code>
     */
    public static final int WATER_GUN_VALUE = 9;
    /**
     * <code>BITE = 10;</code>
     */
    public static final int BITE_VALUE = 10;
    /**
     * <code>POUND = 11;</code>
     */
    public static final int POUND_VALUE = 11;
    /**
     * <code>DOUBLE_SLAP = 12;</code>
     */
    public static final int DOUBLE_SLAP_VALUE = 12;
    /**
     * <code>WRAP = 13;</code>
     */
    public static final int WRAP_VALUE = 13;
    /**
     * <code>HYPER_BEAM = 14;</code>
     */
    public static final int HYPER_BEAM_VALUE = 14;
    /**
     * <code>LICK = 15;</code>
     */
    public static final int LICK_VALUE = 15;
    /**
     * <code>DARK_PULSE = 16;</code>
     */
    public static final int DARK_PULSE_VALUE = 16;
    /**
     * <code>SMOG = 17;</code>
     */
    public static final int SMOG_VALUE = 17;
    /**
     * <code>SLUDGE = 18;</code>
     */
    public static final int SLUDGE_VALUE = 18;
    /**
     * <code>METAL_CLAW = 19;</code>
     */
    public static final int METAL_CLAW_VALUE = 19;
    /**
     * <code>VICE_GRIP = 20;</code>
     */
    public static final int VICE_GRIP_VALUE = 20;
    /**
     * <code>FLAME_WHEEL = 21;</code>
     */
    public static final int FLAME_WHEEL_VALUE = 21;
    /**
     * <code>MEGAHORN = 22;</code>
     */
    public static final int MEGAHORN_VALUE = 22;
    /**
     * <code>WING_ATTACK = 23;</code>
     */
    public static final int WING_ATTACK_VALUE = 23;
    /**
     * <code>FLAMETHROWER = 24;</code>
     */
    public static final int FLAMETHROWER_VALUE = 24;
    /**
     * <code>SUCKER_PUNCH = 25;</code>
     */
    public static final int SUCKER_PUNCH_VALUE = 25;
    /**
     * <code>DIG = 26;</code>
     */
    public static final int DIG_VALUE = 26;
    /**
     * <code>LOW_KICK = 27;</code>
     */
    public static final int LOW_KICK_VALUE = 27;
    /**
     * <code>CROSS_CHOP = 28;</code>
     */
    public static final int CROSS_CHOP_VALUE = 28;
    /**
     * <code>PSYCHO_CUT = 29;</code>
     */
    public static final int PSYCHO_CUT_VALUE = 29;
    /**
     * <code>PSYBEAM = 30;</code>
     */
    public static final int PSYBEAM_VALUE = 30;
    /**
     * <code>EARTHQUAKE = 31;</code>
     */
    public static final int EARTHQUAKE_VALUE = 31;
    /**
     * <code>STONE_EDGE = 32;</code>
     */
    public static final int STONE_EDGE_VALUE = 32;
    /**
     * <code>ICE_PUNCH = 33;</code>
     */
    public static final int ICE_PUNCH_VALUE = 33;
    /**
     * <code>HEART_STAMP = 34;</code>
     */
    public static final int HEART_STAMP_VALUE = 34;
    /**
     * <code>DISCHARGE = 35;</code>
     */
    public static final int DISCHARGE_VALUE = 35;
    /**
     * <code>FLASH_CANNON = 36;</code>
     */
    public static final int FLASH_CANNON_VALUE = 36;
    /**
     * <code>PECK = 37;</code>
     */
    public static final int PECK_VALUE = 37;
    /**
     * <code>DRILL_PECK = 38;</code>
     */
    public static final int DRILL_PECK_VALUE = 38;
    /**
     * <code>ICE_BEAM = 39;</code>
     */
    public static final int ICE_BEAM_VALUE = 39;
    /**
     * <code>BLIZZARD = 40;</code>
     */
    public static final int BLIZZARD_VALUE = 40;
    /**
     * <code>AIR_SLASH = 41;</code>
     */
    public static final int AIR_SLASH_VALUE = 41;
    /**
     * <code>HEAT_WAVE = 42;</code>
     */
    public static final int HEAT_WAVE_VALUE = 42;
    /**
     * <code>TWINEEDLE = 43;</code>
     */
    public static final int TWINEEDLE_VALUE = 43;
    /**
     * <code>POISON_JAB = 44;</code>
     */
    public static final int POISON_JAB_VALUE = 44;
    /**
     * <code>AERIAL_ACE = 45;</code>
     */
    public static final int AERIAL_ACE_VALUE = 45;
    /**
     * <code>DRILL_RUN = 46;</code>
     */
    public static final int DRILL_RUN_VALUE = 46;
    /**
     * <code>PETAL_BLIZZARD = 47;</code>
     */
    public static final int PETAL_BLIZZARD_VALUE = 47;
    /**
     * <code>MEGA_DRAIN = 48;</code>
     */
    public static final int MEGA_DRAIN_VALUE = 48;
    /**
     * <code>BUG_BUZZ = 49;</code>
     */
    public static final int BUG_BUZZ_VALUE = 49;
    /**
     * <code>POISON_FANG = 50;</code>
     */
    public static final int POISON_FANG_VALUE = 50;
    /**
     * <code>NIGHT_SLASH = 51;</code>
     */
    public static final int NIGHT_SLASH_VALUE = 51;
    /**
     * <code>SLASH = 52;</code>
     */
    public static final int SLASH_VALUE = 52;
    /**
     * <code>BUBBLE_BEAM = 53;</code>
     */
    public static final int BUBBLE_BEAM_VALUE = 53;
    /**
     * <code>SUBMISSION = 54;</code>
     */
    public static final int SUBMISSION_VALUE = 54;
    /**
     * <code>KARATE_CHOP = 55;</code>
     */
    public static final int KARATE_CHOP_VALUE = 55;
    /**
     * <code>LOW_SWEEP = 56;</code>
     */
    public static final int LOW_SWEEP_VALUE = 56;
    /**
     * <code>AQUA_JET = 57;</code>
     */
    public static final int AQUA_JET_VALUE = 57;
    /**
     * <code>AQUA_TAIL = 58;</code>
     */
    public static final int AQUA_TAIL_VALUE = 58;
    /**
     * <code>SEED_BOMB = 59;</code>
     */
    public static final int SEED_BOMB_VALUE = 59;
    /**
     * <code>PSYSHOCK = 60;</code>
     */
    public static final int PSYSHOCK_VALUE = 60;
    /**
     * <code>ROCK_THROW = 61;</code>
     */
    public static final int ROCK_THROW_VALUE = 61;
    /**
     * <code>ANCIENT_POWER = 62;</code>
     */
    public static final int ANCIENT_POWER_VALUE = 62;
    /**
     * <code>ROCK_TOMB = 63;</code>
     */
    public static final int ROCK_TOMB_VALUE = 63;
    /**
     * <code>ROCK_SLIDE = 64;</code>
     */
    public static final int ROCK_SLIDE_VALUE = 64;
    /**
     * <code>POWER_GEM = 65;</code>
     */
    public static final int POWER_GEM_VALUE = 65;
    /**
     * <code>SHADOW_SNEAK = 66;</code>
     */
    public static final int SHADOW_SNEAK_VALUE = 66;
    /**
     * <code>SHADOW_PUNCH = 67;</code>
     */
    public static final int SHADOW_PUNCH_VALUE = 67;
    /**
     * <code>SHADOW_CLAW = 68;</code>
     */
    public static final int SHADOW_CLAW_VALUE = 68;
    /**
     * <code>OMINOUS_WIND = 69;</code>
     */
    public static final int OMINOUS_WIND_VALUE = 69;
    /**
     * <code>SHADOW_BALL = 70;</code>
     */
    public static final int SHADOW_BALL_VALUE = 70;
    /**
     * <code>BULLET_PUNCH = 71;</code>
     */
    public static final int BULLET_PUNCH_VALUE = 71;
    /**
     * <code>MAGNET_BOMB = 72;</code>
     */
    public static final int MAGNET_BOMB_VALUE = 72;
    /**
     * <code>STEEL_WING = 73;</code>
     */
    public static final int STEEL_WING_VALUE = 73;
    /**
     * <code>IRON_HEAD = 74;</code>
     */
    public static final int IRON_HEAD_VALUE = 74;
    /**
     * <code>PARABOLIC_CHARGE = 75;</code>
     */
    public static final int PARABOLIC_CHARGE_VALUE = 75;
    /**
     * <code>SPARK = 76;</code>
     */
    public static final int SPARK_VALUE = 76;
    /**
     * <code>THUNDER_PUNCH = 77;</code>
     */
    public static final int THUNDER_PUNCH_VALUE = 77;
    /**
     * <code>THUNDER = 78;</code>
     */
    public static final int THUNDER_VALUE = 78;
    /**
     * <code>THUNDERBOLT = 79;</code>
     */
    public static final int THUNDERBOLT_VALUE = 79;
    /**
     * <code>TWISTER = 80;</code>
     */
    public static final int TWISTER_VALUE = 80;
    /**
     * <code>DRAGON_BREATH = 81;</code>
     */
    public static final int DRAGON_BREATH_VALUE = 81;
    /**
     * <code>DRAGON_PULSE = 82;</code>
     */
    public static final int DRAGON_PULSE_VALUE = 82;
    /**
     * <code>DRAGON_CLAW = 83;</code>
     */
    public static final int DRAGON_CLAW_VALUE = 83;
    /**
     * <code>DISARMING_VOICE = 84;</code>
     */
    public static final int DISARMING_VOICE_VALUE = 84;
    /**
     * <code>DRAINING_KISS = 85;</code>
     */
    public static final int DRAINING_KISS_VALUE = 85;
    /**
     * <code>DAZZLING_GLEAM = 86;</code>
     */
    public static final int DAZZLING_GLEAM_VALUE = 86;
    /**
     * <code>MOONBLAST = 87;</code>
     */
    public static final int MOONBLAST_VALUE = 87;
    /**
     * <code>PLAY_ROUGH = 88;</code>
     */
    public static final int PLAY_ROUGH_VALUE = 88;
    /**
     * <code>CROSS_POISON = 89;</code>
     */
    public static final int CROSS_POISON_VALUE = 89;
    /**
     * <code>SLUDGE_BOMB = 90;</code>
     */
    public static final int SLUDGE_BOMB_VALUE = 90;
    /**
     * <code>SLUDGE_WAVE = 91;</code>
     */
    public static final int SLUDGE_WAVE_VALUE = 91;
    /**
     * <code>GUNK_SHOT = 92;</code>
     */
    public static final int GUNK_SHOT_VALUE = 92;
    /**
     * <code>MUD_SHOT = 93;</code>
     */
    public static final int MUD_SHOT_VALUE = 93;
    /**
     * <code>BONE_CLUB = 94;</code>
     */
    public static final int BONE_CLUB_VALUE = 94;
    /**
     * <code>BULLDOZE = 95;</code>
     */
    public static final int BULLDOZE_VALUE = 95;
    /**
     * <code>MUD_BOMB = 96;</code>
     */
    public static final int MUD_BOMB_VALUE = 96;
    /**
     * <code>FURY_CUTTER = 97;</code>
     */
    public static final int FURY_CUTTER_VALUE = 97;
    /**
     * <code>BUG_BITE = 98;</code>
     */
    public static final int BUG_BITE_VALUE = 98;
    /**
     * <code>SIGNAL_BEAM = 99;</code>
     */
    public static final int SIGNAL_BEAM_VALUE = 99;
    /**
     * <code>X_SCISSOR = 100;</code>
     */
    public static final int X_SCISSOR_VALUE = 100;
    /**
     * <code>FLAME_CHARGE = 101;</code>
     */
    public static final int FLAME_CHARGE_VALUE = 101;
    /**
     * <code>FLAME_BURST = 102;</code>
     */
    public static final int FLAME_BURST_VALUE = 102;
    /**
     * <code>FIRE_BLAST = 103;</code>
     */
    public static final int FIRE_BLAST_VALUE = 103;
    /**
     * <code>BRINE = 104;</code>
     */
    public static final int BRINE_VALUE = 104;
    /**
     * <code>WATER_PULSE = 105;</code>
     */
    public static final int WATER_PULSE_VALUE = 105;
    /**
     * <code>SCALD = 106;</code>
     */
    public static final int SCALD_VALUE = 106;
    /**
     * <code>HYDRO_PUMP = 107;</code>
     */
    public static final int HYDRO_PUMP_VALUE = 107;
    /**
     * <code>PSYCHIC = 108;</code>
     */
    public static final int PSYCHIC_VALUE = 108;
    /**
     * <code>PSYSTRIKE = 109;</code>
     */
    public static final int PSYSTRIKE_VALUE = 109;
    /**
     * <code>ICE_SHARD = 110;</code>
     */
    public static final int ICE_SHARD_VALUE = 110;
    /**
     * <code>ICY_WIND = 111;</code>
     */
    public static final int ICY_WIND_VALUE = 111;
    /**
     * <code>FROST_BREATH = 112;</code>
     */
    public static final int FROST_BREATH_VALUE = 112;
    /**
     * <code>ABSORB = 113;</code>
     */
    public static final int ABSORB_VALUE = 113;
    /**
     * <code>GIGA_DRAIN = 114;</code>
     */
    public static final int GIGA_DRAIN_VALUE = 114;
    /**
     * <code>FIRE_PUNCH = 115;</code>
     */
    public static final int FIRE_PUNCH_VALUE = 115;
    /**
     * <code>SOLAR_BEAM = 116;</code>
     */
    public static final int SOLAR_BEAM_VALUE = 116;
    /**
     * <code>LEAF_BLADE = 117;</code>
     */
    public static final int LEAF_BLADE_VALUE = 117;
    /**
     * <code>POWER_WHIP = 118;</code>
     */
    public static final int POWER_WHIP_VALUE = 118;
    /**
     * <code>SPLASH = 119;</code>
     */
    public static final int SPLASH_VALUE = 119;
    /**
     * <code>ACID = 120;</code>
     */
    public static final int ACID_VALUE = 120;
    /**
     * <code>AIR_CUTTER = 121;</code>
     */
    public static final int AIR_CUTTER_VALUE = 121;
    /**
     * <code>HURRICANE = 122;</code>
     */
    public static final int HURRICANE_VALUE = 122;
    /**
     * <code>BRICK_BREAK = 123;</code>
     */
    public static final int BRICK_BREAK_VALUE = 123;
    /**
     * <code>CUT = 124;</code>
     */
    public static final int CUT_VALUE = 124;
    /**
     * <code>SWIFT = 125;</code>
     */
    public static final int SWIFT_VALUE = 125;
    /**
     * <code>HORN_ATTACK = 126;</code>
     */
    public static final int HORN_ATTACK_VALUE = 126;
    /**
     * <code>STOMP = 127;</code>
     */
    public static final int STOMP_VALUE = 127;
    /**
     * <code>HEADBUTT = 128;</code>
     */
    public static final int HEADBUTT_VALUE = 128;
    /**
     * <code>HYPER_FANG = 129;</code>
     */
    public static final int HYPER_FANG_VALUE = 129;
    /**
     * <code>SLAM = 130;</code>
     */
    public static final int SLAM_VALUE = 130;
    /**
     * <code>BODY_SLAM = 131;</code>
     */
    public static final int BODY_SLAM_VALUE = 131;
    /**
     * <code>REST = 132;</code>
     */
    public static final int REST_VALUE = 132;
    /**
     * <code>STRUGGLE = 133;</code>
     */
    public static final int STRUGGLE_VALUE = 133;
    /**
     * <code>SCALD_BLASTOISE = 134;</code>
     */
    public static final int SCALD_BLASTOISE_VALUE = 134;
    /**
     * <code>HYDRO_PUMP_BLASTOISE = 135;</code>
     */
    public static final int HYDRO_PUMP_BLASTOISE_VALUE = 135;
    /**
     * <code>WRAP_GREEN = 136;</code>
     */
    public static final int WRAP_GREEN_VALUE = 136;
    /**
     * <code>WRAP_PINK = 137;</code>
     */
    public static final int WRAP_PINK_VALUE = 137;
    /**
     * <code>FURY_CUTTER_FAST = 200;</code>
     */
    public static final int FURY_CUTTER_FAST_VALUE = 200;
    /**
     * <code>BUG_BITE_FAST = 201;</code>
     */
    public static final int BUG_BITE_FAST_VALUE = 201;
    /**
     * <code>BITE_FAST = 202;</code>
     */
    public static final int BITE_FAST_VALUE = 202;
    /**
     * <code>SUCKER_PUNCH_FAST = 203;</code>
     */
    public static final int SUCKER_PUNCH_FAST_VALUE = 203;
    /**
     * <code>DRAGON_BREATH_FAST = 204;</code>
     */
    public static final int DRAGON_BREATH_FAST_VALUE = 204;
    /**
     * <code>THUNDER_SHOCK_FAST = 205;</code>
     */
    public static final int THUNDER_SHOCK_FAST_VALUE = 205;
    /**
     * <code>SPARK_FAST = 206;</code>
     */
    public static final int SPARK_FAST_VALUE = 206;
    /**
     * <code>LOW_KICK_FAST = 207;</code>
     */
    public static final int LOW_KICK_FAST_VALUE = 207;
    /**
     * <code>KARATE_CHOP_FAST = 208;</code>
     */
    public static final int KARATE_CHOP_FAST_VALUE = 208;
    /**
     * <code>EMBER_FAST = 209;</code>
     */
    public static final int EMBER_FAST_VALUE = 209;
    /**
     * <code>WING_ATTACK_FAST = 210;</code>
     */
    public static final int WING_ATTACK_FAST_VALUE = 210;
    /**
     * <code>PECK_FAST = 211;</code>
     */
    public static final int PECK_FAST_VALUE = 211;
    /**
     * <code>LICK_FAST = 212;</code>
     */
    public static final int LICK_FAST_VALUE = 212;
    /**
     * <code>SHADOW_CLAW_FAST = 213;</code>
     */
    public static final int SHADOW_CLAW_FAST_VALUE = 213;
    /**
     * <code>VINE_WHIP_FAST = 214;</code>
     */
    public static final int VINE_WHIP_FAST_VALUE = 214;
    /**
     * <code>RAZOR_LEAF_FAST = 215;</code>
     */
    public static final int RAZOR_LEAF_FAST_VALUE = 215;
    /**
     * <code>MUD_SHOT_FAST = 216;</code>
     */
    public static final int MUD_SHOT_FAST_VALUE = 216;
    /**
     * <code>ICE_SHARD_FAST = 217;</code>
     */
    public static final int ICE_SHARD_FAST_VALUE = 217;
    /**
     * <code>FROST_BREATH_FAST = 218;</code>
     */
    public static final int FROST_BREATH_FAST_VALUE = 218;
    /**
     * <code>QUICK_ATTACK_FAST = 219;</code>
     */
    public static final int QUICK_ATTACK_FAST_VALUE = 219;
    /**
     * <code>SCRATCH_FAST = 220;</code>
     */
    public static final int SCRATCH_FAST_VALUE = 220;
    /**
     * <code>TACKLE_FAST = 221;</code>
     */
    public static final int TACKLE_FAST_VALUE = 221;
    /**
     * <code>POUND_FAST = 222;</code>
     */
    public static final int POUND_FAST_VALUE = 222;
    /**
     * <code>CUT_FAST = 223;</code>
     */
    public static final int CUT_FAST_VALUE = 223;
    /**
     * <code>POISON_JAB_FAST = 224;</code>
     */
    public static final int POISON_JAB_FAST_VALUE = 224;
    /**
     * <code>ACID_FAST = 225;</code>
     */
    public static final int ACID_FAST_VALUE = 225;
    /**
     * <code>PSYCHO_CUT_FAST = 226;</code>
     */
    public static final int PSYCHO_CUT_FAST_VALUE = 226;
    /**
     * <code>ROCK_THROW_FAST = 227;</code>
     */
    public static final int ROCK_THROW_FAST_VALUE = 227;
    /**
     * <code>METAL_CLAW_FAST = 228;</code>
     */
    public static final int METAL_CLAW_FAST_VALUE = 228;
    /**
     * <code>BULLET_PUNCH_FAST = 229;</code>
     */
    public static final int BULLET_PUNCH_FAST_VALUE = 229;
    /**
     * <code>WATER_GUN_FAST = 230;</code>
     */
    public static final int WATER_GUN_FAST_VALUE = 230;
    /**
     * <code>SPLASH_FAST = 231;</code>
     */
    public static final int SPLASH_FAST_VALUE = 231;
    /**
     * <code>WATER_GUN_FAST_BLASTOISE = 232;</code>
     */
    public static final int WATER_GUN_FAST_BLASTOISE_VALUE = 232;
    /**
     * <code>MUD_SLAP_FAST = 233;</code>
     */
    public static final int MUD_SLAP_FAST_VALUE = 233;
    /**
     * <code>ZEN_HEADBUTT_FAST = 234;</code>
     */
    public static final int ZEN_HEADBUTT_FAST_VALUE = 234;
    /**
     * <code>CONFUSION_FAST = 235;</code>
     */
    public static final int CONFUSION_FAST_VALUE = 235;
    /**
     * <code>POISON_STING_FAST = 236;</code>
     */
    public static final int POISON_STING_FAST_VALUE = 236;
    /**
     * <code>BUBBLE_FAST = 237;</code>
     */
    public static final int BUBBLE_FAST_VALUE = 237;
    /**
     * <code>FEINT_ATTACK_FAST = 238;</code>
     */
    public static final int FEINT_ATTACK_FAST_VALUE = 238;
    /**
     * <code>STEEL_WING_FAST = 239;</code>
     */
    public static final int STEEL_WING_FAST_VALUE = 239;
    /**
     * <code>FIRE_FANG_FAST = 240;</code>
     */
    public static final int FIRE_FANG_FAST_VALUE = 240;
    /**
     * <code>ROCK_SMASH_FAST = 241;</code>
     */
    public static final int ROCK_SMASH_FAST_VALUE = 241;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PokemonMove valueOf(int value) {
      return forNumber(value);
    }

    public static PokemonMove forNumber(int value) {
      switch (value) {
        case 0: return MOVE_UNSET;
        case 1: return THUNDER_SHOCK;
        case 2: return QUICK_ATTACK;
        case 3: return SCRATCH;
        case 4: return EMBER;
        case 5: return VINE_WHIP;
        case 6: return TACKLE;
        case 7: return RAZOR_LEAF;
        case 8: return TAKE_DOWN;
        case 9: return WATER_GUN;
        case 10: return BITE;
        case 11: return POUND;
        case 12: return DOUBLE_SLAP;
        case 13: return WRAP;
        case 14: return HYPER_BEAM;
        case 15: return LICK;
        case 16: return DARK_PULSE;
        case 17: return SMOG;
        case 18: return SLUDGE;
        case 19: return METAL_CLAW;
        case 20: return VICE_GRIP;
        case 21: return FLAME_WHEEL;
        case 22: return MEGAHORN;
        case 23: return WING_ATTACK;
        case 24: return FLAMETHROWER;
        case 25: return SUCKER_PUNCH;
        case 26: return DIG;
        case 27: return LOW_KICK;
        case 28: return CROSS_CHOP;
        case 29: return PSYCHO_CUT;
        case 30: return PSYBEAM;
        case 31: return EARTHQUAKE;
        case 32: return STONE_EDGE;
        case 33: return ICE_PUNCH;
        case 34: return HEART_STAMP;
        case 35: return DISCHARGE;
        case 36: return FLASH_CANNON;
        case 37: return PECK;
        case 38: return DRILL_PECK;
        case 39: return ICE_BEAM;
        case 40: return BLIZZARD;
        case 41: return AIR_SLASH;
        case 42: return HEAT_WAVE;
        case 43: return TWINEEDLE;
        case 44: return POISON_JAB;
        case 45: return AERIAL_ACE;
        case 46: return DRILL_RUN;
        case 47: return PETAL_BLIZZARD;
        case 48: return MEGA_DRAIN;
        case 49: return BUG_BUZZ;
        case 50: return POISON_FANG;
        case 51: return NIGHT_SLASH;
        case 52: return SLASH;
        case 53: return BUBBLE_BEAM;
        case 54: return SUBMISSION;
        case 55: return KARATE_CHOP;
        case 56: return LOW_SWEEP;
        case 57: return AQUA_JET;
        case 58: return AQUA_TAIL;
        case 59: return SEED_BOMB;
        case 60: return PSYSHOCK;
        case 61: return ROCK_THROW;
        case 62: return ANCIENT_POWER;
        case 63: return ROCK_TOMB;
        case 64: return ROCK_SLIDE;
        case 65: return POWER_GEM;
        case 66: return SHADOW_SNEAK;
        case 67: return SHADOW_PUNCH;
        case 68: return SHADOW_CLAW;
        case 69: return OMINOUS_WIND;
        case 70: return SHADOW_BALL;
        case 71: return BULLET_PUNCH;
        case 72: return MAGNET_BOMB;
        case 73: return STEEL_WING;
        case 74: return IRON_HEAD;
        case 75: return PARABOLIC_CHARGE;
        case 76: return SPARK;
        case 77: return THUNDER_PUNCH;
        case 78: return THUNDER;
        case 79: return THUNDERBOLT;
        case 80: return TWISTER;
        case 81: return DRAGON_BREATH;
        case 82: return DRAGON_PULSE;
        case 83: return DRAGON_CLAW;
        case 84: return DISARMING_VOICE;
        case 85: return DRAINING_KISS;
        case 86: return DAZZLING_GLEAM;
        case 87: return MOONBLAST;
        case 88: return PLAY_ROUGH;
        case 89: return CROSS_POISON;
        case 90: return SLUDGE_BOMB;
        case 91: return SLUDGE_WAVE;
        case 92: return GUNK_SHOT;
        case 93: return MUD_SHOT;
        case 94: return BONE_CLUB;
        case 95: return BULLDOZE;
        case 96: return MUD_BOMB;
        case 97: return FURY_CUTTER;
        case 98: return BUG_BITE;
        case 99: return SIGNAL_BEAM;
        case 100: return X_SCISSOR;
        case 101: return FLAME_CHARGE;
        case 102: return FLAME_BURST;
        case 103: return FIRE_BLAST;
        case 104: return BRINE;
        case 105: return WATER_PULSE;
        case 106: return SCALD;
        case 107: return HYDRO_PUMP;
        case 108: return PSYCHIC;
        case 109: return PSYSTRIKE;
        case 110: return ICE_SHARD;
        case 111: return ICY_WIND;
        case 112: return FROST_BREATH;
        case 113: return ABSORB;
        case 114: return GIGA_DRAIN;
        case 115: return FIRE_PUNCH;
        case 116: return SOLAR_BEAM;
        case 117: return LEAF_BLADE;
        case 118: return POWER_WHIP;
        case 119: return SPLASH;
        case 120: return ACID;
        case 121: return AIR_CUTTER;
        case 122: return HURRICANE;
        case 123: return BRICK_BREAK;
        case 124: return CUT;
        case 125: return SWIFT;
        case 126: return HORN_ATTACK;
        case 127: return STOMP;
        case 128: return HEADBUTT;
        case 129: return HYPER_FANG;
        case 130: return SLAM;
        case 131: return BODY_SLAM;
        case 132: return REST;
        case 133: return STRUGGLE;
        case 134: return SCALD_BLASTOISE;
        case 135: return HYDRO_PUMP_BLASTOISE;
        case 136: return WRAP_GREEN;
        case 137: return WRAP_PINK;
        case 200: return FURY_CUTTER_FAST;
        case 201: return BUG_BITE_FAST;
        case 202: return BITE_FAST;
        case 203: return SUCKER_PUNCH_FAST;
        case 204: return DRAGON_BREATH_FAST;
        case 205: return THUNDER_SHOCK_FAST;
        case 206: return SPARK_FAST;
        case 207: return LOW_KICK_FAST;
        case 208: return KARATE_CHOP_FAST;
        case 209: return EMBER_FAST;
        case 210: return WING_ATTACK_FAST;
        case 211: return PECK_FAST;
        case 212: return LICK_FAST;
        case 213: return SHADOW_CLAW_FAST;
        case 214: return VINE_WHIP_FAST;
        case 215: return RAZOR_LEAF_FAST;
        case 216: return MUD_SHOT_FAST;
        case 217: return ICE_SHARD_FAST;
        case 218: return FROST_BREATH_FAST;
        case 219: return QUICK_ATTACK_FAST;
        case 220: return SCRATCH_FAST;
        case 221: return TACKLE_FAST;
        case 222: return POUND_FAST;
        case 223: return CUT_FAST;
        case 224: return POISON_JAB_FAST;
        case 225: return ACID_FAST;
        case 226: return PSYCHO_CUT_FAST;
        case 227: return ROCK_THROW_FAST;
        case 228: return METAL_CLAW_FAST;
        case 229: return BULLET_PUNCH_FAST;
        case 230: return WATER_GUN_FAST;
        case 231: return SPLASH_FAST;
        case 232: return WATER_GUN_FAST_BLASTOISE;
        case 233: return MUD_SLAP_FAST;
        case 234: return ZEN_HEADBUTT_FAST;
        case 235: return CONFUSION_FAST;
        case 236: return POISON_STING_FAST;
        case 237: return BUBBLE_FAST;
        case 238: return FEINT_ATTACK_FAST;
        case 239: return STEEL_WING_FAST;
        case 240: return FIRE_FANG_FAST;
        case 241: return ROCK_SMASH_FAST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PokemonMove>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PokemonMove> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PokemonMove>() {
            public PokemonMove findValueByNumber(int number) {
              return PokemonMove.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.Enums.getDescriptor().getEnumTypes().get(13);
    }

    private static final PokemonMove[] VALUES = values();

    public static PokemonMove valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PokemonMove(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.enums.PokemonMove)
  }

  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.enums.ItemCategory}
   */
  public enum ItemCategory
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ITEM_CATEGORY_NONE = 0;</code>
     */
    ITEM_CATEGORY_NONE(0),
    /**
     * <code>ITEM_CATEGORY_POKEBALL = 1;</code>
     */
    ITEM_CATEGORY_POKEBALL(1),
    /**
     * <code>ITEM_CATEGORY_FOOD = 2;</code>
     */
    ITEM_CATEGORY_FOOD(2),
    /**
     * <code>ITEM_CATEGORY_MEDICINE = 3;</code>
     */
    ITEM_CATEGORY_MEDICINE(3),
    /**
     * <code>ITEM_CATEGORY_BOOST = 4;</code>
     */
    ITEM_CATEGORY_BOOST(4),
    /**
     * <code>ITEM_CATEGORY_UTILITES = 5;</code>
     */
    ITEM_CATEGORY_UTILITES(5),
    /**
     * <code>ITEM_CATEGORY_CAMERA = 6;</code>
     */
    ITEM_CATEGORY_CAMERA(6),
    /**
     * <code>ITEM_CATEGORY_DISK = 7;</code>
     */
    ITEM_CATEGORY_DISK(7),
    /**
     * <code>ITEM_CATEGORY_INCUBATOR = 8;</code>
     */
    ITEM_CATEGORY_INCUBATOR(8),
    /**
     * <code>ITEM_CATEGORY_INCENSE = 9;</code>
     */
    ITEM_CATEGORY_INCENSE(9),
    /**
     * <code>ITEM_CATEGORY_XP_BOOST = 10;</code>
     */
    ITEM_CATEGORY_XP_BOOST(10),
    /**
     * <code>ITEM_CATEGORY_INVENTORY_UPGRADE = 11;</code>
     */
    ITEM_CATEGORY_INVENTORY_UPGRADE(11),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ITEM_CATEGORY_NONE = 0;</code>
     */
    public static final int ITEM_CATEGORY_NONE_VALUE = 0;
    /**
     * <code>ITEM_CATEGORY_POKEBALL = 1;</code>
     */
    public static final int ITEM_CATEGORY_POKEBALL_VALUE = 1;
    /**
     * <code>ITEM_CATEGORY_FOOD = 2;</code>
     */
    public static final int ITEM_CATEGORY_FOOD_VALUE = 2;
    /**
     * <code>ITEM_CATEGORY_MEDICINE = 3;</code>
     */
    public static final int ITEM_CATEGORY_MEDICINE_VALUE = 3;
    /**
     * <code>ITEM_CATEGORY_BOOST = 4;</code>
     */
    public static final int ITEM_CATEGORY_BOOST_VALUE = 4;
    /**
     * <code>ITEM_CATEGORY_UTILITES = 5;</code>
     */
    public static final int ITEM_CATEGORY_UTILITES_VALUE = 5;
    /**
     * <code>ITEM_CATEGORY_CAMERA = 6;</code>
     */
    public static final int ITEM_CATEGORY_CAMERA_VALUE = 6;
    /**
     * <code>ITEM_CATEGORY_DISK = 7;</code>
     */
    public static final int ITEM_CATEGORY_DISK_VALUE = 7;
    /**
     * <code>ITEM_CATEGORY_INCUBATOR = 8;</code>
     */
    public static final int ITEM_CATEGORY_INCUBATOR_VALUE = 8;
    /**
     * <code>ITEM_CATEGORY_INCENSE = 9;</code>
     */
    public static final int ITEM_CATEGORY_INCENSE_VALUE = 9;
    /**
     * <code>ITEM_CATEGORY_XP_BOOST = 10;</code>
     */
    public static final int ITEM_CATEGORY_XP_BOOST_VALUE = 10;
    /**
     * <code>ITEM_CATEGORY_INVENTORY_UPGRADE = 11;</code>
     */
    public static final int ITEM_CATEGORY_INVENTORY_UPGRADE_VALUE = 11;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ItemCategory valueOf(int value) {
      return forNumber(value);
    }

    public static ItemCategory forNumber(int value) {
      switch (value) {
        case 0: return ITEM_CATEGORY_NONE;
        case 1: return ITEM_CATEGORY_POKEBALL;
        case 2: return ITEM_CATEGORY_FOOD;
        case 3: return ITEM_CATEGORY_MEDICINE;
        case 4: return ITEM_CATEGORY_BOOST;
        case 5: return ITEM_CATEGORY_UTILITES;
        case 6: return ITEM_CATEGORY_CAMERA;
        case 7: return ITEM_CATEGORY_DISK;
        case 8: return ITEM_CATEGORY_INCUBATOR;
        case 9: return ITEM_CATEGORY_INCENSE;
        case 10: return ITEM_CATEGORY_XP_BOOST;
        case 11: return ITEM_CATEGORY_INVENTORY_UPGRADE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ItemCategory>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ItemCategory> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ItemCategory>() {
            public ItemCategory findValueByNumber(int number) {
              return ItemCategory.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.Enums.getDescriptor().getEnumTypes().get(14);
    }

    private static final ItemCategory[] VALUES = values();

    public static ItemCategory valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ItemCategory(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.enums.ItemCategory)
  }

  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.enums.CameraInterpolation}
   */
  public enum CameraInterpolation
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CAM_INTERP_CUT = 0;</code>
     */
    CAM_INTERP_CUT(0),
    /**
     * <code>CAM_INTERP_LINEAR = 1;</code>
     */
    CAM_INTERP_LINEAR(1),
    /**
     * <code>CAM_INTERP_SMOOTH = 2;</code>
     */
    CAM_INTERP_SMOOTH(2),
    /**
     * <code>CAM_INTERP_SMOOTH_ROT_LINEAR_MOVE = 3;</code>
     */
    CAM_INTERP_SMOOTH_ROT_LINEAR_MOVE(3),
    /**
     * <code>CAM_INTERP_DEPENDS = 4;</code>
     */
    CAM_INTERP_DEPENDS(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CAM_INTERP_CUT = 0;</code>
     */
    public static final int CAM_INTERP_CUT_VALUE = 0;
    /**
     * <code>CAM_INTERP_LINEAR = 1;</code>
     */
    public static final int CAM_INTERP_LINEAR_VALUE = 1;
    /**
     * <code>CAM_INTERP_SMOOTH = 2;</code>
     */
    public static final int CAM_INTERP_SMOOTH_VALUE = 2;
    /**
     * <code>CAM_INTERP_SMOOTH_ROT_LINEAR_MOVE = 3;</code>
     */
    public static final int CAM_INTERP_SMOOTH_ROT_LINEAR_MOVE_VALUE = 3;
    /**
     * <code>CAM_INTERP_DEPENDS = 4;</code>
     */
    public static final int CAM_INTERP_DEPENDS_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CameraInterpolation valueOf(int value) {
      return forNumber(value);
    }

    public static CameraInterpolation forNumber(int value) {
      switch (value) {
        case 0: return CAM_INTERP_CUT;
        case 1: return CAM_INTERP_LINEAR;
        case 2: return CAM_INTERP_SMOOTH;
        case 3: return CAM_INTERP_SMOOTH_ROT_LINEAR_MOVE;
        case 4: return CAM_INTERP_DEPENDS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CameraInterpolation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CameraInterpolation> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CameraInterpolation>() {
            public CameraInterpolation findValueByNumber(int number) {
              return CameraInterpolation.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.Enums.getDescriptor().getEnumTypes().get(15);
    }

    private static final CameraInterpolation[] VALUES = values();

    public static CameraInterpolation valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CameraInterpolation(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.enums.CameraInterpolation)
  }

  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.enums.PokemonId}
   */
  public enum PokemonId
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MISSINGNO = 0;</code>
     */
    MISSINGNO(0),
    /**
     * <code>BULBASAUR = 1;</code>
     */
    BULBASAUR(1),
    /**
     * <code>IVYSAUR = 2;</code>
     */
    IVYSAUR(2),
    /**
     * <code>VENUSAUR = 3;</code>
     */
    VENUSAUR(3),
    /**
     * <code>CHARMANDER = 4;</code>
     */
    CHARMANDER(4),
    /**
     * <code>CHARMELEON = 5;</code>
     */
    CHARMELEON(5),
    /**
     * <code>CHARIZARD = 6;</code>
     */
    CHARIZARD(6),
    /**
     * <code>SQUIRTLE = 7;</code>
     */
    SQUIRTLE(7),
    /**
     * <code>WARTORTLE = 8;</code>
     */
    WARTORTLE(8),
    /**
     * <code>BLASTOISE = 9;</code>
     */
    BLASTOISE(9),
    /**
     * <code>CATERPIE = 10;</code>
     */
    CATERPIE(10),
    /**
     * <code>METAPOD = 11;</code>
     */
    METAPOD(11),
    /**
     * <code>BUTTERFREE = 12;</code>
     */
    BUTTERFREE(12),
    /**
     * <code>WEEDLE = 13;</code>
     */
    WEEDLE(13),
    /**
     * <code>KAKUNA = 14;</code>
     */
    KAKUNA(14),
    /**
     * <code>BEEDRILL = 15;</code>
     */
    BEEDRILL(15),
    /**
     * <code>PIDGEY = 16;</code>
     */
    PIDGEY(16),
    /**
     * <code>PIDGEOTTO = 17;</code>
     */
    PIDGEOTTO(17),
    /**
     * <code>PIDGEOT = 18;</code>
     */
    PIDGEOT(18),
    /**
     * <code>RATTATA = 19;</code>
     */
    RATTATA(19),
    /**
     * <code>RATICATE = 20;</code>
     */
    RATICATE(20),
    /**
     * <code>SPEAROW = 21;</code>
     */
    SPEAROW(21),
    /**
     * <code>FEAROW = 22;</code>
     */
    FEAROW(22),
    /**
     * <code>EKANS = 23;</code>
     */
    EKANS(23),
    /**
     * <code>ARBOK = 24;</code>
     */
    ARBOK(24),
    /**
     * <code>PIKACHU = 25;</code>
     */
    PIKACHU(25),
    /**
     * <code>RAICHU = 26;</code>
     */
    RAICHU(26),
    /**
     * <code>SANDSHREW = 27;</code>
     */
    SANDSHREW(27),
    /**
     * <code>SANDSLASH = 28;</code>
     */
    SANDSLASH(28),
    /**
     * <code>NIDORAN_FEMALE = 29;</code>
     */
    NIDORAN_FEMALE(29),
    /**
     * <code>NIDORINA = 30;</code>
     */
    NIDORINA(30),
    /**
     * <code>NIDOQUEEN = 31;</code>
     */
    NIDOQUEEN(31),
    /**
     * <code>NIDORAN_MALE = 32;</code>
     */
    NIDORAN_MALE(32),
    /**
     * <code>NIDORINO = 33;</code>
     */
    NIDORINO(33),
    /**
     * <code>NIDOKING = 34;</code>
     */
    NIDOKING(34),
    /**
     * <code>CLEFAIRY = 35;</code>
     */
    CLEFAIRY(35),
    /**
     * <code>CLEFABLE = 36;</code>
     */
    CLEFABLE(36),
    /**
     * <code>VULPIX = 37;</code>
     */
    VULPIX(37),
    /**
     * <code>NINETALES = 38;</code>
     */
    NINETALES(38),
    /**
     * <code>JIGGLYPUFF = 39;</code>
     */
    JIGGLYPUFF(39),
    /**
     * <code>WIGGLYTUFF = 40;</code>
     */
    WIGGLYTUFF(40),
    /**
     * <code>ZUBAT = 41;</code>
     */
    ZUBAT(41),
    /**
     * <code>GOLBAT = 42;</code>
     */
    GOLBAT(42),
    /**
     * <code>ODDISH = 43;</code>
     */
    ODDISH(43),
    /**
     * <code>GLOOM = 44;</code>
     */
    GLOOM(44),
    /**
     * <code>VILEPLUME = 45;</code>
     */
    VILEPLUME(45),
    /**
     * <code>PARAS = 46;</code>
     */
    PARAS(46),
    /**
     * <code>PARASECT = 47;</code>
     */
    PARASECT(47),
    /**
     * <code>VENONAT = 48;</code>
     */
    VENONAT(48),
    /**
     * <code>VENOMOTH = 49;</code>
     */
    VENOMOTH(49),
    /**
     * <code>DIGLETT = 50;</code>
     */
    DIGLETT(50),
    /**
     * <code>DUGTRIO = 51;</code>
     */
    DUGTRIO(51),
    /**
     * <code>MEOWTH = 52;</code>
     */
    MEOWTH(52),
    /**
     * <code>PERSIAN = 53;</code>
     */
    PERSIAN(53),
    /**
     * <code>PSYDUCK = 54;</code>
     */
    PSYDUCK(54),
    /**
     * <code>GOLDUCK = 55;</code>
     */
    GOLDUCK(55),
    /**
     * <code>MANKEY = 56;</code>
     */
    MANKEY(56),
    /**
     * <code>PRIMEAPE = 57;</code>
     */
    PRIMEAPE(57),
    /**
     * <code>GROWLITHE = 58;</code>
     */
    GROWLITHE(58),
    /**
     * <code>ARCANINE = 59;</code>
     */
    ARCANINE(59),
    /**
     * <code>POLIWAG = 60;</code>
     */
    POLIWAG(60),
    /**
     * <code>POLIWHIRL = 61;</code>
     */
    POLIWHIRL(61),
    /**
     * <code>POLIWRATH = 62;</code>
     */
    POLIWRATH(62),
    /**
     * <code>ABRA = 63;</code>
     */
    ABRA(63),
    /**
     * <code>KADABRA = 64;</code>
     */
    KADABRA(64),
    /**
     * <code>ALAKAZAM = 65;</code>
     */
    ALAKAZAM(65),
    /**
     * <code>MACHOP = 66;</code>
     */
    MACHOP(66),
    /**
     * <code>MACHOKE = 67;</code>
     */
    MACHOKE(67),
    /**
     * <code>MACHAMP = 68;</code>
     */
    MACHAMP(68),
    /**
     * <code>BELLSPROUT = 69;</code>
     */
    BELLSPROUT(69),
    /**
     * <code>WEEPINBELL = 70;</code>
     */
    WEEPINBELL(70),
    /**
     * <code>VICTREEBEL = 71;</code>
     */
    VICTREEBEL(71),
    /**
     * <code>TENTACOOL = 72;</code>
     */
    TENTACOOL(72),
    /**
     * <code>TENTACRUEL = 73;</code>
     */
    TENTACRUEL(73),
    /**
     * <code>GEODUDE = 74;</code>
     */
    GEODUDE(74),
    /**
     * <code>GRAVELER = 75;</code>
     */
    GRAVELER(75),
    /**
     * <code>GOLEM = 76;</code>
     */
    GOLEM(76),
    /**
     * <code>PONYTA = 77;</code>
     */
    PONYTA(77),
    /**
     * <code>RAPIDASH = 78;</code>
     */
    RAPIDASH(78),
    /**
     * <code>SLOWPOKE = 79;</code>
     */
    SLOWPOKE(79),
    /**
     * <code>SLOWBRO = 80;</code>
     */
    SLOWBRO(80),
    /**
     * <code>MAGNEMITE = 81;</code>
     */
    MAGNEMITE(81),
    /**
     * <code>MAGNETON = 82;</code>
     */
    MAGNETON(82),
    /**
     * <code>FARFETCHD = 83;</code>
     */
    FARFETCHD(83),
    /**
     * <code>DODUO = 84;</code>
     */
    DODUO(84),
    /**
     * <code>DODRIO = 85;</code>
     */
    DODRIO(85),
    /**
     * <code>SEEL = 86;</code>
     */
    SEEL(86),
    /**
     * <code>DEWGONG = 87;</code>
     */
    DEWGONG(87),
    /**
     * <code>GRIMER = 88;</code>
     */
    GRIMER(88),
    /**
     * <code>MUK = 89;</code>
     */
    MUK(89),
    /**
     * <code>SHELLDER = 90;</code>
     */
    SHELLDER(90),
    /**
     * <code>CLOYSTER = 91;</code>
     */
    CLOYSTER(91),
    /**
     * <code>GASTLY = 92;</code>
     */
    GASTLY(92),
    /**
     * <code>HAUNTER = 93;</code>
     */
    HAUNTER(93),
    /**
     * <code>GENGAR = 94;</code>
     */
    GENGAR(94),
    /**
     * <code>ONIX = 95;</code>
     */
    ONIX(95),
    /**
     * <code>DROWZEE = 96;</code>
     */
    DROWZEE(96),
    /**
     * <code>HYPNO = 97;</code>
     */
    HYPNO(97),
    /**
     * <code>KRABBY = 98;</code>
     */
    KRABBY(98),
    /**
     * <code>KINGLER = 99;</code>
     */
    KINGLER(99),
    /**
     * <code>VOLTORB = 100;</code>
     */
    VOLTORB(100),
    /**
     * <code>ELECTRODE = 101;</code>
     */
    ELECTRODE(101),
    /**
     * <code>EXEGGCUTE = 102;</code>
     */
    EXEGGCUTE(102),
    /**
     * <code>EXEGGUTOR = 103;</code>
     */
    EXEGGUTOR(103),
    /**
     * <code>CUBONE = 104;</code>
     */
    CUBONE(104),
    /**
     * <code>MAROWAK = 105;</code>
     */
    MAROWAK(105),
    /**
     * <code>HITMONLEE = 106;</code>
     */
    HITMONLEE(106),
    /**
     * <code>HITMONCHAN = 107;</code>
     */
    HITMONCHAN(107),
    /**
     * <code>LICKITUNG = 108;</code>
     */
    LICKITUNG(108),
    /**
     * <code>KOFFING = 109;</code>
     */
    KOFFING(109),
    /**
     * <code>WEEZING = 110;</code>
     */
    WEEZING(110),
    /**
     * <code>RHYHORN = 111;</code>
     */
    RHYHORN(111),
    /**
     * <code>RHYDON = 112;</code>
     */
    RHYDON(112),
    /**
     * <code>CHANSEY = 113;</code>
     */
    CHANSEY(113),
    /**
     * <code>TANGELA = 114;</code>
     */
    TANGELA(114),
    /**
     * <code>KANGASKHAN = 115;</code>
     */
    KANGASKHAN(115),
    /**
     * <code>HORSEA = 116;</code>
     */
    HORSEA(116),
    /**
     * <code>SEADRA = 117;</code>
     */
    SEADRA(117),
    /**
     * <code>GOLDEEN = 118;</code>
     */
    GOLDEEN(118),
    /**
     * <code>SEAKING = 119;</code>
     */
    SEAKING(119),
    /**
     * <code>STARYU = 120;</code>
     */
    STARYU(120),
    /**
     * <code>STARMIE = 121;</code>
     */
    STARMIE(121),
    /**
     * <code>MR_MIME = 122;</code>
     */
    MR_MIME(122),
    /**
     * <code>SCYTHER = 123;</code>
     */
    SCYTHER(123),
    /**
     * <code>JYNX = 124;</code>
     */
    JYNX(124),
    /**
     * <code>ELECTABUZZ = 125;</code>
     */
    ELECTABUZZ(125),
    /**
     * <code>MAGMAR = 126;</code>
     */
    MAGMAR(126),
    /**
     * <code>PINSIR = 127;</code>
     */
    PINSIR(127),
    /**
     * <code>TAUROS = 128;</code>
     */
    TAUROS(128),
    /**
     * <code>MAGIKARP = 129;</code>
     */
    MAGIKARP(129),
    /**
     * <code>GYARADOS = 130;</code>
     */
    GYARADOS(130),
    /**
     * <code>LAPRAS = 131;</code>
     */
    LAPRAS(131),
    /**
     * <code>DITTO = 132;</code>
     */
    DITTO(132),
    /**
     * <code>EEVEE = 133;</code>
     */
    EEVEE(133),
    /**
     * <code>VAPOREON = 134;</code>
     */
    VAPOREON(134),
    /**
     * <code>JOLTEON = 135;</code>
     */
    JOLTEON(135),
    /**
     * <code>FLAREON = 136;</code>
     */
    FLAREON(136),
    /**
     * <code>PORYGON = 137;</code>
     */
    PORYGON(137),
    /**
     * <code>OMANYTE = 138;</code>
     */
    OMANYTE(138),
    /**
     * <code>OMASTAR = 139;</code>
     */
    OMASTAR(139),
    /**
     * <code>KABUTO = 140;</code>
     */
    KABUTO(140),
    /**
     * <code>KABUTOPS = 141;</code>
     */
    KABUTOPS(141),
    /**
     * <code>AERODACTYL = 142;</code>
     */
    AERODACTYL(142),
    /**
     * <code>SNORLAX = 143;</code>
     */
    SNORLAX(143),
    /**
     * <code>ARTICUNO = 144;</code>
     */
    ARTICUNO(144),
    /**
     * <code>ZAPDOS = 145;</code>
     */
    ZAPDOS(145),
    /**
     * <code>MOLTRES = 146;</code>
     */
    MOLTRES(146),
    /**
     * <code>DRATINI = 147;</code>
     */
    DRATINI(147),
    /**
     * <code>DRAGONAIR = 148;</code>
     */
    DRAGONAIR(148),
    /**
     * <code>DRAGONITE = 149;</code>
     */
    DRAGONITE(149),
    /**
     * <code>MEWTWO = 150;</code>
     */
    MEWTWO(150),
    /**
     * <code>MEW = 151;</code>
     */
    MEW(151),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MISSINGNO = 0;</code>
     */
    public static final int MISSINGNO_VALUE = 0;
    /**
     * <code>BULBASAUR = 1;</code>
     */
    public static final int BULBASAUR_VALUE = 1;
    /**
     * <code>IVYSAUR = 2;</code>
     */
    public static final int IVYSAUR_VALUE = 2;
    /**
     * <code>VENUSAUR = 3;</code>
     */
    public static final int VENUSAUR_VALUE = 3;
    /**
     * <code>CHARMANDER = 4;</code>
     */
    public static final int CHARMANDER_VALUE = 4;
    /**
     * <code>CHARMELEON = 5;</code>
     */
    public static final int CHARMELEON_VALUE = 5;
    /**
     * <code>CHARIZARD = 6;</code>
     */
    public static final int CHARIZARD_VALUE = 6;
    /**
     * <code>SQUIRTLE = 7;</code>
     */
    public static final int SQUIRTLE_VALUE = 7;
    /**
     * <code>WARTORTLE = 8;</code>
     */
    public static final int WARTORTLE_VALUE = 8;
    /**
     * <code>BLASTOISE = 9;</code>
     */
    public static final int BLASTOISE_VALUE = 9;
    /**
     * <code>CATERPIE = 10;</code>
     */
    public static final int CATERPIE_VALUE = 10;
    /**
     * <code>METAPOD = 11;</code>
     */
    public static final int METAPOD_VALUE = 11;
    /**
     * <code>BUTTERFREE = 12;</code>
     */
    public static final int BUTTERFREE_VALUE = 12;
    /**
     * <code>WEEDLE = 13;</code>
     */
    public static final int WEEDLE_VALUE = 13;
    /**
     * <code>KAKUNA = 14;</code>
     */
    public static final int KAKUNA_VALUE = 14;
    /**
     * <code>BEEDRILL = 15;</code>
     */
    public static final int BEEDRILL_VALUE = 15;
    /**
     * <code>PIDGEY = 16;</code>
     */
    public static final int PIDGEY_VALUE = 16;
    /**
     * <code>PIDGEOTTO = 17;</code>
     */
    public static final int PIDGEOTTO_VALUE = 17;
    /**
     * <code>PIDGEOT = 18;</code>
     */
    public static final int PIDGEOT_VALUE = 18;
    /**
     * <code>RATTATA = 19;</code>
     */
    public static final int RATTATA_VALUE = 19;
    /**
     * <code>RATICATE = 20;</code>
     */
    public static final int RATICATE_VALUE = 20;
    /**
     * <code>SPEAROW = 21;</code>
     */
    public static final int SPEAROW_VALUE = 21;
    /**
     * <code>FEAROW = 22;</code>
     */
    public static final int FEAROW_VALUE = 22;
    /**
     * <code>EKANS = 23;</code>
     */
    public static final int EKANS_VALUE = 23;
    /**
     * <code>ARBOK = 24;</code>
     */
    public static final int ARBOK_VALUE = 24;
    /**
     * <code>PIKACHU = 25;</code>
     */
    public static final int PIKACHU_VALUE = 25;
    /**
     * <code>RAICHU = 26;</code>
     */
    public static final int RAICHU_VALUE = 26;
    /**
     * <code>SANDSHREW = 27;</code>
     */
    public static final int SANDSHREW_VALUE = 27;
    /**
     * <code>SANDSLASH = 28;</code>
     */
    public static final int SANDSLASH_VALUE = 28;
    /**
     * <code>NIDORAN_FEMALE = 29;</code>
     */
    public static final int NIDORAN_FEMALE_VALUE = 29;
    /**
     * <code>NIDORINA = 30;</code>
     */
    public static final int NIDORINA_VALUE = 30;
    /**
     * <code>NIDOQUEEN = 31;</code>
     */
    public static final int NIDOQUEEN_VALUE = 31;
    /**
     * <code>NIDORAN_MALE = 32;</code>
     */
    public static final int NIDORAN_MALE_VALUE = 32;
    /**
     * <code>NIDORINO = 33;</code>
     */
    public static final int NIDORINO_VALUE = 33;
    /**
     * <code>NIDOKING = 34;</code>
     */
    public static final int NIDOKING_VALUE = 34;
    /**
     * <code>CLEFAIRY = 35;</code>
     */
    public static final int CLEFAIRY_VALUE = 35;
    /**
     * <code>CLEFABLE = 36;</code>
     */
    public static final int CLEFABLE_VALUE = 36;
    /**
     * <code>VULPIX = 37;</code>
     */
    public static final int VULPIX_VALUE = 37;
    /**
     * <code>NINETALES = 38;</code>
     */
    public static final int NINETALES_VALUE = 38;
    /**
     * <code>JIGGLYPUFF = 39;</code>
     */
    public static final int JIGGLYPUFF_VALUE = 39;
    /**
     * <code>WIGGLYTUFF = 40;</code>
     */
    public static final int WIGGLYTUFF_VALUE = 40;
    /**
     * <code>ZUBAT = 41;</code>
     */
    public static final int ZUBAT_VALUE = 41;
    /**
     * <code>GOLBAT = 42;</code>
     */
    public static final int GOLBAT_VALUE = 42;
    /**
     * <code>ODDISH = 43;</code>
     */
    public static final int ODDISH_VALUE = 43;
    /**
     * <code>GLOOM = 44;</code>
     */
    public static final int GLOOM_VALUE = 44;
    /**
     * <code>VILEPLUME = 45;</code>
     */
    public static final int VILEPLUME_VALUE = 45;
    /**
     * <code>PARAS = 46;</code>
     */
    public static final int PARAS_VALUE = 46;
    /**
     * <code>PARASECT = 47;</code>
     */
    public static final int PARASECT_VALUE = 47;
    /**
     * <code>VENONAT = 48;</code>
     */
    public static final int VENONAT_VALUE = 48;
    /**
     * <code>VENOMOTH = 49;</code>
     */
    public static final int VENOMOTH_VALUE = 49;
    /**
     * <code>DIGLETT = 50;</code>
     */
    public static final int DIGLETT_VALUE = 50;
    /**
     * <code>DUGTRIO = 51;</code>
     */
    public static final int DUGTRIO_VALUE = 51;
    /**
     * <code>MEOWTH = 52;</code>
     */
    public static final int MEOWTH_VALUE = 52;
    /**
     * <code>PERSIAN = 53;</code>
     */
    public static final int PERSIAN_VALUE = 53;
    /**
     * <code>PSYDUCK = 54;</code>
     */
    public static final int PSYDUCK_VALUE = 54;
    /**
     * <code>GOLDUCK = 55;</code>
     */
    public static final int GOLDUCK_VALUE = 55;
    /**
     * <code>MANKEY = 56;</code>
     */
    public static final int MANKEY_VALUE = 56;
    /**
     * <code>PRIMEAPE = 57;</code>
     */
    public static final int PRIMEAPE_VALUE = 57;
    /**
     * <code>GROWLITHE = 58;</code>
     */
    public static final int GROWLITHE_VALUE = 58;
    /**
     * <code>ARCANINE = 59;</code>
     */
    public static final int ARCANINE_VALUE = 59;
    /**
     * <code>POLIWAG = 60;</code>
     */
    public static final int POLIWAG_VALUE = 60;
    /**
     * <code>POLIWHIRL = 61;</code>
     */
    public static final int POLIWHIRL_VALUE = 61;
    /**
     * <code>POLIWRATH = 62;</code>
     */
    public static final int POLIWRATH_VALUE = 62;
    /**
     * <code>ABRA = 63;</code>
     */
    public static final int ABRA_VALUE = 63;
    /**
     * <code>KADABRA = 64;</code>
     */
    public static final int KADABRA_VALUE = 64;
    /**
     * <code>ALAKAZAM = 65;</code>
     */
    public static final int ALAKAZAM_VALUE = 65;
    /**
     * <code>MACHOP = 66;</code>
     */
    public static final int MACHOP_VALUE = 66;
    /**
     * <code>MACHOKE = 67;</code>
     */
    public static final int MACHOKE_VALUE = 67;
    /**
     * <code>MACHAMP = 68;</code>
     */
    public static final int MACHAMP_VALUE = 68;
    /**
     * <code>BELLSPROUT = 69;</code>
     */
    public static final int BELLSPROUT_VALUE = 69;
    /**
     * <code>WEEPINBELL = 70;</code>
     */
    public static final int WEEPINBELL_VALUE = 70;
    /**
     * <code>VICTREEBEL = 71;</code>
     */
    public static final int VICTREEBEL_VALUE = 71;
    /**
     * <code>TENTACOOL = 72;</code>
     */
    public static final int TENTACOOL_VALUE = 72;
    /**
     * <code>TENTACRUEL = 73;</code>
     */
    public static final int TENTACRUEL_VALUE = 73;
    /**
     * <code>GEODUDE = 74;</code>
     */
    public static final int GEODUDE_VALUE = 74;
    /**
     * <code>GRAVELER = 75;</code>
     */
    public static final int GRAVELER_VALUE = 75;
    /**
     * <code>GOLEM = 76;</code>
     */
    public static final int GOLEM_VALUE = 76;
    /**
     * <code>PONYTA = 77;</code>
     */
    public static final int PONYTA_VALUE = 77;
    /**
     * <code>RAPIDASH = 78;</code>
     */
    public static final int RAPIDASH_VALUE = 78;
    /**
     * <code>SLOWPOKE = 79;</code>
     */
    public static final int SLOWPOKE_VALUE = 79;
    /**
     * <code>SLOWBRO = 80;</code>
     */
    public static final int SLOWBRO_VALUE = 80;
    /**
     * <code>MAGNEMITE = 81;</code>
     */
    public static final int MAGNEMITE_VALUE = 81;
    /**
     * <code>MAGNETON = 82;</code>
     */
    public static final int MAGNETON_VALUE = 82;
    /**
     * <code>FARFETCHD = 83;</code>
     */
    public static final int FARFETCHD_VALUE = 83;
    /**
     * <code>DODUO = 84;</code>
     */
    public static final int DODUO_VALUE = 84;
    /**
     * <code>DODRIO = 85;</code>
     */
    public static final int DODRIO_VALUE = 85;
    /**
     * <code>SEEL = 86;</code>
     */
    public static final int SEEL_VALUE = 86;
    /**
     * <code>DEWGONG = 87;</code>
     */
    public static final int DEWGONG_VALUE = 87;
    /**
     * <code>GRIMER = 88;</code>
     */
    public static final int GRIMER_VALUE = 88;
    /**
     * <code>MUK = 89;</code>
     */
    public static final int MUK_VALUE = 89;
    /**
     * <code>SHELLDER = 90;</code>
     */
    public static final int SHELLDER_VALUE = 90;
    /**
     * <code>CLOYSTER = 91;</code>
     */
    public static final int CLOYSTER_VALUE = 91;
    /**
     * <code>GASTLY = 92;</code>
     */
    public static final int GASTLY_VALUE = 92;
    /**
     * <code>HAUNTER = 93;</code>
     */
    public static final int HAUNTER_VALUE = 93;
    /**
     * <code>GENGAR = 94;</code>
     */
    public static final int GENGAR_VALUE = 94;
    /**
     * <code>ONIX = 95;</code>
     */
    public static final int ONIX_VALUE = 95;
    /**
     * <code>DROWZEE = 96;</code>
     */
    public static final int DROWZEE_VALUE = 96;
    /**
     * <code>HYPNO = 97;</code>
     */
    public static final int HYPNO_VALUE = 97;
    /**
     * <code>KRABBY = 98;</code>
     */
    public static final int KRABBY_VALUE = 98;
    /**
     * <code>KINGLER = 99;</code>
     */
    public static final int KINGLER_VALUE = 99;
    /**
     * <code>VOLTORB = 100;</code>
     */
    public static final int VOLTORB_VALUE = 100;
    /**
     * <code>ELECTRODE = 101;</code>
     */
    public static final int ELECTRODE_VALUE = 101;
    /**
     * <code>EXEGGCUTE = 102;</code>
     */
    public static final int EXEGGCUTE_VALUE = 102;
    /**
     * <code>EXEGGUTOR = 103;</code>
     */
    public static final int EXEGGUTOR_VALUE = 103;
    /**
     * <code>CUBONE = 104;</code>
     */
    public static final int CUBONE_VALUE = 104;
    /**
     * <code>MAROWAK = 105;</code>
     */
    public static final int MAROWAK_VALUE = 105;
    /**
     * <code>HITMONLEE = 106;</code>
     */
    public static final int HITMONLEE_VALUE = 106;
    /**
     * <code>HITMONCHAN = 107;</code>
     */
    public static final int HITMONCHAN_VALUE = 107;
    /**
     * <code>LICKITUNG = 108;</code>
     */
    public static final int LICKITUNG_VALUE = 108;
    /**
     * <code>KOFFING = 109;</code>
     */
    public static final int KOFFING_VALUE = 109;
    /**
     * <code>WEEZING = 110;</code>
     */
    public static final int WEEZING_VALUE = 110;
    /**
     * <code>RHYHORN = 111;</code>
     */
    public static final int RHYHORN_VALUE = 111;
    /**
     * <code>RHYDON = 112;</code>
     */
    public static final int RHYDON_VALUE = 112;
    /**
     * <code>CHANSEY = 113;</code>
     */
    public static final int CHANSEY_VALUE = 113;
    /**
     * <code>TANGELA = 114;</code>
     */
    public static final int TANGELA_VALUE = 114;
    /**
     * <code>KANGASKHAN = 115;</code>
     */
    public static final int KANGASKHAN_VALUE = 115;
    /**
     * <code>HORSEA = 116;</code>
     */
    public static final int HORSEA_VALUE = 116;
    /**
     * <code>SEADRA = 117;</code>
     */
    public static final int SEADRA_VALUE = 117;
    /**
     * <code>GOLDEEN = 118;</code>
     */
    public static final int GOLDEEN_VALUE = 118;
    /**
     * <code>SEAKING = 119;</code>
     */
    public static final int SEAKING_VALUE = 119;
    /**
     * <code>STARYU = 120;</code>
     */
    public static final int STARYU_VALUE = 120;
    /**
     * <code>STARMIE = 121;</code>
     */
    public static final int STARMIE_VALUE = 121;
    /**
     * <code>MR_MIME = 122;</code>
     */
    public static final int MR_MIME_VALUE = 122;
    /**
     * <code>SCYTHER = 123;</code>
     */
    public static final int SCYTHER_VALUE = 123;
    /**
     * <code>JYNX = 124;</code>
     */
    public static final int JYNX_VALUE = 124;
    /**
     * <code>ELECTABUZZ = 125;</code>
     */
    public static final int ELECTABUZZ_VALUE = 125;
    /**
     * <code>MAGMAR = 126;</code>
     */
    public static final int MAGMAR_VALUE = 126;
    /**
     * <code>PINSIR = 127;</code>
     */
    public static final int PINSIR_VALUE = 127;
    /**
     * <code>TAUROS = 128;</code>
     */
    public static final int TAUROS_VALUE = 128;
    /**
     * <code>MAGIKARP = 129;</code>
     */
    public static final int MAGIKARP_VALUE = 129;
    /**
     * <code>GYARADOS = 130;</code>
     */
    public static final int GYARADOS_VALUE = 130;
    /**
     * <code>LAPRAS = 131;</code>
     */
    public static final int LAPRAS_VALUE = 131;
    /**
     * <code>DITTO = 132;</code>
     */
    public static final int DITTO_VALUE = 132;
    /**
     * <code>EEVEE = 133;</code>
     */
    public static final int EEVEE_VALUE = 133;
    /**
     * <code>VAPOREON = 134;</code>
     */
    public static final int VAPOREON_VALUE = 134;
    /**
     * <code>JOLTEON = 135;</code>
     */
    public static final int JOLTEON_VALUE = 135;
    /**
     * <code>FLAREON = 136;</code>
     */
    public static final int FLAREON_VALUE = 136;
    /**
     * <code>PORYGON = 137;</code>
     */
    public static final int PORYGON_VALUE = 137;
    /**
     * <code>OMANYTE = 138;</code>
     */
    public static final int OMANYTE_VALUE = 138;
    /**
     * <code>OMASTAR = 139;</code>
     */
    public static final int OMASTAR_VALUE = 139;
    /**
     * <code>KABUTO = 140;</code>
     */
    public static final int KABUTO_VALUE = 140;
    /**
     * <code>KABUTOPS = 141;</code>
     */
    public static final int KABUTOPS_VALUE = 141;
    /**
     * <code>AERODACTYL = 142;</code>
     */
    public static final int AERODACTYL_VALUE = 142;
    /**
     * <code>SNORLAX = 143;</code>
     */
    public static final int SNORLAX_VALUE = 143;
    /**
     * <code>ARTICUNO = 144;</code>
     */
    public static final int ARTICUNO_VALUE = 144;
    /**
     * <code>ZAPDOS = 145;</code>
     */
    public static final int ZAPDOS_VALUE = 145;
    /**
     * <code>MOLTRES = 146;</code>
     */
    public static final int MOLTRES_VALUE = 146;
    /**
     * <code>DRATINI = 147;</code>
     */
    public static final int DRATINI_VALUE = 147;
    /**
     * <code>DRAGONAIR = 148;</code>
     */
    public static final int DRAGONAIR_VALUE = 148;
    /**
     * <code>DRAGONITE = 149;</code>
     */
    public static final int DRAGONITE_VALUE = 149;
    /**
     * <code>MEWTWO = 150;</code>
     */
    public static final int MEWTWO_VALUE = 150;
    /**
     * <code>MEW = 151;</code>
     */
    public static final int MEW_VALUE = 151;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PokemonId valueOf(int value) {
      return forNumber(value);
    }

    public static PokemonId forNumber(int value) {
      switch (value) {
        case 0: return MISSINGNO;
        case 1: return BULBASAUR;
        case 2: return IVYSAUR;
        case 3: return VENUSAUR;
        case 4: return CHARMANDER;
        case 5: return CHARMELEON;
        case 6: return CHARIZARD;
        case 7: return SQUIRTLE;
        case 8: return WARTORTLE;
        case 9: return BLASTOISE;
        case 10: return CATERPIE;
        case 11: return METAPOD;
        case 12: return BUTTERFREE;
        case 13: return WEEDLE;
        case 14: return KAKUNA;
        case 15: return BEEDRILL;
        case 16: return PIDGEY;
        case 17: return PIDGEOTTO;
        case 18: return PIDGEOT;
        case 19: return RATTATA;
        case 20: return RATICATE;
        case 21: return SPEAROW;
        case 22: return FEAROW;
        case 23: return EKANS;
        case 24: return ARBOK;
        case 25: return PIKACHU;
        case 26: return RAICHU;
        case 27: return SANDSHREW;
        case 28: return SANDSLASH;
        case 29: return NIDORAN_FEMALE;
        case 30: return NIDORINA;
        case 31: return NIDOQUEEN;
        case 32: return NIDORAN_MALE;
        case 33: return NIDORINO;
        case 34: return NIDOKING;
        case 35: return CLEFAIRY;
        case 36: return CLEFABLE;
        case 37: return VULPIX;
        case 38: return NINETALES;
        case 39: return JIGGLYPUFF;
        case 40: return WIGGLYTUFF;
        case 41: return ZUBAT;
        case 42: return GOLBAT;
        case 43: return ODDISH;
        case 44: return GLOOM;
        case 45: return VILEPLUME;
        case 46: return PARAS;
        case 47: return PARASECT;
        case 48: return VENONAT;
        case 49: return VENOMOTH;
        case 50: return DIGLETT;
        case 51: return DUGTRIO;
        case 52: return MEOWTH;
        case 53: return PERSIAN;
        case 54: return PSYDUCK;
        case 55: return GOLDUCK;
        case 56: return MANKEY;
        case 57: return PRIMEAPE;
        case 58: return GROWLITHE;
        case 59: return ARCANINE;
        case 60: return POLIWAG;
        case 61: return POLIWHIRL;
        case 62: return POLIWRATH;
        case 63: return ABRA;
        case 64: return KADABRA;
        case 65: return ALAKAZAM;
        case 66: return MACHOP;
        case 67: return MACHOKE;
        case 68: return MACHAMP;
        case 69: return BELLSPROUT;
        case 70: return WEEPINBELL;
        case 71: return VICTREEBEL;
        case 72: return TENTACOOL;
        case 73: return TENTACRUEL;
        case 74: return GEODUDE;
        case 75: return GRAVELER;
        case 76: return GOLEM;
        case 77: return PONYTA;
        case 78: return RAPIDASH;
        case 79: return SLOWPOKE;
        case 80: return SLOWBRO;
        case 81: return MAGNEMITE;
        case 82: return MAGNETON;
        case 83: return FARFETCHD;
        case 84: return DODUO;
        case 85: return DODRIO;
        case 86: return SEEL;
        case 87: return DEWGONG;
        case 88: return GRIMER;
        case 89: return MUK;
        case 90: return SHELLDER;
        case 91: return CLOYSTER;
        case 92: return GASTLY;
        case 93: return HAUNTER;
        case 94: return GENGAR;
        case 95: return ONIX;
        case 96: return DROWZEE;
        case 97: return HYPNO;
        case 98: return KRABBY;
        case 99: return KINGLER;
        case 100: return VOLTORB;
        case 101: return ELECTRODE;
        case 102: return EXEGGCUTE;
        case 103: return EXEGGUTOR;
        case 104: return CUBONE;
        case 105: return MAROWAK;
        case 106: return HITMONLEE;
        case 107: return HITMONCHAN;
        case 108: return LICKITUNG;
        case 109: return KOFFING;
        case 110: return WEEZING;
        case 111: return RHYHORN;
        case 112: return RHYDON;
        case 113: return CHANSEY;
        case 114: return TANGELA;
        case 115: return KANGASKHAN;
        case 116: return HORSEA;
        case 117: return SEADRA;
        case 118: return GOLDEEN;
        case 119: return SEAKING;
        case 120: return STARYU;
        case 121: return STARMIE;
        case 122: return MR_MIME;
        case 123: return SCYTHER;
        case 124: return JYNX;
        case 125: return ELECTABUZZ;
        case 126: return MAGMAR;
        case 127: return PINSIR;
        case 128: return TAUROS;
        case 129: return MAGIKARP;
        case 130: return GYARADOS;
        case 131: return LAPRAS;
        case 132: return DITTO;
        case 133: return EEVEE;
        case 134: return VAPOREON;
        case 135: return JOLTEON;
        case 136: return FLAREON;
        case 137: return PORYGON;
        case 138: return OMANYTE;
        case 139: return OMASTAR;
        case 140: return KABUTO;
        case 141: return KABUTOPS;
        case 142: return AERODACTYL;
        case 143: return SNORLAX;
        case 144: return ARTICUNO;
        case 145: return ZAPDOS;
        case 146: return MOLTRES;
        case 147: return DRATINI;
        case 148: return DRAGONAIR;
        case 149: return DRAGONITE;
        case 150: return MEWTWO;
        case 151: return MEW;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PokemonId>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PokemonId> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PokemonId>() {
            public PokemonId findValueByNumber(int number) {
              return PokemonId.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.aeonlucid.pogoprotos.Enums.getDescriptor().getEnumTypes().get(16);
    }

    private static final PokemonId[] VALUES = values();

    public static PokemonId valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PokemonId(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.enums.PokemonId)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+com/github/aeonlucid/pogoprotos/Enums." +
      "proto\022%com.github.aeonlucid.pogoprotos.e" +
      "nums*\372\014\n\017PokemonFamilyId\022\020\n\014FAMILY_UNSET" +
      "\020\000\022\024\n\020FAMILY_BULBASAUR\020\001\022\025\n\021FAMILY_CHARM" +
      "ANDER\020\004\022\023\n\017FAMILY_SQUIRTLE\020\007\022\023\n\017FAMILY_C" +
      "ATERPIE\020\n\022\021\n\rFAMILY_WEEDLE\020\r\022\021\n\rFAMILY_P" +
      "IDGEY\020\020\022\022\n\016FAMILY_RATTATA\020\023\022\022\n\016FAMILY_SP" +
      "EAROW\020\025\022\020\n\014FAMILY_EKANS\020\027\022\022\n\016FAMILY_PIKA" +
      "CHU\020\031\022\024\n\020FAMILY_SANDSHREW\020\033\022\031\n\025FAMILY_NI" +
      "DORAN_FEMALE\020\035\022\027\n\023FAMILY_NIDORAN_MALE\020 \022",
      "\023\n\017FAMILY_CLEFAIRY\020#\022\021\n\rFAMILY_VULPIX\020%\022" +
      "\025\n\021FAMILY_JIGGLYPUFF\020\'\022\020\n\014FAMILY_ZUBAT\020)" +
      "\022\021\n\rFAMILY_ODDISH\020+\022\020\n\014FAMILY_PARAS\020.\022\022\n" +
      "\016FAMILY_VENONAT\0200\022\022\n\016FAMILY_DIGLETT\0202\022\021\n" +
      "\rFAMILY_MEOWTH\0204\022\022\n\016FAMILY_PSYDUCK\0206\022\021\n\r" +
      "FAMILY_MANKEY\0208\022\024\n\020FAMILY_GROWLITHE\020:\022\022\n" +
      "\016FAMILY_POLIWAG\020<\022\017\n\013FAMILY_ABRA\020?\022\021\n\rFA" +
      "MILY_MACHOP\020B\022\025\n\021FAMILY_BELLSPROUT\020E\022\024\n\020" +
      "FAMILY_TENTACOOL\020H\022\022\n\016FAMILY_GEODUDE\020J\022\021" +
      "\n\rFAMILY_PONYTA\020M\022\023\n\017FAMILY_SLOWPOKE\020O\022\024",
      "\n\020FAMILY_MAGNEMITE\020Q\022\024\n\020FAMILY_FARFETCHD" +
      "\020S\022\020\n\014FAMILY_DODUO\020T\022\017\n\013FAMILY_SEEL\020V\022\021\n" +
      "\rFAMILY_GRIMER\020X\022\023\n\017FAMILY_SHELLDER\020Z\022\021\n" +
      "\rFAMILY_GASTLY\020\\\022\017\n\013FAMILY_ONIX\020_\022\022\n\016FAM" +
      "ILY_DROWZEE\020`\022\020\n\014FAMILY_HYPNO\020a\022\021\n\rFAMIL" +
      "Y_KRABBY\020b\022\022\n\016FAMILY_VOLTORB\020d\022\024\n\020FAMILY" +
      "_EXEGGCUTE\020f\022\021\n\rFAMILY_CUBONE\020h\022\024\n\020FAMIL" +
      "Y_HITMONLEE\020j\022\025\n\021FAMILY_HITMONCHAN\020k\022\024\n\020" +
      "FAMILY_LICKITUNG\020l\022\022\n\016FAMILY_KOFFING\020m\022\022" +
      "\n\016FAMILY_RHYHORN\020o\022\022\n\016FAMILY_CHANSEY\020q\022\022",
      "\n\016FAMILY_TANGELA\020r\022\025\n\021FAMILY_KANGASKHAN\020" +
      "s\022\021\n\rFAMILY_HORSEA\020t\022\022\n\016FAMILY_GOLDEEN\020v" +
      "\022\021\n\rFAMILY_STARYU\020x\022\022\n\016FAMILY_MR_MIME\020z\022" +
      "\022\n\016FAMILY_SCYTHER\020{\022\017\n\013FAMILY_JYNX\020|\022\025\n\021" +
      "FAMILY_ELECTABUZZ\020}\022\021\n\rFAMILY_MAGMAR\020~\022\021" +
      "\n\rFAMILY_PINSIR\020\177\022\022\n\rFAMILY_TAUROS\020\200\001\022\024\n" +
      "\017FAMILY_MAGIKARP\020\201\001\022\022\n\rFAMILY_LAPRAS\020\203\001\022" +
      "\021\n\014FAMILY_DITTO\020\204\001\022\021\n\014FAMILY_EEVEE\020\205\001\022\023\n" +
      "\016FAMILY_PORYGON\020\211\001\022\023\n\016FAMILY_OMANYTE\020\212\001\022" +
      "\022\n\rFAMILY_KABUTO\020\214\001\022\026\n\021FAMILY_AERODACTYL",
      "\020\216\001\022\023\n\016FAMILY_SNORLAX\020\217\001\022\024\n\017FAMILY_ARTIC" +
      "UNO\020\220\001\022\022\n\rFAMILY_ZAPDOS\020\221\001\022\023\n\016FAMILY_MOL" +
      "TRES\020\222\001\022\023\n\016FAMILY_DRATINI\020\223\001\022\022\n\rFAMILY_M" +
      "EWTWO\020\226\001\022\017\n\nFAMILY_MEW\020\227\001*\344\001\n\rTutorialSt" +
      "ate\022\020\n\014LEGAL_SCREEN\020\000\022\024\n\020AVATAR_SELECTIO" +
      "N\020\001\022\024\n\020ACCOUNT_CREATION\020\002\022\023\n\017POKEMON_CAP" +
      "TURE\020\003\022\022\n\016NAME_SELECTION\020\004\022\021\n\rPOKEMON_BE" +
      "RRY\020\005\022\014\n\010USE_ITEM\020\006\022\"\n\036FIRST_TIME_EXPERI" +
      "ENCE_COMPLETE\020\007\022\025\n\021POKESTOP_TUTORIAL\020\010\022\020" +
      "\n\014GYM_TUTORIAL\020\t*\230\004\n\nItemEffect\022\024\n\020ITEM_",
      "EFFECT_NONE\020\000\022\034\n\027ITEM_EFFECT_CAP_NO_FLEE" +
      "\020\350\007\022 \n\033ITEM_EFFECT_CAP_NO_MOVEMENT\020\352\007\022\036\n" +
      "\031ITEM_EFFECT_CAP_NO_THREAT\020\353\007\022\037\n\032ITEM_EF" +
      "FECT_CAP_TARGET_MAX\020\354\007\022 \n\033ITEM_EFFECT_CA" +
      "P_TARGET_SLOW\020\355\007\022!\n\034ITEM_EFFECT_CAP_CHAN" +
      "CE_NIGHT\020\356\007\022#\n\036ITEM_EFFECT_CAP_CHANCE_TR" +
      "AINER\020\357\007\022\'\n\"ITEM_EFFECT_CAP_CHANCE_FIRST" +
      "_THROW\020\360\007\022\"\n\035ITEM_EFFECT_CAP_CHANCE_LEGE" +
      "ND\020\361\007\022!\n\034ITEM_EFFECT_CAP_CHANCE_HEAVY\020\362\007" +
      "\022\"\n\035ITEM_EFFECT_CAP_CHANCE_REPEAT\020\363\007\022\'\n\"",
      "ITEM_EFFECT_CAP_CHANCE_MULTI_THROW\020\364\007\022\"\n" +
      "\035ITEM_EFFECT_CAP_CHANCE_ALWAYS\020\365\007\022(\n#ITE" +
      "M_EFFECT_CAP_CHANCE_SINGLE_THROW\020\366\007*\255\001\n\023" +
      "PokemonMovementType\022\023\n\017MOVEMENT_STATIC\020\000" +
      "\022\021\n\rMOVEMENT_JUMP\020\001\022\025\n\021MOVEMENT_VERTICAL" +
      "\020\002\022\024\n\020MOVEMENT_PSYCHIC\020\003\022\025\n\021MOVEMENT_ELE" +
      "CTRIC\020\004\022\023\n\017MOVEMENT_FLYING\020\005\022\025\n\021MOVEMENT" +
      "_HOVERING\020\006*A\n\010Platform\022\t\n\005UNSET\020\000\022\007\n\003IO" +
      "S\020\001\022\013\n\007ANDROID\020\002\022\007\n\003OSX\020\003\022\013\n\007WINDOWS\020\004*c" +
      "\n\rPokemonRarity\022\031\n\025POKEMON_RARITY_NORMAL",
      "\020\000\022\034\n\030POKEMON_RARITY_LEGENDARY\020\001\022\031\n\025POKE" +
      "MON_RARITY_MYTHIC\020\002*\036\n\006Gender\022\010\n\004MALE\020\000\022" +
      "\n\n\006FEMALE\020\001*\354\005\n\014ActivityType\022\024\n\020ACTIVITY" +
      "_UNKNOWN\020\000\022\032\n\026ACTIVITY_CATCH_POKEMON\020\001\022!" +
      "\n\035ACTIVITY_CATCH_LEGEND_POKEMON\020\002\022\031\n\025ACT" +
      "IVITY_FLEE_POKEMON\020\003\022\030\n\024ACTIVITY_DEFEAT_" +
      "FORT\020\004\022\033\n\027ACTIVITY_EVOLVE_POKEMON\020\005\022\026\n\022A" +
      "CTIVITY_HATCH_EGG\020\006\022\024\n\020ACTIVITY_WALK_KM\020" +
      "\007\022\036\n\032ACTIVITY_POKEDEX_ENTRY_NEW\020\010\022\036\n\032ACT" +
      "IVITY_CATCH_FIRST_THROW\020\t\022\035\n\031ACTIVITY_CA",
      "TCH_NICE_THROW\020\n\022\036\n\032ACTIVITY_CATCH_GREAT" +
      "_THROW\020\013\022\"\n\036ACTIVITY_CATCH_EXCELLENT_THR" +
      "OW\020\014\022\034\n\030ACTIVITY_CATCH_CURVEBALL\020\r\022%\n!AC" +
      "TIVITY_CATCH_FIRST_CATCH_OF_DAY\020\016\022\034\n\030ACT" +
      "IVITY_CATCH_MILESTONE\020\017\022\032\n\026ACTIVITY_TRAI" +
      "N_POKEMON\020\020\022\030\n\024ACTIVITY_SEARCH_FORT\020\021\022\034\n" +
      "\030ACTIVITY_RELEASE_POKEMON\020\022\022\"\n\036ACTIVITY_" +
      "HATCH_EGG_SMALL_BONUS\020\023\022#\n\037ACTIVITY_HATC" +
      "H_EGG_MEDIUM_BONUS\020\024\022\"\n\036ACTIVITY_HATCH_E" +
      "GG_LARGE_BONUS\020\025\022 \n\034ACTIVITY_DEFEAT_GYM_",
      "DEFENDER\020\026\022\036\n\032ACTIVITY_DEFEAT_GYM_LEADER" +
      "\020\027*7\n\tTeamColor\022\013\n\007NEUTRAL\020\000\022\010\n\004BLUE\020\001\022\007" +
      "\n\003RED\020\002\022\n\n\006YELLOW\020\003*\224\001\n\023HoloIapItemCateg" +
      "ory\022\025\n\021IAP_CATEGORY_NONE\020\000\022\027\n\023IAP_CATEGO" +
      "RY_BUNDLE\020\001\022\026\n\022IAP_CATEGORY_ITEMS\020\002\022\031\n\025I" +
      "AP_CATEGORY_UPGRADES\020\003\022\032\n\026IAP_CATEGORY_P" +
      "OKECOINS\020\004*\241\007\n\tBadgeType\022\017\n\013BADGE_UNSET\020" +
      "\000\022\023\n\017BADGE_TRAVEL_KM\020\001\022\031\n\025BADGE_POKEDEX_" +
      "ENTRIES\020\002\022\027\n\023BADGE_CAPTURE_TOTAL\020\003\022\027\n\023BA" +
      "DGE_DEFEATED_FORT\020\004\022\027\n\023BADGE_EVOLVED_TOT",
      "AL\020\005\022\027\n\023BADGE_HATCHED_TOTAL\020\006\022\033\n\027BADGE_E" +
      "NCOUNTERED_TOTAL\020\007\022\033\n\027BADGE_POKESTOPS_VI" +
      "SITED\020\010\022\032\n\026BADGE_UNIQUE_POKESTOPS\020\t\022\031\n\025B" +
      "ADGE_POKEBALL_THROWN\020\n\022\026\n\022BADGE_BIG_MAGI" +
      "KARP\020\013\022\030\n\024BADGE_DEPLOYED_TOTAL\020\014\022\033\n\027BADG" +
      "E_BATTLE_ATTACK_WON\020\r\022\035\n\031BADGE_BATTLE_TR" +
      "AINING_WON\020\016\022\033\n\027BADGE_BATTLE_DEFEND_WON\020" +
      "\017\022\031\n\025BADGE_PRESTIGE_RAISED\020\020\022\032\n\026BADGE_PR" +
      "ESTIGE_DROPPED\020\021\022\025\n\021BADGE_TYPE_NORMAL\020\022\022" +
      "\027\n\023BADGE_TYPE_FIGHTING\020\023\022\025\n\021BADGE_TYPE_F",
      "LYING\020\024\022\025\n\021BADGE_TYPE_POISON\020\025\022\025\n\021BADGE_" +
      "TYPE_GROUND\020\026\022\023\n\017BADGE_TYPE_ROCK\020\027\022\022\n\016BA" +
      "DGE_TYPE_BUG\020\030\022\024\n\020BADGE_TYPE_GHOST\020\031\022\024\n\020" +
      "BADGE_TYPE_STEEL\020\032\022\023\n\017BADGE_TYPE_FIRE\020\033\022" +
      "\024\n\020BADGE_TYPE_WATER\020\034\022\024\n\020BADGE_TYPE_GRAS" +
      "S\020\035\022\027\n\023BADGE_TYPE_ELECTRIC\020\036\022\026\n\022BADGE_TY" +
      "PE_PSYCHIC\020\037\022\022\n\016BADGE_TYPE_ICE\020 \022\025\n\021BADG" +
      "E_TYPE_DRAGON\020!\022\023\n\017BADGE_TYPE_DARK\020\"\022\024\n\020" +
      "BADGE_TYPE_FAIRY\020#\022\027\n\023BADGE_SMALL_RATTAT" +
      "A\020$\022\021\n\rBADGE_PIKACHU\020%*\332\003\n\013PokemonType\022\025",
      "\n\021POKEMON_TYPE_NONE\020\000\022\027\n\023POKEMON_TYPE_NO" +
      "RMAL\020\001\022\031\n\025POKEMON_TYPE_FIGHTING\020\002\022\027\n\023POK" +
      "EMON_TYPE_FLYING\020\003\022\027\n\023POKEMON_TYPE_POISO" +
      "N\020\004\022\027\n\023POKEMON_TYPE_GROUND\020\005\022\025\n\021POKEMON_" +
      "TYPE_ROCK\020\006\022\024\n\020POKEMON_TYPE_BUG\020\007\022\026\n\022POK" +
      "EMON_TYPE_GHOST\020\010\022\026\n\022POKEMON_TYPE_STEEL\020" +
      "\t\022\025\n\021POKEMON_TYPE_FIRE\020\n\022\026\n\022POKEMON_TYPE" +
      "_WATER\020\013\022\026\n\022POKEMON_TYPE_GRASS\020\014\022\031\n\025POKE" +
      "MON_TYPE_ELECTRIC\020\r\022\030\n\024POKEMON_TYPE_PSYC" +
      "HIC\020\016\022\024\n\020POKEMON_TYPE_ICE\020\017\022\027\n\023POKEMON_T",
      "YPE_DRAGON\020\020\022\025\n\021POKEMON_TYPE_DARK\020\021\022\026\n\022P" +
      "OKEMON_TYPE_FAIRY\020\022*\374\003\n\014CameraTarget\022\027\n\023" +
      "CAM_TARGET_ATTACKER\020\000\022\034\n\030CAM_TARGET_ATTA" +
      "CKER_EDGE\020\001\022\036\n\032CAM_TARGET_ATTACKER_GROUN" +
      "D\020\002\022\027\n\023CAM_TARGET_DEFENDER\020\003\022\034\n\030CAM_TARG" +
      "ET_DEFENDER_EDGE\020\004\022\036\n\032CAM_TARGET_DEFENDE" +
      "R_GROUND\020\005\022 \n\034CAM_TARGET_ATTACKER_DEFEND" +
      "ER\020\006\022%\n!CAM_TARGET_ATTACKER_DEFENDER_EDG" +
      "E\020\007\022 \n\034CAM_TARGET_DEFENDER_ATTACKER\020\010\022%\n" +
      "!CAM_TARGET_DEFENDER_ATTACKER_EDGE\020\t\022\'\n#",
      "CAM_TARGET_ATTACKER_DEFENDER_MIRROR\020\013\022)\n" +
      "%CAM_TARGET_SHOULDER_ATTACKER_DEFENDER\020\014" +
      "\0220\n,CAM_TARGET_SHOULDER_ATTACKER_DEFENDE" +
      "R_MIRROR\020\r\022&\n\"CAM_TARGET_ATTACKER_DEFEND" +
      "ER_WORLD\020\016*\316\027\n\013PokemonMove\022\016\n\nMOVE_UNSET" +
      "\020\000\022\021\n\rTHUNDER_SHOCK\020\001\022\020\n\014QUICK_ATTACK\020\002\022" +
      "\013\n\007SCRATCH\020\003\022\t\n\005EMBER\020\004\022\r\n\tVINE_WHIP\020\005\022\n" +
      "\n\006TACKLE\020\006\022\016\n\nRAZOR_LEAF\020\007\022\r\n\tTAKE_DOWN\020" +
      "\010\022\r\n\tWATER_GUN\020\t\022\010\n\004BITE\020\n\022\t\n\005POUND\020\013\022\017\n" +
      "\013DOUBLE_SLAP\020\014\022\010\n\004WRAP\020\r\022\016\n\nHYPER_BEAM\020\016",
      "\022\010\n\004LICK\020\017\022\016\n\nDARK_PULSE\020\020\022\010\n\004SMOG\020\021\022\n\n\006" +
      "SLUDGE\020\022\022\016\n\nMETAL_CLAW\020\023\022\r\n\tVICE_GRIP\020\024\022" +
      "\017\n\013FLAME_WHEEL\020\025\022\014\n\010MEGAHORN\020\026\022\017\n\013WING_A" +
      "TTACK\020\027\022\020\n\014FLAMETHROWER\020\030\022\020\n\014SUCKER_PUNC" +
      "H\020\031\022\007\n\003DIG\020\032\022\014\n\010LOW_KICK\020\033\022\016\n\nCROSS_CHOP" +
      "\020\034\022\016\n\nPSYCHO_CUT\020\035\022\013\n\007PSYBEAM\020\036\022\016\n\nEARTH" +
      "QUAKE\020\037\022\016\n\nSTONE_EDGE\020 \022\r\n\tICE_PUNCH\020!\022\017" +
      "\n\013HEART_STAMP\020\"\022\r\n\tDISCHARGE\020#\022\020\n\014FLASH_" +
      "CANNON\020$\022\010\n\004PECK\020%\022\016\n\nDRILL_PECK\020&\022\014\n\010IC" +
      "E_BEAM\020\'\022\014\n\010BLIZZARD\020(\022\r\n\tAIR_SLASH\020)\022\r\n",
      "\tHEAT_WAVE\020*\022\r\n\tTWINEEDLE\020+\022\016\n\nPOISON_JA" +
      "B\020,\022\016\n\nAERIAL_ACE\020-\022\r\n\tDRILL_RUN\020.\022\022\n\016PE" +
      "TAL_BLIZZARD\020/\022\016\n\nMEGA_DRAIN\0200\022\014\n\010BUG_BU" +
      "ZZ\0201\022\017\n\013POISON_FANG\0202\022\017\n\013NIGHT_SLASH\0203\022\t" +
      "\n\005SLASH\0204\022\017\n\013BUBBLE_BEAM\0205\022\016\n\nSUBMISSION" +
      "\0206\022\017\n\013KARATE_CHOP\0207\022\r\n\tLOW_SWEEP\0208\022\014\n\010AQ" +
      "UA_JET\0209\022\r\n\tAQUA_TAIL\020:\022\r\n\tSEED_BOMB\020;\022\014" +
      "\n\010PSYSHOCK\020<\022\016\n\nROCK_THROW\020=\022\021\n\rANCIENT_" +
      "POWER\020>\022\r\n\tROCK_TOMB\020?\022\016\n\nROCK_SLIDE\020@\022\r" +
      "\n\tPOWER_GEM\020A\022\020\n\014SHADOW_SNEAK\020B\022\020\n\014SHADO",
      "W_PUNCH\020C\022\017\n\013SHADOW_CLAW\020D\022\020\n\014OMINOUS_WI" +
      "ND\020E\022\017\n\013SHADOW_BALL\020F\022\020\n\014BULLET_PUNCH\020G\022" +
      "\017\n\013MAGNET_BOMB\020H\022\016\n\nSTEEL_WING\020I\022\r\n\tIRON" +
      "_HEAD\020J\022\024\n\020PARABOLIC_CHARGE\020K\022\t\n\005SPARK\020L" +
      "\022\021\n\rTHUNDER_PUNCH\020M\022\013\n\007THUNDER\020N\022\017\n\013THUN" +
      "DERBOLT\020O\022\013\n\007TWISTER\020P\022\021\n\rDRAGON_BREATH\020" +
      "Q\022\020\n\014DRAGON_PULSE\020R\022\017\n\013DRAGON_CLAW\020S\022\023\n\017" +
      "DISARMING_VOICE\020T\022\021\n\rDRAINING_KISS\020U\022\022\n\016" +
      "DAZZLING_GLEAM\020V\022\r\n\tMOONBLAST\020W\022\016\n\nPLAY_" +
      "ROUGH\020X\022\020\n\014CROSS_POISON\020Y\022\017\n\013SLUDGE_BOMB",
      "\020Z\022\017\n\013SLUDGE_WAVE\020[\022\r\n\tGUNK_SHOT\020\\\022\014\n\010MU" +
      "D_SHOT\020]\022\r\n\tBONE_CLUB\020^\022\014\n\010BULLDOZE\020_\022\014\n" +
      "\010MUD_BOMB\020`\022\017\n\013FURY_CUTTER\020a\022\014\n\010BUG_BITE" +
      "\020b\022\017\n\013SIGNAL_BEAM\020c\022\r\n\tX_SCISSOR\020d\022\020\n\014FL" +
      "AME_CHARGE\020e\022\017\n\013FLAME_BURST\020f\022\016\n\nFIRE_BL" +
      "AST\020g\022\t\n\005BRINE\020h\022\017\n\013WATER_PULSE\020i\022\t\n\005SCA" +
      "LD\020j\022\016\n\nHYDRO_PUMP\020k\022\013\n\007PSYCHIC\020l\022\r\n\tPSY" +
      "STRIKE\020m\022\r\n\tICE_SHARD\020n\022\014\n\010ICY_WIND\020o\022\020\n" +
      "\014FROST_BREATH\020p\022\n\n\006ABSORB\020q\022\016\n\nGIGA_DRAI" +
      "N\020r\022\016\n\nFIRE_PUNCH\020s\022\016\n\nSOLAR_BEAM\020t\022\016\n\nL",
      "EAF_BLADE\020u\022\016\n\nPOWER_WHIP\020v\022\n\n\006SPLASH\020w\022" +
      "\010\n\004ACID\020x\022\016\n\nAIR_CUTTER\020y\022\r\n\tHURRICANE\020z" +
      "\022\017\n\013BRICK_BREAK\020{\022\007\n\003CUT\020|\022\t\n\005SWIFT\020}\022\017\n" +
      "\013HORN_ATTACK\020~\022\t\n\005STOMP\020\177\022\r\n\010HEADBUTT\020\200\001" +
      "\022\017\n\nHYPER_FANG\020\201\001\022\t\n\004SLAM\020\202\001\022\016\n\tBODY_SLA" +
      "M\020\203\001\022\t\n\004REST\020\204\001\022\r\n\010STRUGGLE\020\205\001\022\024\n\017SCALD_" +
      "BLASTOISE\020\206\001\022\031\n\024HYDRO_PUMP_BLASTOISE\020\207\001\022" +
      "\017\n\nWRAP_GREEN\020\210\001\022\016\n\tWRAP_PINK\020\211\001\022\025\n\020FURY" +
      "_CUTTER_FAST\020\310\001\022\022\n\rBUG_BITE_FAST\020\311\001\022\016\n\tB" +
      "ITE_FAST\020\312\001\022\026\n\021SUCKER_PUNCH_FAST\020\313\001\022\027\n\022D",
      "RAGON_BREATH_FAST\020\314\001\022\027\n\022THUNDER_SHOCK_FA" +
      "ST\020\315\001\022\017\n\nSPARK_FAST\020\316\001\022\022\n\rLOW_KICK_FAST\020" +
      "\317\001\022\025\n\020KARATE_CHOP_FAST\020\320\001\022\017\n\nEMBER_FAST\020" +
      "\321\001\022\025\n\020WING_ATTACK_FAST\020\322\001\022\016\n\tPECK_FAST\020\323" +
      "\001\022\016\n\tLICK_FAST\020\324\001\022\025\n\020SHADOW_CLAW_FAST\020\325\001" +
      "\022\023\n\016VINE_WHIP_FAST\020\326\001\022\024\n\017RAZOR_LEAF_FAST" +
      "\020\327\001\022\022\n\rMUD_SHOT_FAST\020\330\001\022\023\n\016ICE_SHARD_FAS" +
      "T\020\331\001\022\026\n\021FROST_BREATH_FAST\020\332\001\022\026\n\021QUICK_AT" +
      "TACK_FAST\020\333\001\022\021\n\014SCRATCH_FAST\020\334\001\022\020\n\013TACKL" +
      "E_FAST\020\335\001\022\017\n\nPOUND_FAST\020\336\001\022\r\n\010CUT_FAST\020\337",
      "\001\022\024\n\017POISON_JAB_FAST\020\340\001\022\016\n\tACID_FAST\020\341\001\022" +
      "\024\n\017PSYCHO_CUT_FAST\020\342\001\022\024\n\017ROCK_THROW_FAST" +
      "\020\343\001\022\024\n\017METAL_CLAW_FAST\020\344\001\022\026\n\021BULLET_PUNC" +
      "H_FAST\020\345\001\022\023\n\016WATER_GUN_FAST\020\346\001\022\020\n\013SPLASH" +
      "_FAST\020\347\001\022\035\n\030WATER_GUN_FAST_BLASTOISE\020\350\001\022" +
      "\022\n\rMUD_SLAP_FAST\020\351\001\022\026\n\021ZEN_HEADBUTT_FAST" +
      "\020\352\001\022\023\n\016CONFUSION_FAST\020\353\001\022\026\n\021POISON_STING" +
      "_FAST\020\354\001\022\020\n\013BUBBLE_FAST\020\355\001\022\026\n\021FEINT_ATTA" +
      "CK_FAST\020\356\001\022\024\n\017STEEL_WING_FAST\020\357\001\022\023\n\016FIRE" +
      "_FANG_FAST\020\360\001\022\024\n\017ROCK_SMASH_FAST\020\361\001*\326\002\n\014",
      "ItemCategory\022\026\n\022ITEM_CATEGORY_NONE\020\000\022\032\n\026" +
      "ITEM_CATEGORY_POKEBALL\020\001\022\026\n\022ITEM_CATEGOR" +
      "Y_FOOD\020\002\022\032\n\026ITEM_CATEGORY_MEDICINE\020\003\022\027\n\023" +
      "ITEM_CATEGORY_BOOST\020\004\022\032\n\026ITEM_CATEGORY_U" +
      "TILITES\020\005\022\030\n\024ITEM_CATEGORY_CAMERA\020\006\022\026\n\022I" +
      "TEM_CATEGORY_DISK\020\007\022\033\n\027ITEM_CATEGORY_INC" +
      "UBATOR\020\010\022\031\n\025ITEM_CATEGORY_INCENSE\020\t\022\032\n\026I" +
      "TEM_CATEGORY_XP_BOOST\020\n\022#\n\037ITEM_CATEGORY" +
      "_INVENTORY_UPGRADE\020\013*\226\001\n\023CameraInterpola" +
      "tion\022\022\n\016CAM_INTERP_CUT\020\000\022\025\n\021CAM_INTERP_L",
      "INEAR\020\001\022\025\n\021CAM_INTERP_SMOOTH\020\002\022%\n!CAM_IN" +
      "TERP_SMOOTH_ROT_LINEAR_MOVE\020\003\022\026\n\022CAM_INT" +
      "ERP_DEPENDS\020\004*\223\020\n\tPokemonId\022\r\n\tMISSINGNO" +
      "\020\000\022\r\n\tBULBASAUR\020\001\022\013\n\007IVYSAUR\020\002\022\014\n\010VENUSA" +
      "UR\020\003\022\016\n\nCHARMANDER\020\004\022\016\n\nCHARMELEON\020\005\022\r\n\t" +
      "CHARIZARD\020\006\022\014\n\010SQUIRTLE\020\007\022\r\n\tWARTORTLE\020\010" +
      "\022\r\n\tBLASTOISE\020\t\022\014\n\010CATERPIE\020\n\022\013\n\007METAPOD" +
      "\020\013\022\016\n\nBUTTERFREE\020\014\022\n\n\006WEEDLE\020\r\022\n\n\006KAKUNA" +
      "\020\016\022\014\n\010BEEDRILL\020\017\022\n\n\006PIDGEY\020\020\022\r\n\tPIDGEOTT" +
      "O\020\021\022\013\n\007PIDGEOT\020\022\022\013\n\007RATTATA\020\023\022\014\n\010RATICAT",
      "E\020\024\022\013\n\007SPEAROW\020\025\022\n\n\006FEAROW\020\026\022\t\n\005EKANS\020\027\022" +
      "\t\n\005ARBOK\020\030\022\013\n\007PIKACHU\020\031\022\n\n\006RAICHU\020\032\022\r\n\tS" +
      "ANDSHREW\020\033\022\r\n\tSANDSLASH\020\034\022\022\n\016NIDORAN_FEM" +
      "ALE\020\035\022\014\n\010NIDORINA\020\036\022\r\n\tNIDOQUEEN\020\037\022\020\n\014NI" +
      "DORAN_MALE\020 \022\014\n\010NIDORINO\020!\022\014\n\010NIDOKING\020\"" +
      "\022\014\n\010CLEFAIRY\020#\022\014\n\010CLEFABLE\020$\022\n\n\006VULPIX\020%" +
      "\022\r\n\tNINETALES\020&\022\016\n\nJIGGLYPUFF\020\'\022\016\n\nWIGGL" +
      "YTUFF\020(\022\t\n\005ZUBAT\020)\022\n\n\006GOLBAT\020*\022\n\n\006ODDISH" +
      "\020+\022\t\n\005GLOOM\020,\022\r\n\tVILEPLUME\020-\022\t\n\005PARAS\020.\022" +
      "\014\n\010PARASECT\020/\022\013\n\007VENONAT\0200\022\014\n\010VENOMOTH\0201",
      "\022\013\n\007DIGLETT\0202\022\013\n\007DUGTRIO\0203\022\n\n\006MEOWTH\0204\022\013" +
      "\n\007PERSIAN\0205\022\013\n\007PSYDUCK\0206\022\013\n\007GOLDUCK\0207\022\n\n" +
      "\006MANKEY\0208\022\014\n\010PRIMEAPE\0209\022\r\n\tGROWLITHE\020:\022\014" +
      "\n\010ARCANINE\020;\022\013\n\007POLIWAG\020<\022\r\n\tPOLIWHIRL\020=" +
      "\022\r\n\tPOLIWRATH\020>\022\010\n\004ABRA\020?\022\013\n\007KADABRA\020@\022\014" +
      "\n\010ALAKAZAM\020A\022\n\n\006MACHOP\020B\022\013\n\007MACHOKE\020C\022\013\n" +
      "\007MACHAMP\020D\022\016\n\nBELLSPROUT\020E\022\016\n\nWEEPINBELL" +
      "\020F\022\016\n\nVICTREEBEL\020G\022\r\n\tTENTACOOL\020H\022\016\n\nTEN" +
      "TACRUEL\020I\022\013\n\007GEODUDE\020J\022\014\n\010GRAVELER\020K\022\t\n\005" +
      "GOLEM\020L\022\n\n\006PONYTA\020M\022\014\n\010RAPIDASH\020N\022\014\n\010SLO",
      "WPOKE\020O\022\013\n\007SLOWBRO\020P\022\r\n\tMAGNEMITE\020Q\022\014\n\010M" +
      "AGNETON\020R\022\r\n\tFARFETCHD\020S\022\t\n\005DODUO\020T\022\n\n\006D" +
      "ODRIO\020U\022\010\n\004SEEL\020V\022\013\n\007DEWGONG\020W\022\n\n\006GRIMER" +
      "\020X\022\007\n\003MUK\020Y\022\014\n\010SHELLDER\020Z\022\014\n\010CLOYSTER\020[\022" +
      "\n\n\006GASTLY\020\\\022\013\n\007HAUNTER\020]\022\n\n\006GENGAR\020^\022\010\n\004" +
      "ONIX\020_\022\013\n\007DROWZEE\020`\022\t\n\005HYPNO\020a\022\n\n\006KRABBY" +
      "\020b\022\013\n\007KINGLER\020c\022\013\n\007VOLTORB\020d\022\r\n\tELECTROD" +
      "E\020e\022\r\n\tEXEGGCUTE\020f\022\r\n\tEXEGGUTOR\020g\022\n\n\006CUB" +
      "ONE\020h\022\013\n\007MAROWAK\020i\022\r\n\tHITMONLEE\020j\022\016\n\nHIT" +
      "MONCHAN\020k\022\r\n\tLICKITUNG\020l\022\013\n\007KOFFING\020m\022\013\n",
      "\007WEEZING\020n\022\013\n\007RHYHORN\020o\022\n\n\006RHYDON\020p\022\013\n\007C" +
      "HANSEY\020q\022\013\n\007TANGELA\020r\022\016\n\nKANGASKHAN\020s\022\n\n" +
      "\006HORSEA\020t\022\n\n\006SEADRA\020u\022\013\n\007GOLDEEN\020v\022\013\n\007SE" +
      "AKING\020w\022\n\n\006STARYU\020x\022\013\n\007STARMIE\020y\022\013\n\007MR_M" +
      "IME\020z\022\013\n\007SCYTHER\020{\022\010\n\004JYNX\020|\022\016\n\nELECTABU" +
      "ZZ\020}\022\n\n\006MAGMAR\020~\022\n\n\006PINSIR\020\177\022\013\n\006TAUROS\020\200" +
      "\001\022\r\n\010MAGIKARP\020\201\001\022\r\n\010GYARADOS\020\202\001\022\013\n\006LAPRA" +
      "S\020\203\001\022\n\n\005DITTO\020\204\001\022\n\n\005EEVEE\020\205\001\022\r\n\010VAPOREON" +
      "\020\206\001\022\014\n\007JOLTEON\020\207\001\022\014\n\007FLAREON\020\210\001\022\014\n\007PORYG" +
      "ON\020\211\001\022\014\n\007OMANYTE\020\212\001\022\014\n\007OMASTAR\020\213\001\022\013\n\006KAB",
      "UTO\020\214\001\022\r\n\010KABUTOPS\020\215\001\022\017\n\nAERODACTYL\020\216\001\022\014" +
      "\n\007SNORLAX\020\217\001\022\r\n\010ARTICUNO\020\220\001\022\013\n\006ZAPDOS\020\221\001" +
      "\022\014\n\007MOLTRES\020\222\001\022\014\n\007DRATINI\020\223\001\022\016\n\tDRAGONAI" +
      "R\020\224\001\022\016\n\tDRAGONITE\020\225\001\022\013\n\006MEWTWO\020\226\001\022\010\n\003MEW" +
      "\020\227\001B(\n\037com.github.aeonlucid.pogoprotosB\005" +
      "Enumsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
