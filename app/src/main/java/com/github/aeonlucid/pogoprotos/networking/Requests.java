// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/github/aeonlucid/pogoprotos/networking/Requests.proto

package com.github.aeonlucid.pogoprotos.networking;

public final class Requests {
  private Requests() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code com.github.aeonlucid.pogoprotos.networking.requests.RequestType}
   */
  public enum RequestType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * No implementation required
     * </pre>
     *
     * <code>METHOD_UNSET = 0;</code>
     */
    METHOD_UNSET(0),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>PLAYER_UPDATE = 1;</code>
     */
    PLAYER_UPDATE(1),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_PLAYER = 2;</code>
     */
    GET_PLAYER(2),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_INVENTORY = 4;</code>
     */
    GET_INVENTORY(4),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>DOWNLOAD_SETTINGS = 5;</code>
     */
    DOWNLOAD_SETTINGS(5),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>DOWNLOAD_ITEM_TEMPLATES = 6;</code>
     */
    DOWNLOAD_ITEM_TEMPLATES(6),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>DOWNLOAD_REMOTE_CONFIG_VERSION = 7;</code>
     */
    DOWNLOAD_REMOTE_CONFIG_VERSION(7),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>FORT_SEARCH = 101;</code>
     */
    FORT_SEARCH(101),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ENCOUNTER = 102;</code>
     */
    ENCOUNTER(102),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>CATCH_POKEMON = 103;</code>
     */
    CATCH_POKEMON(103),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>FORT_DETAILS = 104;</code>
     */
    FORT_DETAILS(104),
    /**
     * <pre>
     * Can't find this one
     * </pre>
     *
     * <code>ITEM_USE = 105;</code>
     */
    ITEM_USE(105),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_MAP_OBJECTS = 106;</code>
     */
    GET_MAP_OBJECTS(106),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>FORT_DEPLOY_POKEMON = 110;</code>
     */
    FORT_DEPLOY_POKEMON(110),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>FORT_RECALL_POKEMON = 111;</code>
     */
    FORT_RECALL_POKEMON(111),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>RELEASE_POKEMON = 112;</code>
     */
    RELEASE_POKEMON(112),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_POTION = 113;</code>
     */
    USE_ITEM_POTION(113),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_CAPTURE = 114;</code>
     */
    USE_ITEM_CAPTURE(114),
    /**
     * <pre>
     * Can't find this one
     * </pre>
     *
     * <code>USE_ITEM_FLEE = 115;</code>
     */
    USE_ITEM_FLEE(115),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_REVIVE = 116;</code>
     */
    USE_ITEM_REVIVE(116),
    /**
     * <pre>
     * Not yet implemented in the game
     * </pre>
     *
     * <code>TRADE_SEARCH = 117;</code>
     */
    TRADE_SEARCH(117),
    /**
     * <pre>
     * Not yet implemented in the game
     * </pre>
     *
     * <code>TRADE_OFFER = 118;</code>
     */
    TRADE_OFFER(118),
    /**
     * <pre>
     * Not yet implemented in the game
     * </pre>
     *
     * <code>TRADE_RESPONSE = 119;</code>
     */
    TRADE_RESPONSE(119),
    /**
     * <pre>
     * Not yet implemented in the game
     * </pre>
     *
     * <code>TRADE_RESULT = 120;</code>
     */
    TRADE_RESULT(120),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_PLAYER_PROFILE = 121;</code>
     */
    GET_PLAYER_PROFILE(121),
    /**
     * <pre>
     * Can't find this one
     * </pre>
     *
     * <code>GET_ITEM_PACK = 122;</code>
     */
    GET_ITEM_PACK(122),
    /**
     * <pre>
     * Can't find this one
     * </pre>
     *
     * <code>BUY_ITEM_PACK = 123;</code>
     */
    BUY_ITEM_PACK(123),
    /**
     * <pre>
     * Can't find this one
     * </pre>
     *
     * <code>BUY_GEM_PACK = 124;</code>
     */
    BUY_GEM_PACK(124),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>EVOLVE_POKEMON = 125;</code>
     */
    EVOLVE_POKEMON(125),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_HATCHED_EGGS = 126;</code>
     */
    GET_HATCHED_EGGS(126),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ENCOUNTER_TUTORIAL_COMPLETE = 127;</code>
     */
    ENCOUNTER_TUTORIAL_COMPLETE(127),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>LEVEL_UP_REWARDS = 128;</code>
     */
    LEVEL_UP_REWARDS(128),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>CHECK_AWARDED_BADGES = 129;</code>
     */
    CHECK_AWARDED_BADGES(129),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_GYM = 133;</code>
     */
    USE_ITEM_GYM(133),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_GYM_DETAILS = 134;</code>
     */
    GET_GYM_DETAILS(134),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>START_GYM_BATTLE = 135;</code>
     */
    START_GYM_BATTLE(135),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ATTACK_GYM = 136;</code>
     */
    ATTACK_GYM(136),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>RECYCLE_INVENTORY_ITEM = 137;</code>
     */
    RECYCLE_INVENTORY_ITEM(137),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>COLLECT_DAILY_BONUS = 138;</code>
     */
    COLLECT_DAILY_BONUS(138),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_XP_BOOST = 139;</code>
     */
    USE_ITEM_XP_BOOST(139),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_EGG_INCUBATOR = 140;</code>
     */
    USE_ITEM_EGG_INCUBATOR(140),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_INCENSE = 141;</code>
     */
    USE_INCENSE(141),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_INCENSE_POKEMON = 142;</code>
     */
    GET_INCENSE_POKEMON(142),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>INCENSE_ENCOUNTER = 143;</code>
     */
    INCENSE_ENCOUNTER(143),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ADD_FORT_MODIFIER = 144;</code>
     */
    ADD_FORT_MODIFIER(144),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>DISK_ENCOUNTER = 145;</code>
     */
    DISK_ENCOUNTER(145),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>COLLECT_DAILY_DEFENDER_BONUS = 146;</code>
     */
    COLLECT_DAILY_DEFENDER_BONUS(146),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>UPGRADE_POKEMON = 147;</code>
     */
    UPGRADE_POKEMON(147),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_FAVORITE_POKEMON = 148;</code>
     */
    SET_FAVORITE_POKEMON(148),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>NICKNAME_POKEMON = 149;</code>
     */
    NICKNAME_POKEMON(149),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>EQUIP_BADGE = 150;</code>
     */
    EQUIP_BADGE(150),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_CONTACT_SETTINGS = 151;</code>
     */
    SET_CONTACT_SETTINGS(151),
    /**
     * <code>SET_BUDDY_POKEMON = 152;</code>
     */
    SET_BUDDY_POKEMON(152),
    /**
     * <code>GET_BUDDY_WALKED = 153;</code>
     */
    GET_BUDDY_WALKED(153),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_ASSET_DIGEST = 300;</code>
     */
    GET_ASSET_DIGEST(300),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_DOWNLOAD_URLS = 301;</code>
     */
    GET_DOWNLOAD_URLS(301),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_SUGGESTED_CODENAMES = 401;</code>
     */
    GET_SUGGESTED_CODENAMES(401),
    /**
     * <pre>
     * Implemented [R &amp; M] TEST RESPONSE
     * </pre>
     *
     * <code>CHECK_CODENAME_AVAILABLE = 402;</code>
     */
    CHECK_CODENAME_AVAILABLE(402),
    /**
     * <pre>
     * Implemented [R &amp; M] TEST RESPONSE
     * </pre>
     *
     * <code>CLAIM_CODENAME = 403;</code>
     */
    CLAIM_CODENAME(403),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_AVATAR = 404;</code>
     */
    SET_AVATAR(404),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_PLAYER_TEAM = 405;</code>
     */
    SET_PLAYER_TEAM(405),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>MARK_TUTORIAL_COMPLETE = 406;</code>
     */
    MARK_TUTORIAL_COMPLETE(406),
    /**
     * <pre>
     * Can't find this one
     * </pre>
     *
     * <code>LOAD_SPAWN_POINTS = 500;</code>
     */
    LOAD_SPAWN_POINTS(500),
    /**
     * <code>CHECK_CHALLENGE = 600;</code>
     */
    CHECK_CHALLENGE(600),
    /**
     * <code>VERIFY_CHALLENGE = 601;</code>
     */
    VERIFY_CHALLENGE(601),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ECHO = 666;</code>
     */
    ECHO(666),
    /**
     * <code>DEBUG_UPDATE_INVENTORY = 700;</code>
     */
    DEBUG_UPDATE_INVENTORY(700),
    /**
     * <code>DEBUG_DELETE_PLAYER = 701;</code>
     */
    DEBUG_DELETE_PLAYER(701),
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_REGISTRATION = 800;</code>
     */
    SFIDA_REGISTRATION(800),
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SFIDA_ACTION_LOG = 801;</code>
     */
    SFIDA_ACTION_LOG(801),
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_CERTIFICATION = 802;</code>
     */
    SFIDA_CERTIFICATION(802),
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_UPDATE = 803;</code>
     */
    SFIDA_UPDATE(803),
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_ACTION = 804;</code>
     */
    SFIDA_ACTION(804),
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_DOWSER = 805;</code>
     */
    SFIDA_DOWSER(805),
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_CAPTURE = 806;</code>
     */
    SFIDA_CAPTURE(806),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No implementation required
     * </pre>
     *
     * <code>METHOD_UNSET = 0;</code>
     */
    public static final int METHOD_UNSET_VALUE = 0;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>PLAYER_UPDATE = 1;</code>
     */
    public static final int PLAYER_UPDATE_VALUE = 1;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_PLAYER = 2;</code>
     */
    public static final int GET_PLAYER_VALUE = 2;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_INVENTORY = 4;</code>
     */
    public static final int GET_INVENTORY_VALUE = 4;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>DOWNLOAD_SETTINGS = 5;</code>
     */
    public static final int DOWNLOAD_SETTINGS_VALUE = 5;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>DOWNLOAD_ITEM_TEMPLATES = 6;</code>
     */
    public static final int DOWNLOAD_ITEM_TEMPLATES_VALUE = 6;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>DOWNLOAD_REMOTE_CONFIG_VERSION = 7;</code>
     */
    public static final int DOWNLOAD_REMOTE_CONFIG_VERSION_VALUE = 7;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>FORT_SEARCH = 101;</code>
     */
    public static final int FORT_SEARCH_VALUE = 101;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ENCOUNTER = 102;</code>
     */
    public static final int ENCOUNTER_VALUE = 102;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>CATCH_POKEMON = 103;</code>
     */
    public static final int CATCH_POKEMON_VALUE = 103;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>FORT_DETAILS = 104;</code>
     */
    public static final int FORT_DETAILS_VALUE = 104;
    /**
     * <pre>
     * Can't find this one
     * </pre>
     *
     * <code>ITEM_USE = 105;</code>
     */
    public static final int ITEM_USE_VALUE = 105;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_MAP_OBJECTS = 106;</code>
     */
    public static final int GET_MAP_OBJECTS_VALUE = 106;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>FORT_DEPLOY_POKEMON = 110;</code>
     */
    public static final int FORT_DEPLOY_POKEMON_VALUE = 110;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>FORT_RECALL_POKEMON = 111;</code>
     */
    public static final int FORT_RECALL_POKEMON_VALUE = 111;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>RELEASE_POKEMON = 112;</code>
     */
    public static final int RELEASE_POKEMON_VALUE = 112;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_POTION = 113;</code>
     */
    public static final int USE_ITEM_POTION_VALUE = 113;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_CAPTURE = 114;</code>
     */
    public static final int USE_ITEM_CAPTURE_VALUE = 114;
    /**
     * <pre>
     * Can't find this one
     * </pre>
     *
     * <code>USE_ITEM_FLEE = 115;</code>
     */
    public static final int USE_ITEM_FLEE_VALUE = 115;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_REVIVE = 116;</code>
     */
    public static final int USE_ITEM_REVIVE_VALUE = 116;
    /**
     * <pre>
     * Not yet implemented in the game
     * </pre>
     *
     * <code>TRADE_SEARCH = 117;</code>
     */
    public static final int TRADE_SEARCH_VALUE = 117;
    /**
     * <pre>
     * Not yet implemented in the game
     * </pre>
     *
     * <code>TRADE_OFFER = 118;</code>
     */
    public static final int TRADE_OFFER_VALUE = 118;
    /**
     * <pre>
     * Not yet implemented in the game
     * </pre>
     *
     * <code>TRADE_RESPONSE = 119;</code>
     */
    public static final int TRADE_RESPONSE_VALUE = 119;
    /**
     * <pre>
     * Not yet implemented in the game
     * </pre>
     *
     * <code>TRADE_RESULT = 120;</code>
     */
    public static final int TRADE_RESULT_VALUE = 120;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_PLAYER_PROFILE = 121;</code>
     */
    public static final int GET_PLAYER_PROFILE_VALUE = 121;
    /**
     * <pre>
     * Can't find this one
     * </pre>
     *
     * <code>GET_ITEM_PACK = 122;</code>
     */
    public static final int GET_ITEM_PACK_VALUE = 122;
    /**
     * <pre>
     * Can't find this one
     * </pre>
     *
     * <code>BUY_ITEM_PACK = 123;</code>
     */
    public static final int BUY_ITEM_PACK_VALUE = 123;
    /**
     * <pre>
     * Can't find this one
     * </pre>
     *
     * <code>BUY_GEM_PACK = 124;</code>
     */
    public static final int BUY_GEM_PACK_VALUE = 124;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>EVOLVE_POKEMON = 125;</code>
     */
    public static final int EVOLVE_POKEMON_VALUE = 125;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_HATCHED_EGGS = 126;</code>
     */
    public static final int GET_HATCHED_EGGS_VALUE = 126;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ENCOUNTER_TUTORIAL_COMPLETE = 127;</code>
     */
    public static final int ENCOUNTER_TUTORIAL_COMPLETE_VALUE = 127;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>LEVEL_UP_REWARDS = 128;</code>
     */
    public static final int LEVEL_UP_REWARDS_VALUE = 128;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>CHECK_AWARDED_BADGES = 129;</code>
     */
    public static final int CHECK_AWARDED_BADGES_VALUE = 129;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_GYM = 133;</code>
     */
    public static final int USE_ITEM_GYM_VALUE = 133;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_GYM_DETAILS = 134;</code>
     */
    public static final int GET_GYM_DETAILS_VALUE = 134;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>START_GYM_BATTLE = 135;</code>
     */
    public static final int START_GYM_BATTLE_VALUE = 135;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ATTACK_GYM = 136;</code>
     */
    public static final int ATTACK_GYM_VALUE = 136;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>RECYCLE_INVENTORY_ITEM = 137;</code>
     */
    public static final int RECYCLE_INVENTORY_ITEM_VALUE = 137;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>COLLECT_DAILY_BONUS = 138;</code>
     */
    public static final int COLLECT_DAILY_BONUS_VALUE = 138;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_XP_BOOST = 139;</code>
     */
    public static final int USE_ITEM_XP_BOOST_VALUE = 139;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_ITEM_EGG_INCUBATOR = 140;</code>
     */
    public static final int USE_ITEM_EGG_INCUBATOR_VALUE = 140;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>USE_INCENSE = 141;</code>
     */
    public static final int USE_INCENSE_VALUE = 141;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_INCENSE_POKEMON = 142;</code>
     */
    public static final int GET_INCENSE_POKEMON_VALUE = 142;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>INCENSE_ENCOUNTER = 143;</code>
     */
    public static final int INCENSE_ENCOUNTER_VALUE = 143;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ADD_FORT_MODIFIER = 144;</code>
     */
    public static final int ADD_FORT_MODIFIER_VALUE = 144;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>DISK_ENCOUNTER = 145;</code>
     */
    public static final int DISK_ENCOUNTER_VALUE = 145;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>COLLECT_DAILY_DEFENDER_BONUS = 146;</code>
     */
    public static final int COLLECT_DAILY_DEFENDER_BONUS_VALUE = 146;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>UPGRADE_POKEMON = 147;</code>
     */
    public static final int UPGRADE_POKEMON_VALUE = 147;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_FAVORITE_POKEMON = 148;</code>
     */
    public static final int SET_FAVORITE_POKEMON_VALUE = 148;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>NICKNAME_POKEMON = 149;</code>
     */
    public static final int NICKNAME_POKEMON_VALUE = 149;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>EQUIP_BADGE = 150;</code>
     */
    public static final int EQUIP_BADGE_VALUE = 150;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_CONTACT_SETTINGS = 151;</code>
     */
    public static final int SET_CONTACT_SETTINGS_VALUE = 151;
    /**
     * <code>SET_BUDDY_POKEMON = 152;</code>
     */
    public static final int SET_BUDDY_POKEMON_VALUE = 152;
    /**
     * <code>GET_BUDDY_WALKED = 153;</code>
     */
    public static final int GET_BUDDY_WALKED_VALUE = 153;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_ASSET_DIGEST = 300;</code>
     */
    public static final int GET_ASSET_DIGEST_VALUE = 300;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_DOWNLOAD_URLS = 301;</code>
     */
    public static final int GET_DOWNLOAD_URLS_VALUE = 301;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>GET_SUGGESTED_CODENAMES = 401;</code>
     */
    public static final int GET_SUGGESTED_CODENAMES_VALUE = 401;
    /**
     * <pre>
     * Implemented [R &amp; M] TEST RESPONSE
     * </pre>
     *
     * <code>CHECK_CODENAME_AVAILABLE = 402;</code>
     */
    public static final int CHECK_CODENAME_AVAILABLE_VALUE = 402;
    /**
     * <pre>
     * Implemented [R &amp; M] TEST RESPONSE
     * </pre>
     *
     * <code>CLAIM_CODENAME = 403;</code>
     */
    public static final int CLAIM_CODENAME_VALUE = 403;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_AVATAR = 404;</code>
     */
    public static final int SET_AVATAR_VALUE = 404;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SET_PLAYER_TEAM = 405;</code>
     */
    public static final int SET_PLAYER_TEAM_VALUE = 405;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>MARK_TUTORIAL_COMPLETE = 406;</code>
     */
    public static final int MARK_TUTORIAL_COMPLETE_VALUE = 406;
    /**
     * <pre>
     * Can't find this one
     * </pre>
     *
     * <code>LOAD_SPAWN_POINTS = 500;</code>
     */
    public static final int LOAD_SPAWN_POINTS_VALUE = 500;
    /**
     * <code>CHECK_CHALLENGE = 600;</code>
     */
    public static final int CHECK_CHALLENGE_VALUE = 600;
    /**
     * <code>VERIFY_CHALLENGE = 601;</code>
     */
    public static final int VERIFY_CHALLENGE_VALUE = 601;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>ECHO = 666;</code>
     */
    public static final int ECHO_VALUE = 666;
    /**
     * <code>DEBUG_UPDATE_INVENTORY = 700;</code>
     */
    public static final int DEBUG_UPDATE_INVENTORY_VALUE = 700;
    /**
     * <code>DEBUG_DELETE_PLAYER = 701;</code>
     */
    public static final int DEBUG_DELETE_PLAYER_VALUE = 701;
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_REGISTRATION = 800;</code>
     */
    public static final int SFIDA_REGISTRATION_VALUE = 800;
    /**
     * <pre>
     * Implemented [R &amp; M]
     * </pre>
     *
     * <code>SFIDA_ACTION_LOG = 801;</code>
     */
    public static final int SFIDA_ACTION_LOG_VALUE = 801;
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_CERTIFICATION = 802;</code>
     */
    public static final int SFIDA_CERTIFICATION_VALUE = 802;
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_UPDATE = 803;</code>
     */
    public static final int SFIDA_UPDATE_VALUE = 803;
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_ACTION = 804;</code>
     */
    public static final int SFIDA_ACTION_VALUE = 804;
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_DOWSER = 805;</code>
     */
    public static final int SFIDA_DOWSER_VALUE = 805;
    /**
     * <pre>
     * Not yet released.
     * </pre>
     *
     * <code>SFIDA_CAPTURE = 806;</code>
     */
    public static final int SFIDA_CAPTURE_VALUE = 806;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RequestType valueOf(int value) {
      return forNumber(value);
    }

    public static RequestType forNumber(int value) {
      switch (value) {
        case 0: return METHOD_UNSET;
        case 1: return PLAYER_UPDATE;
        case 2: return GET_PLAYER;
        case 4: return GET_INVENTORY;
        case 5: return DOWNLOAD_SETTINGS;
        case 6: return DOWNLOAD_ITEM_TEMPLATES;
        case 7: return DOWNLOAD_REMOTE_CONFIG_VERSION;
        case 101: return FORT_SEARCH;
        case 102: return ENCOUNTER;
        case 103: return CATCH_POKEMON;
        case 104: return FORT_DETAILS;
        case 105: return ITEM_USE;
        case 106: return GET_MAP_OBJECTS;
        case 110: return FORT_DEPLOY_POKEMON;
        case 111: return FORT_RECALL_POKEMON;
        case 112: return RELEASE_POKEMON;
        case 113: return USE_ITEM_POTION;
        case 114: return USE_ITEM_CAPTURE;
        case 115: return USE_ITEM_FLEE;
        case 116: return USE_ITEM_REVIVE;
        case 117: return TRADE_SEARCH;
        case 118: return TRADE_OFFER;
        case 119: return TRADE_RESPONSE;
        case 120: return TRADE_RESULT;
        case 121: return GET_PLAYER_PROFILE;
        case 122: return GET_ITEM_PACK;
        case 123: return BUY_ITEM_PACK;
        case 124: return BUY_GEM_PACK;
        case 125: return EVOLVE_POKEMON;
        case 126: return GET_HATCHED_EGGS;
        case 127: return ENCOUNTER_TUTORIAL_COMPLETE;
        case 128: return LEVEL_UP_REWARDS;
        case 129: return CHECK_AWARDED_BADGES;
        case 133: return USE_ITEM_GYM;
        case 134: return GET_GYM_DETAILS;
        case 135: return START_GYM_BATTLE;
        case 136: return ATTACK_GYM;
        case 137: return RECYCLE_INVENTORY_ITEM;
        case 138: return COLLECT_DAILY_BONUS;
        case 139: return USE_ITEM_XP_BOOST;
        case 140: return USE_ITEM_EGG_INCUBATOR;
        case 141: return USE_INCENSE;
        case 142: return GET_INCENSE_POKEMON;
        case 143: return INCENSE_ENCOUNTER;
        case 144: return ADD_FORT_MODIFIER;
        case 145: return DISK_ENCOUNTER;
        case 146: return COLLECT_DAILY_DEFENDER_BONUS;
        case 147: return UPGRADE_POKEMON;
        case 148: return SET_FAVORITE_POKEMON;
        case 149: return NICKNAME_POKEMON;
        case 150: return EQUIP_BADGE;
        case 151: return SET_CONTACT_SETTINGS;
        case 152: return SET_BUDDY_POKEMON;
        case 153: return GET_BUDDY_WALKED;
        case 300: return GET_ASSET_DIGEST;
        case 301: return GET_DOWNLOAD_URLS;
        case 401: return GET_SUGGESTED_CODENAMES;
        case 402: return CHECK_CODENAME_AVAILABLE;
        case 403: return CLAIM_CODENAME;
        case 404: return SET_AVATAR;
        case 405: return SET_PLAYER_TEAM;
        case 406: return MARK_TUTORIAL_COMPLETE;
        case 500: return LOAD_SPAWN_POINTS;
        case 600: return CHECK_CHALLENGE;
        case 601: return VERIFY_CHALLENGE;
        case 666: return ECHO;
        case 700: return DEBUG_UPDATE_INVENTORY;
        case 701: return DEBUG_DELETE_PLAYER;
        case 800: return SFIDA_REGISTRATION;
        case 801: return SFIDA_ACTION_LOG;
        case 802: return SFIDA_CERTIFICATION;
        case 803: return SFIDA_UPDATE;
        case 804: return SFIDA_ACTION;
        case 805: return SFIDA_DOWSER;
        case 806: return SFIDA_CAPTURE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RequestType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RequestType>() {
            public RequestType findValueByNumber(int number) {
              return RequestType.forNumber(number);
            }
          };

    private final int value;

    private RequestType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.github.aeonlucid.pogoprotos.networking.requests.RequestType)
  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.aeonlucid.pogoprotos.networking.requests.Request)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
     */
    int getRequestTypeValue();
    /**
     * <code>optional .com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
     */
    com.github.aeonlucid.pogoprotos.networking.Requests.RequestType getRequestType();

    /**
     * <code>optional bytes request_message = 2;</code>
     */
    com.google.protobuf.ByteString getRequestMessage();
  }
  /**
   * Protobuf type {@code com.github.aeonlucid.pogoprotos.networking.requests.Request}
   */
  public  static final class Request extends
      com.google.protobuf.GeneratedMessageLite<
          Request, Request.Builder> implements
      // @@protoc_insertion_point(message_implements:com.github.aeonlucid.pogoprotos.networking.requests.Request)
      RequestOrBuilder {
    private Request() {
      requestMessage_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int REQUEST_TYPE_FIELD_NUMBER = 1;
    private int requestType_;
    /**
     * <code>optional .com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
     */
    public int getRequestTypeValue() {
      return requestType_;
    }
    /**
     * <code>optional .com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
     */
    public com.github.aeonlucid.pogoprotos.networking.Requests.RequestType getRequestType() {
      com.github.aeonlucid.pogoprotos.networking.Requests.RequestType result = com.github.aeonlucid.pogoprotos.networking.Requests.RequestType.forNumber(requestType_);
      return result == null ? com.github.aeonlucid.pogoprotos.networking.Requests.RequestType.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
     */
    private void setRequestTypeValue(int value) {
        requestType_ = value;
    }
    /**
     * <code>optional .com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
     */
    private void setRequestType(com.github.aeonlucid.pogoprotos.networking.Requests.RequestType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      requestType_ = value.getNumber();
    }
    /**
     * <code>optional .com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
     */
    private void clearRequestType() {
      
      requestType_ = 0;
    }

    public static final int REQUEST_MESSAGE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString requestMessage_;
    /**
     * <code>optional bytes request_message = 2;</code>
     */
    public com.google.protobuf.ByteString getRequestMessage() {
      return requestMessage_;
    }
    /**
     * <code>optional bytes request_message = 2;</code>
     */
    private void setRequestMessage(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      requestMessage_ = value;
    }
    /**
     * <code>optional bytes request_message = 2;</code>
     */
    private void clearRequestMessage() {
      
      requestMessage_ = getDefaultInstance().getRequestMessage();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (requestType_ != com.github.aeonlucid.pogoprotos.networking.Requests.RequestType.METHOD_UNSET.getNumber()) {
        output.writeEnum(1, requestType_);
      }
      if (!requestMessage_.isEmpty()) {
        output.writeBytes(2, requestMessage_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (requestType_ != com.github.aeonlucid.pogoprotos.networking.Requests.RequestType.METHOD_UNSET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, requestType_);
      }
      if (!requestMessage_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, requestMessage_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.aeonlucid.pogoprotos.networking.Requests.Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.github.aeonlucid.pogoprotos.networking.requests.Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.github.aeonlucid.pogoprotos.networking.Requests.Request, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.aeonlucid.pogoprotos.networking.requests.Request)
        com.github.aeonlucid.pogoprotos.networking.Requests.RequestOrBuilder {
      // Construct using com.github.aeonlucid.pogoprotos.networking.Requests.Request.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
       */
      public int getRequestTypeValue() {
        return instance.getRequestTypeValue();
      }
      /**
       * <code>optional .com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
       */
      public Builder setRequestTypeValue(int value) {
        copyOnWrite();
        instance.setRequestTypeValue(value);
        return this;
      }
      /**
       * <code>optional .com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
       */
      public com.github.aeonlucid.pogoprotos.networking.Requests.RequestType getRequestType() {
        return instance.getRequestType();
      }
      /**
       * <code>optional .com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
       */
      public Builder setRequestType(com.github.aeonlucid.pogoprotos.networking.Requests.RequestType value) {
        copyOnWrite();
        instance.setRequestType(value);
        return this;
      }
      /**
       * <code>optional .com.github.aeonlucid.pogoprotos.networking.requests.RequestType request_type = 1;</code>
       */
      public Builder clearRequestType() {
        copyOnWrite();
        instance.clearRequestType();
        return this;
      }

      /**
       * <code>optional bytes request_message = 2;</code>
       */
      public com.google.protobuf.ByteString getRequestMessage() {
        return instance.getRequestMessage();
      }
      /**
       * <code>optional bytes request_message = 2;</code>
       */
      public Builder setRequestMessage(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setRequestMessage(value);
        return this;
      }
      /**
       * <code>optional bytes request_message = 2;</code>
       */
      public Builder clearRequestMessage() {
        copyOnWrite();
        instance.clearRequestMessage();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.github.aeonlucid.pogoprotos.networking.requests.Request)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.github.aeonlucid.pogoprotos.networking.Requests.Request();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.github.aeonlucid.pogoprotos.networking.Requests.Request other = (com.github.aeonlucid.pogoprotos.networking.Requests.Request) arg1;
          requestType_ = visitor.visitInt(requestType_ != 0, requestType_,    other.requestType_ != 0, other.requestType_);
          requestMessage_ = visitor.visitByteString(requestMessage_ != com.google.protobuf.ByteString.EMPTY, requestMessage_,
              other.requestMessage_ != com.google.protobuf.ByteString.EMPTY, other.requestMessage_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  requestType_ = rawValue;
                  break;
                }
                case 18: {

                  requestMessage_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.github.aeonlucid.pogoprotos.networking.Requests.Request.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.github.aeonlucid.pogoprotos.networking.requests.Request)
    private static final com.github.aeonlucid.pogoprotos.networking.Requests.Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Request();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.github.aeonlucid.pogoprotos.networking.Requests.Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Request> PARSER;

    public static com.google.protobuf.Parser<Request> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
